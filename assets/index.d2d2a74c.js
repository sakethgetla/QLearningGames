function bw(n,t){return t.forEach(function(e){e&&typeof e!="string"&&!Array.isArray(e)&&Object.keys(e).forEach(function(s){if(s!=="default"&&!(s in n)){var o=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:function(){return e[s]}})}})}),Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}const ww=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=e(o);fetch(o.href,r)}};ww();const Hs={};function Cw(n){Hs.context=n}let fx=yx;const Mh={},gi=1,Gc=2,mx={owned:null,cleanups:null,context:null,owner:null};var An=null;let yl=null,Gi=null,Qn=null,Ns=null,Sd=0;function Iw(n,t){const e=An,s=n.length===0?mx:{owned:null,cleanups:null,context:null,owner:t||e};An=s;try{return Ed(()=>n(()=>Rd(s)),!0)}finally{An=e}}function qc(n,t,e){const s=xx(n,t,!1,gi);Td(s)}function Aw(n,t,e){fx=Ew;const s=xx(n,t,!1,gi);s.user=!0,Ns?Ns.push(s):Td(s)}function kw(n){if(Gi)return n();let t;const e=Gi=[];try{t=n()}finally{Gi=null}return Ed(()=>{for(let s=0;s<e.length;s+=1){const o=e[s];if(o.pending!==Mh){const r=o.pending;o.pending=Mh,gx(o,r)}}},!1),t}function Nd(n){let t;return t=n(),t}function $w(n){Aw(()=>Nd(n))}function Sw(n){return An===null||(An.cleanups===null?An.cleanups=[n]:An.cleanups.push(n)),n}function gx(n,t,e){if(Gi)return n.pending===Mh&&Gi.push(n),n.pending=t,t;if(n.comparator&&n.comparator(n.value,t))return t;let s=!1;return n.value=t,n.observers&&n.observers.length&&Ed(()=>{for(let o=0;o<n.observers.length;o+=1){const r=n.observers[o];s&&yl.disposed.has(r),(s&&!r.tState||!s&&!r.state)&&(r.pure?Qn.push(r):Ns.push(r),r.observers&&vx(r)),s||(r.state=gi)}if(Qn.length>1e6)throw Qn=[],new Error},!1),t}function Td(n){if(!n.fn)return;Rd(n);const t=An,e=Sd;An=n,Nw(n,n.value,e),An=t}function Nw(n,t,e){let s;try{s=n.fn(t)}catch(o){_x(o)}(!n.updatedAt||n.updatedAt<=e)&&(n.observers&&n.observers.length?gx(n,s):n.value=s,n.updatedAt=e)}function xx(n,t,e,s=gi,o){const r={fn:n,state:s,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:t,owner:An,context:null,pure:e};return An===null||An!==mx&&(An.owned?An.owned.push(r):An.owned=[r]),r}function qi(n){const t=yl;if(n.state===0||t)return;if(n.state===Gc||t)return Vh(n);if(n.suspense&&Nd(n.suspense.inFallback))return n.suspense.effects.push(n);const e=[n];for(;(n=n.owner)&&(!n.updatedAt||n.updatedAt<Sd);)(n.state||t)&&e.push(n);for(let s=e.length-1;s>=0;s--)if(n=e[s],n.state===gi||t)Td(n);else if(n.state===Gc||t){const o=Qn;Qn=null,Vh(n,e[0]),Qn=o}}function Ed(n,t){if(Qn)return n();let e=!1;t||(Qn=[]),Ns?e=!0:Ns=[],Sd++;try{const s=n();return Tw(e),s}catch(s){_x(s)}finally{Qn=null,e||(Ns=null)}}function Tw(n){Qn&&(yx(Qn),Qn=null),!n&&(Ns.length?kw(()=>{fx(Ns),Ns=null}):Ns=null)}function yx(n){for(let t=0;t<n.length;t++)qi(n[t])}function Ew(n){let t,e=0;for(t=0;t<n.length;t++){const o=n[t];o.user?n[e++]=o:qi(o)}Hs.context&&Cw();const s=n.length;for(t=0;t<e;t++)qi(n[t]);for(t=s;t<n.length;t++)qi(n[t])}function Vh(n,t){const e=yl;n.state=0;for(let s=0;s<n.sources.length;s+=1){const o=n.sources[s];o.sources&&(o.state===gi||e?o!==t&&qi(o):(o.state===Gc||e)&&Vh(o,t))}}function vx(n){const t=yl;for(let e=0;e<n.observers.length;e+=1){const s=n.observers[e];(!s.state||t)&&(s.state=Gc,s.pure?Qn.push(s):Ns.push(s),s.observers&&vx(s))}}function Rd(n){let t;if(n.sources)for(;n.sources.length;){const e=n.sources.pop(),s=n.sourceSlots.pop(),o=e.observers;if(o&&o.length){const r=o.pop(),i=e.observerSlots.pop();s<o.length&&(r.sourceSlots[i]=s,o[s]=r,e.observerSlots[s]=i)}}if(n.owned){for(t=0;t<n.owned.length;t++)Rd(n.owned[t]);n.owned=null}if(n.cleanups){for(t=0;t<n.cleanups.length;t++)n.cleanups[t]();n.cleanups=null}n.state=0,n.context=null}function _x(n){throw n}function Rw(n,t){return Nd(()=>n(t||{}))}function Dw(n,t,e){let s=e.length,o=t.length,r=s,i=0,c=0,a=t[o-1].nextSibling,u=null;for(;i<o||c<r;){if(t[i]===e[c]){i++,c++;continue}for(;t[o-1]===e[r-1];)o--,r--;if(o===i){const d=r<s?c?e[c-1].nextSibling:e[r-c]:a;for(;c<r;)n.insertBefore(e[c++],d)}else if(r===c)for(;i<o;)(!u||!u.has(t[i]))&&t[i].remove(),i++;else if(t[i]===e[r-1]&&e[c]===t[o-1]){const d=t[--o].nextSibling;n.insertBefore(e[c++],t[i++].nextSibling),n.insertBefore(e[--r],d),t[o]=e[r]}else{if(!u){u=new Map;let l=c;for(;l<r;)u.set(e[l],l++)}const d=u.get(t[i]);if(d!=null)if(c<d&&d<r){let l=i,f=1,m;for(;++l<o&&l<r&&!((m=u.get(t[l]))==null||m!==d+f);)f++;if(f>d-c){const x=t[i];for(;c<d;)n.insertBefore(e[c++],x)}else n.replaceChild(e[c++],t[i++])}else i++;else t[i++].remove()}}}const Dm="_$DX_DELEGATE";function Bw(n,t,e){let s;return Iw(o=>{s=o,t===document?n():Vw(t,n(),t.firstChild?null:void 0,e)}),()=>{s(),t.textContent=""}}function Fw(n,t,e){const s=document.createElement("template");s.innerHTML=n;let o=s.content.firstChild;return e&&(o=o.firstChild),o}function Mw(n,t=window.document){const e=t[Dm]||(t[Dm]=new Set);for(let s=0,o=n.length;s<o;s++){const r=n[s];e.has(r)||(e.add(r),t.addEventListener(r,Lw))}}function Bm(n,t,e){e==null?n.removeAttribute(t):n.setAttribute(t,e)}function Vw(n,t,e,s){if(e!==void 0&&!s&&(s=[]),typeof t!="function")return Hc(n,t,s,e);qc(o=>Hc(n,t(),o,e),s)}function Lw(n){const t=`$$${n.type}`;let e=n.composedPath&&n.composedPath()[0]||n.target;for(n.target!==e&&Object.defineProperty(n,"target",{configurable:!0,value:e}),Object.defineProperty(n,"currentTarget",{configurable:!0,get(){return e||document}}),Hs.registry&&!Hs.done&&(Hs.done=!0,document.querySelectorAll("[id^=pl-]").forEach(s=>s.remove()));e!==null;){const s=e[t];if(s&&!e.disabled){const o=e[`${t}Data`];if(o!==void 0?s(o,n):s(n),n.cancelBubble)return}e=e.host&&e.host!==e&&e.host instanceof Node?e.host:e.parentNode}}function Hc(n,t,e,s,o){for(Hs.context&&!e&&(e=[...n.childNodes]);typeof e=="function";)e=e();if(t===e)return e;const r=typeof t,i=s!==void 0;if(n=i&&e[0]&&e[0].parentNode||n,r==="string"||r==="number"){if(Hs.context)return e;if(r==="number"&&(t=t.toString()),i){let c=e[0];c&&c.nodeType===3?c.data=t:c=document.createTextNode(t),e=Pr(n,e,s,c)}else e!==""&&typeof e=="string"?e=n.firstChild.data=t:e=n.textContent=t}else if(t==null||r==="boolean"){if(Hs.context)return e;e=Pr(n,e,s)}else{if(r==="function")return qc(()=>{let c=t();for(;typeof c=="function";)c=c();e=Hc(n,c,e,s)}),()=>e;if(Array.isArray(t)){const c=[];if(Lh(c,t,o))return qc(()=>e=Hc(n,c,e,s,!0)),()=>e;if(Hs.context){for(let a=0;a<c.length;a++)if(c[a].parentNode)return e=c}if(c.length===0){if(e=Pr(n,e,s),i)return e}else Array.isArray(e)?e.length===0?Fm(n,c,s):Dw(n,e,c):(e&&Pr(n),Fm(n,c));e=c}else if(t instanceof Node){if(Hs.context&&t.parentNode)return e=i?[t]:t;if(Array.isArray(e)){if(i)return e=Pr(n,e,s,t);Pr(n,e,null,t)}else e==null||e===""||!n.firstChild?n.appendChild(t):n.replaceChild(t,n.firstChild);e=t}}return e}function Lh(n,t,e){let s=!1;for(let o=0,r=t.length;o<r;o++){let i=t[o],c;if(i instanceof Node)n.push(i);else if(!(i==null||i===!0||i===!1))if(Array.isArray(i))s=Lh(n,i)||s;else if((c=typeof i)=="string")n.push(document.createTextNode(i));else if(c==="function")if(e){for(;typeof i=="function";)i=i();s=Lh(n,Array.isArray(i)?i:[i])||s}else n.push(i),s=!0;else n.push(document.createTextNode(i.toString()))}return s}function Fm(n,t,e){for(let s=0,o=t.length;s<o;s++)n.insertBefore(t[s],e)}function Pr(n,t,e,s){if(e===void 0)return n.textContent="";const o=s||document.createTextNode("");if(t.length){let r=!1;for(let i=t.length-1;i>=0;i--){const c=t[i];if(o!==c){const a=c.parentNode===n;!r&&!i?a?n.replaceChild(o,c):n.insertBefore(o,e):a&&c.remove()}else r=!0}}else n.insertBefore(o,e);return[o]}var dn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},ce={exports:{}};/**
 * Planck.js v1.0.0-alpha.4
 * @license The MIT license
 * @copyright Copyright (c) 2021 Erin Catto, Ali Shakiba
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */(function(n,t){(function(e,s){s(t)})(dn,function(e){/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var s=function(g,h){return s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(p,y){p.__proto__=y}||function(p,y){for(var _ in y)Object.prototype.hasOwnProperty.call(y,_)&&(p[_]=y[_])},s(g,h)};function o(g,h){if(typeof h!="function"&&h!==null)throw new TypeError("Class extends value "+String(h)+" is not a constructor or null");s(g,h);function p(){this.constructor=g}g.prototype=h===null?Object.create(h):(p.prototype=h.prototype,new p)}var r=function(){return r=Object.assign||function(h){for(var p,y=1,_=arguments.length;y<_;y++){p=arguments[y];for(var $ in p)Object.prototype.hasOwnProperty.call(p,$)&&(h[$]=p[$])}return h},r.apply(this,arguments)};function i(g,h){(g===null||typeof g>"u")&&(g={});var p=r({},g);for(var y in h)h.hasOwnProperty(y)&&typeof g[y]>"u"&&(p[y]=h[y]);if(typeof Object.getOwnPropertySymbols=="function")for(var _=Object.getOwnPropertySymbols(h),$=0;$<_.length;$++){var k=_[$];h.propertyIsEnumerable(k)&&typeof g[k]>"u"&&(p[k]=h[k])}return p}var c=function(){},a=function(g,h,p){},u={assert:a,debug:c},d=Object.create(Math);d.EPSILON=1e-9,d.isFinite=function(g){return typeof g=="number"&&isFinite(g)&&!isNaN(g)},d.assert=function(g){},d.invSqrt=function(g){return 1/Math.sqrt(g)},d.nextPowerOfTwo=function(g){return g|=g>>1,g|=g>>2,g|=g>>4,g|=g>>8,g|=g>>16,g+1},d.isPowerOfTwo=function(g){return g>0&&(g&g-1)===0},d.mod=function(g,h,p){return typeof h>"u"?(p=1,h=0):typeof p>"u"&&(p=h,h=0),p>h?(g=(g-h)%(p-h),g+(g<0?p:h)):(g=(g-p)%(h-p),g+(g<=0?h:p))},d.clamp=function(g,h,p){return g<h?h:g>p?p:g},d.random=function(g,h){return typeof g>"u"?(h=1,g=0):typeof h>"u"&&(h=g,g=0),g===h?g:Math.random()*(h-g)+g};var l=function(){function g(h,p){if(!(this instanceof g))return new g(h,p);typeof h>"u"?(this.x=0,this.y=0):typeof h=="object"?(this.x=h.x,this.y=h.y):(this.x=h,this.y=p)}return g.prototype._serialize=function(){return{x:this.x,y:this.y}},g._deserialize=function(h){var p=Object.create(g.prototype);return p.x=h.x,p.y=h.y,p},g.zero=function(){var h=Object.create(g.prototype);return h.x=0,h.y=0,h},g.neo=function(h,p){var y=Object.create(g.prototype);return y.x=h,y.y=p,y},g.clone=function(h){return g.neo(h.x,h.y)},g.prototype.toString=function(){return JSON.stringify(this)},g.isValid=function(h){return h===null||typeof h>"u"?!1:d.isFinite(h.x)&&d.isFinite(h.y)},g.assert=function(h){},g.prototype.clone=function(){return g.clone(this)},g.prototype.setZero=function(){return this.x=0,this.y=0,this},g.prototype.set=function(h,p){return typeof h=="object"?(this.x=h.x,this.y=h.y):(this.x=h,this.y=p),this},g.prototype.setNum=function(h,p){return this.x=h,this.y=p,this},g.prototype.setVec2=function(h){return this.x=h.x,this.y=h.y,this},g.prototype.wSet=function(h,p,y,_){return typeof y<"u"||typeof _<"u"?this.setCombine(h,p,y,_):this.setMul(h,p)},g.prototype.setCombine=function(h,p,y,_){var $=h*p.x+y*_.x,k=h*p.y+y*_.y;return this.x=$,this.y=k,this},g.prototype.setMul=function(h,p){var y=h*p.x,_=h*p.y;return this.x=y,this.y=_,this},g.prototype.add=function(h){return this.x+=h.x,this.y+=h.y,this},g.prototype.wAdd=function(h,p,y,_){return typeof y<"u"||typeof _<"u"?this.addCombine(h,p,y,_):this.addMul(h,p)},g.prototype.addCombine=function(h,p,y,_){var $=h*p.x+y*_.x,k=h*p.y+y*_.y;return this.x+=$,this.y+=k,this},g.prototype.addMul=function(h,p){var y=h*p.x,_=h*p.y;return this.x+=y,this.y+=_,this},g.prototype.wSub=function(h,p,y,_){return typeof y<"u"||typeof _<"u"?this.subCombine(h,p,y,_):this.subMul(h,p)},g.prototype.subCombine=function(h,p,y,_){var $=h*p.x+y*_.x,k=h*p.y+y*_.y;return this.x-=$,this.y-=k,this},g.prototype.subMul=function(h,p){var y=h*p.x,_=h*p.y;return this.x-=y,this.y-=_,this},g.prototype.sub=function(h){return this.x-=h.x,this.y-=h.y,this},g.prototype.mul=function(h){return this.x*=h,this.y*=h,this},g.prototype.length=function(){return g.lengthOf(this)},g.prototype.lengthSquared=function(){return g.lengthSquared(this)},g.prototype.normalize=function(){var h=this.length();if(h<d.EPSILON)return 0;var p=1/h;return this.x*=p,this.y*=p,h},g.lengthOf=function(h){return d.sqrt(h.x*h.x+h.y*h.y)},g.lengthSquared=function(h){return h.x*h.x+h.y*h.y},g.distance=function(h,p){var y=h.x-p.x,_=h.y-p.y;return d.sqrt(y*y+_*_)},g.distanceSquared=function(h,p){var y=h.x-p.x,_=h.y-p.y;return y*y+_*_},g.areEqual=function(h,p){return h===p||typeof p=="object"&&p!==null&&h.x===p.x&&h.y===p.y},g.skew=function(h){return g.neo(-h.y,h.x)},g.dot=function(h,p){return h.x*p.x+h.y*p.y},g.cross=function(h,p){return typeof p=="number"?g.neo(p*h.y,-p*h.x):typeof h=="number"?g.neo(-h*p.y,h*p.x):h.x*p.y-h.y*p.x},g.crossVec2Vec2=function(h,p){return h.x*p.y-h.y*p.x},g.crossVec2Num=function(h,p){return g.neo(p*h.y,-p*h.x)},g.crossNumVec2=function(h,p){return g.neo(-h*p.y,h*p.x)},g.addCross=function(h,p,y){if(typeof y=="number")return g.neo(y*p.y+h.x,-y*p.x+h.y);if(typeof p=="number")return g.neo(-p*y.y+h.x,p*y.x+h.y)},g.addCrossVec2Num=function(h,p,y){return g.neo(y*p.y+h.x,-y*p.x+h.y)},g.addCrossNumVec2=function(h,p,y){return g.neo(-p*y.y+h.x,p*y.x+h.y)},g.add=function(h,p){return g.neo(h.x+p.x,h.y+p.y)},g.wAdd=function(h,p,y,_){return typeof y<"u"||typeof _<"u"?g.combine(h,p,y,_):g.mulNumVec2(h,p)},g.combine=function(h,p,y,_){return g.zero().setCombine(h,p,y,_)},g.sub=function(h,p){return g.neo(h.x-p.x,h.y-p.y)},g.mul=function(h,p){if(typeof h=="object")return g.neo(h.x*p,h.y*p);if(typeof p=="object")return g.neo(h*p.x,h*p.y)},g.mulVec2Num=function(h,p){return g.neo(h.x*p,h.y*p)},g.mulNumVec2=function(h,p){return g.neo(h*p.x,h*p.y)},g.prototype.neg=function(){return this.x=-this.x,this.y=-this.y,this},g.neg=function(h){return g.neo(-h.x,-h.y)},g.abs=function(h){return g.neo(d.abs(h.x),d.abs(h.y))},g.mid=function(h,p){return g.neo((h.x+p.x)*.5,(h.y+p.y)*.5)},g.upper=function(h,p){return g.neo(d.max(h.x,p.x),d.max(h.y,p.y))},g.lower=function(h,p){return g.neo(d.min(h.x,p.x),d.min(h.y,p.y))},g.prototype.clamp=function(h){var p=this.x*this.x+this.y*this.y;if(p>h*h){var y=d.invSqrt(p);this.x*=y*h,this.y*=y*h}return this},g.clamp=function(h,p){return h=g.neo(h.x,h.y),h.clamp(p),h},g.scaleFn=function(h,p){return function(y){return g.neo(y.x*h,y.y*p)}},g.translateFn=function(h,p){return function(y){return g.neo(y.x+h,y.y+p)}},g}(),f=function(){function g(h,p){if(!(this instanceof g))return new g(h,p);this.lowerBound=l.zero(),this.upperBound=l.zero(),typeof h=="object"&&this.lowerBound.setVec2(h),typeof p=="object"?this.upperBound.setVec2(p):typeof h=="object"&&this.upperBound.setVec2(h)}return g.prototype.isValid=function(){return g.isValid(this)},g.isValid=function(h){return h===null||typeof h>"u"?!1:l.isValid(h.lowerBound)&&l.isValid(h.upperBound)&&l.sub(h.upperBound,h.lowerBound).lengthSquared()>=0},g.assert=function(h){},g.prototype.getCenter=function(){return l.neo((this.lowerBound.x+this.upperBound.x)*.5,(this.lowerBound.y+this.upperBound.y)*.5)},g.prototype.getExtents=function(){return l.neo((this.upperBound.x-this.lowerBound.x)*.5,(this.upperBound.y-this.lowerBound.y)*.5)},g.prototype.getPerimeter=function(){return 2*(this.upperBound.x-this.lowerBound.x+this.upperBound.y-this.lowerBound.y)},g.prototype.combine=function(h,p){p=p||this;var y=h.lowerBound,_=h.upperBound,$=p.lowerBound,k=p.upperBound,S=d.min(y.x,$.x),T=d.min(y.y,$.y),L=d.max(k.x,_.x),F=d.max(k.y,_.y);this.lowerBound.setNum(S,T),this.upperBound.setNum(L,F)},g.prototype.combinePoints=function(h,p){this.lowerBound.setNum(d.min(h.x,p.x),d.min(h.y,p.y)),this.upperBound.setNum(d.max(h.x,p.x),d.max(h.y,p.y))},g.prototype.set=function(h){this.lowerBound.setNum(h.lowerBound.x,h.lowerBound.y),this.upperBound.setNum(h.upperBound.x,h.upperBound.y)},g.prototype.contains=function(h){var p=!0;return p=p&&this.lowerBound.x<=h.lowerBound.x,p=p&&this.lowerBound.y<=h.lowerBound.y,p=p&&h.upperBound.x<=this.upperBound.x,p=p&&h.upperBound.y<=this.upperBound.y,p},g.prototype.extend=function(h){return g.extend(this,h),this},g.extend=function(h,p){h.lowerBound.x-=p,h.lowerBound.y-=p,h.upperBound.x+=p,h.upperBound.y+=p},g.testOverlap=function(h,p){var y=p.lowerBound.x-h.upperBound.x,_=h.lowerBound.x-p.upperBound.x,$=p.lowerBound.y-h.upperBound.y,k=h.lowerBound.y-p.upperBound.y;return!(y>0||$>0||_>0||k>0)},g.areEqual=function(h,p){return l.areEqual(h.lowerBound,p.lowerBound)&&l.areEqual(h.upperBound,p.upperBound)},g.diff=function(h,p){var y=d.max(0,d.min(h.upperBound.x,p.upperBound.x)-d.max(p.lowerBound.x,h.lowerBound.x)),_=d.max(0,d.min(h.upperBound.y,p.upperBound.y)-d.max(p.lowerBound.y,h.lowerBound.y)),$=h.upperBound.x-h.lowerBound.x,k=h.upperBound.y-h.lowerBound.y,S=p.upperBound.x-p.lowerBound.x,T=p.upperBound.y-p.lowerBound.y;return $*k+S*T-y*_},g.prototype.rayCast=function(h,p){for(var y=-1/0,_=1/0,$=p.p1,k=l.sub(p.p2,p.p1),S=l.abs(k),T=l.zero(),L="x";L!==null;L=L==="x"?"y":null)if(S.x<d.EPSILON){if($[L]<this.lowerBound[L]||this.upperBound[L]<$[L])return!1}else{var F=1/k[L],O=(this.lowerBound[L]-$[L])*F,V=(this.upperBound[L]-$[L])*F,R=-1;if(O>V){var D=O;O=V,V=D,R=1}if(O>y&&(T.setZero(),T[L]=R,y=O),_=d.min(_,V),y>_)return!1}return y<0||p.maxFraction<y?!1:(h.fraction=y,h.normal=T,!0)},g.prototype.toString=function(){return JSON.stringify(this)},g}(),m=function(){function g(){}return Object.defineProperty(g,"linearSlopSquared",{get:function(){return g.linearSlop*g.linearSlop},enumerable:!1,configurable:!0}),Object.defineProperty(g,"polygonRadius",{get:function(){return 2*g.linearSlop},enumerable:!1,configurable:!0}),Object.defineProperty(g,"maxTranslationSquared",{get:function(){return g.maxTranslation*g.maxTranslation},enumerable:!1,configurable:!0}),Object.defineProperty(g,"maxRotationSquared",{get:function(){return g.maxRotation*g.maxRotation},enumerable:!1,configurable:!0}),Object.defineProperty(g,"linearSleepToleranceSqr",{get:function(){return Math.pow(g.linearSleepTolerance,2)},enumerable:!1,configurable:!0}),Object.defineProperty(g,"angularSleepToleranceSqr",{get:function(){return Math.pow(g.angularSleepTolerance,2)},enumerable:!1,configurable:!0}),g.maxManifoldPoints=2,g.maxPolygonVertices=12,g.aabbExtension=.1,g.aabbMultiplier=2,g.linearSlop=.005,g.angularSlop=2/180*Math.PI,g.maxSubSteps=8,g.maxTOIContacts=32,g.maxTOIIterations=20,g.maxDistnceIterations=20,g.velocityThreshold=1,g.maxLinearCorrection=.2,g.maxAngularCorrection=8/180*Math.PI,g.maxTranslation=2,g.maxRotation=.5*Math.PI,g.baumgarte=.2,g.toiBaugarte=.75,g.timeToSleep=.5,g.linearSleepTolerance=.01,g.angularSleepTolerance=2/180*Math.PI,g}(),x=function(){function g(h){this._list=[],this._max=1/0,this._createCount=0,this._outCount=0,this._inCount=0,this._discardCount=0,this._list=[],this._max=h.max||this._max,this._createFn=h.create,this._outFn=h.allocate,this._inFn=h.release,this._discardFn=h.discard}return g.prototype.max=function(h){return typeof h=="number"?(this._max=h,this):this._max},g.prototype.size=function(){return this._list.length},g.prototype.allocate=function(){var h;return this._list.length>0?h=this._list.shift():(this._createCount++,typeof this._createFn=="function"?h=this._createFn():h={}),this._outCount++,typeof this._outFn=="function"&&this._outFn(h),h},g.prototype.release=function(h){this._list.length<this._max?(this._inCount++,typeof this._inFn=="function"&&this._inFn(h),this._list.push(h)):(this._discardCount++,typeof this._discardFn=="function"&&(h=this._discardFn(h)))},g.prototype.toString=function(){return" +"+this._createCount+" >"+this._outCount+" <"+this._inCount+" -"+this._discardCount+" ="+this._list.length+"/"+this._max},g}(),v=function(){function g(h){this.aabb=new f,this.userData=null,this.parent=null,this.child1=null,this.child2=null,this.height=-1,this.id=h}return g.prototype.toString=function(){return this.id+": "+this.userData},g.prototype.isLeaf=function(){return this.child1==null},g}(),b=function(){function g(){this.inputPool=new x({create:function(){return{}},release:function(h){}}),this.stackPool=new x({create:function(){return[]},release:function(h){h.length=0}}),this.iteratorPool=new x({create:function(){return new w},release:function(h){h.close()}}),this.m_root=null,this.m_nodes={},this.m_lastProxyId=0,this.m_pool=new x({create:function(){return new v}})}return g.prototype.getUserData=function(h){var p=this.m_nodes[h];return p.userData},g.prototype.getFatAABB=function(h){var p=this.m_nodes[h];return p.aabb},g.prototype.allocateNode=function(){var h=this.m_pool.allocate();return h.id=++this.m_lastProxyId,h.userData=null,h.parent=null,h.child1=null,h.child2=null,h.height=-1,this.m_nodes[h.id]=h,h},g.prototype.freeNode=function(h){this.m_pool.release(h),h.height=-1,delete this.m_nodes[h.id]},g.prototype.createProxy=function(h,p){var y=this.allocateNode();return y.aabb.set(h),f.extend(y.aabb,m.aabbExtension),y.userData=p,y.height=0,this.insertLeaf(y),y.id},g.prototype.destroyProxy=function(h){var p=this.m_nodes[h];this.removeLeaf(p),this.freeNode(p)},g.prototype.moveProxy=function(h,p,y){var _=this.m_nodes[h];return _.aabb.contains(p)?!1:(this.removeLeaf(_),_.aabb.set(p),p=_.aabb,f.extend(p,m.aabbExtension),y.x<0?p.lowerBound.x+=y.x*m.aabbMultiplier:p.upperBound.x+=y.x*m.aabbMultiplier,y.y<0?p.lowerBound.y+=y.y*m.aabbMultiplier:p.upperBound.y+=y.y*m.aabbMultiplier,this.insertLeaf(_),!0)},g.prototype.insertLeaf=function(h){if(this.m_root==null){this.m_root=h,this.m_root.parent=null;return}for(var p=h.aabb,y=this.m_root;!y.isLeaf();){var _=y.child1,$=y.child2,k=y.aabb.getPerimeter(),S=new f;S.combine(y.aabb,p);var T=S.getPerimeter(),L=2*T,F=2*(T-k),O=void 0;if(_.isLeaf()){var V=new f;V.combine(p,_.aabb),O=V.getPerimeter()+F}else{var V=new f;V.combine(p,_.aabb);var R=_.aabb.getPerimeter(),D=V.getPerimeter();O=D-R+F}var W=void 0;if($.isLeaf()){var V=new f;V.combine(p,$.aabb),W=V.getPerimeter()+F}else{var V=new f;V.combine(p,$.aabb);var R=$.aabb.getPerimeter(),D=V.getPerimeter();W=D-R+F}if(L<O&&L<W)break;O<W?y=_:y=$}var H=y,j=H.parent,ot=this.allocateNode();for(ot.parent=j,ot.userData=null,ot.aabb.combine(p,H.aabb),ot.height=H.height+1,j!=null?(j.child1===H?j.child1=ot:j.child2=ot,ot.child1=H,ot.child2=h,H.parent=ot,h.parent=ot):(ot.child1=H,ot.child2=h,H.parent=ot,h.parent=ot,this.m_root=ot),y=h.parent;y!=null;){y=this.balance(y);var _=y.child1,$=y.child2;y.height=1+d.max(_.height,$.height),y.aabb.combine(_.aabb,$.aabb),y=y.parent}},g.prototype.removeLeaf=function(h){if(h===this.m_root){this.m_root=null;return}var p=h.parent,y=p.parent,_;if(p.child1===h?_=p.child2:_=p.child1,y!=null){y.child1===p?y.child1=_:y.child2=_,_.parent=y,this.freeNode(p);for(var $=y;$!=null;){$=this.balance($);var k=$.child1,S=$.child2;$.aabb.combine(k.aabb,S.aabb),$.height=1+d.max(k.height,S.height),$=$.parent}}else this.m_root=_,_.parent=null,this.freeNode(p)},g.prototype.balance=function(h){var p=h;if(p.isLeaf()||p.height<2)return h;var y=p.child1,_=p.child2,$=_.height-y.height;if($>1){var k=_.child1,S=_.child2;return _.child1=p,_.parent=p.parent,p.parent=_,_.parent!=null?_.parent.child1===h?_.parent.child1=_:_.parent.child2=_:this.m_root=_,k.height>S.height?(_.child2=k,p.child2=S,S.parent=p,p.aabb.combine(y.aabb,S.aabb),_.aabb.combine(p.aabb,k.aabb),p.height=1+d.max(y.height,S.height),_.height=1+d.max(p.height,k.height)):(_.child2=S,p.child2=k,k.parent=p,p.aabb.combine(y.aabb,k.aabb),_.aabb.combine(p.aabb,S.aabb),p.height=1+d.max(y.height,k.height),_.height=1+d.max(p.height,S.height)),_}if($<-1){var T=y.child1,L=y.child2;return y.child1=p,y.parent=p.parent,p.parent=y,y.parent!=null?y.parent.child1===p?y.parent.child1=y:y.parent.child2=y:this.m_root=y,T.height>L.height?(y.child2=T,p.child1=L,L.parent=p,p.aabb.combine(_.aabb,L.aabb),y.aabb.combine(p.aabb,T.aabb),p.height=1+d.max(_.height,L.height),y.height=1+d.max(p.height,T.height)):(y.child2=L,p.child1=T,T.parent=p,p.aabb.combine(_.aabb,T.aabb),y.aabb.combine(p.aabb,L.aabb),p.height=1+d.max(_.height,T.height),y.height=1+d.max(p.height,L.height)),y}return p},g.prototype.getHeight=function(){return this.m_root==null?0:this.m_root.height},g.prototype.getAreaRatio=function(){if(this.m_root==null)return 0;for(var h=this.m_root,p=h.aabb.getPerimeter(),y=0,_,$=this.iteratorPool.allocate().preorder(this.m_root);_=$.next();)_.height<0||(y+=_.aabb.getPerimeter());return this.iteratorPool.release($),y/p},g.prototype.computeHeight=function(h){var p;if(typeof h<"u"?p=this.m_nodes[h]:p=this.m_root,p.isLeaf())return 0;var y=this.computeHeight(p.child1.id),_=this.computeHeight(p.child2.id);return 1+d.max(y,_)},g.prototype.validateStructure=function(h){if(h!=null){this.m_root;var p=h.child1,y=h.child2;h.isLeaf()||(this.validateStructure(p),this.validateStructure(y))}},g.prototype.validateMetrics=function(h){if(h!=null){var p=h.child1,y=h.child2;if(!h.isLeaf()){var _=p.height,$=y.height;1+d.max(_,$);var k=new f;k.combine(p.aabb,y.aabb),this.validateMetrics(p),this.validateMetrics(y)}}},g.prototype.validate=function(){this.validateStructure(this.m_root),this.validateMetrics(this.m_root)},g.prototype.getMaxBalance=function(){for(var h=0,p,y=this.iteratorPool.allocate().preorder(this.m_root);p=y.next();)if(!(p.height<=1)){var _=d.abs(p.child2.height-p.child1.height);h=d.max(h,_)}return this.iteratorPool.release(y),h},g.prototype.rebuildBottomUp=function(){for(var h=[],p=0,y,_=this.iteratorPool.allocate().preorder(this.m_root);y=_.next();)y.height<0||(y.isLeaf()?(y.parent=null,h[p]=y,++p):this.freeNode(y));for(this.iteratorPool.release(_);p>1;){for(var $=1/0,k=-1,S=-1,T=0;T<p;++T)for(var L=h[T].aabb,F=T+1;F<p;++F){var O=h[F].aabb,V=new f;V.combine(L,O);var R=V.getPerimeter();R<$&&(k=T,S=F,$=R)}var D=h[k],W=h[S],H=this.allocateNode();H.child1=D,H.child2=W,H.height=1+d.max(D.height,W.height),H.aabb.combine(D.aabb,W.aabb),H.parent=null,D.parent=H,W.parent=H,h[S]=h[p-1],h[k]=H,--p}this.m_root=h[0],this.validate()},g.prototype.shiftOrigin=function(h){for(var p,y=this.iteratorPool.allocate().preorder(this.m_root);p=y.next();){var _=p.aabb;_.lowerBound.x-=h.x,_.lowerBound.y-=h.y,_.upperBound.x-=h.x,_.upperBound.y-=h.y}this.iteratorPool.release(y)},g.prototype.query=function(h,p){var y=this.stackPool.allocate();for(y.push(this.m_root);y.length>0;){var _=y.pop();if(_!=null&&f.testOverlap(_.aabb,h))if(_.isLeaf()){var $=p(_.id);if($===!1)return}else y.push(_.child1),y.push(_.child2)}this.stackPool.release(y)},g.prototype.rayCast=function(h,p){var y=h.p1,_=h.p2,$=l.sub(_,y);$.normalize();var k=l.crossNumVec2(1,$),S=l.abs(k),T=h.maxFraction,L=new f,F=l.combine(1-T,y,T,_);L.combinePoints(y,F);var O=this.stackPool.allocate(),V=this.inputPool.allocate();for(O.push(this.m_root);O.length>0;){var R=O.pop();if(R!=null&&f.testOverlap(R.aabb,L)!==!1){var D=R.aabb.getCenter(),W=R.aabb.getExtents(),H=d.abs(l.dot(k,l.sub(y,D)))-l.dot(S,W);if(!(H>0))if(R.isLeaf()){V.p1=l.clone(h.p1),V.p2=l.clone(h.p2),V.maxFraction=T;var j=p(V,R.id);if(j===0)return;j>0&&(T=j,F=l.combine(1-T,y,T,_),L.combinePoints(y,F))}else O.push(R.child1),O.push(R.child2)}}this.stackPool.release(O),this.inputPool.release(V)},g}(),w=function(){function g(){this.parents=[],this.states=[]}return g.prototype.preorder=function(h){return this.parents.length=0,this.parents.push(h),this.states.length=0,this.states.push(0),this},g.prototype.next=function(){for(;this.parents.length>0;){var h=this.parents.length-1,p=this.parents[h];if(this.states[h]===0)return this.states[h]=1,p;if(this.states[h]===1&&(this.states[h]=2,p.child1))return this.parents.push(p.child1),this.states.push(1),p.child1;if(this.states[h]===2&&(this.states[h]=3,p.child2))return this.parents.push(p.child2),this.states.push(1),p.child2;this.parents.pop(),this.states.pop()}},g.prototype.close=function(){this.parents.length=0},g}(),A=function(){function g(){var h=this;this.m_tree=new b,this.m_proxyCount=0,this.m_moveBuffer=[],this.query=function(p,y){h.m_tree.query(p,y)},this.queryCallback=function(p){if(p===h.m_queryProxyId)return!0;var y=d.min(p,h.m_queryProxyId),_=d.max(p,h.m_queryProxyId),$=h.m_tree.getUserData(y),k=h.m_tree.getUserData(_);return h.m_callback($,k),!0}}return g.prototype.getUserData=function(h){return this.m_tree.getUserData(h)},g.prototype.testOverlap=function(h,p){var y=this.m_tree.getFatAABB(h),_=this.m_tree.getFatAABB(p);return f.testOverlap(y,_)},g.prototype.getFatAABB=function(h){return this.m_tree.getFatAABB(h)},g.prototype.getProxyCount=function(){return this.m_proxyCount},g.prototype.getTreeHeight=function(){return this.m_tree.getHeight()},g.prototype.getTreeBalance=function(){return this.m_tree.getMaxBalance()},g.prototype.getTreeQuality=function(){return this.m_tree.getAreaRatio()},g.prototype.rayCast=function(h,p){this.m_tree.rayCast(h,p)},g.prototype.shiftOrigin=function(h){this.m_tree.shiftOrigin(h)},g.prototype.createProxy=function(h,p){var y=this.m_tree.createProxy(h,p);return this.m_proxyCount++,this.bufferMove(y),y},g.prototype.destroyProxy=function(h){this.unbufferMove(h),this.m_proxyCount--,this.m_tree.destroyProxy(h)},g.prototype.moveProxy=function(h,p,y){var _=this.m_tree.moveProxy(h,p,y);_&&this.bufferMove(h)},g.prototype.touchProxy=function(h){this.bufferMove(h)},g.prototype.bufferMove=function(h){this.m_moveBuffer.push(h)},g.prototype.unbufferMove=function(h){for(var p=0;p<this.m_moveBuffer.length;++p)this.m_moveBuffer[p]===h&&(this.m_moveBuffer[p]=null)},g.prototype.updatePairs=function(h){for(this.m_callback=h;this.m_moveBuffer.length>0;)if(this.m_queryProxyId=this.m_moveBuffer.pop(),this.m_queryProxyId!==null){var p=this.m_tree.getFatAABB(this.m_queryProxyId);this.m_tree.query(p,this.queryCallback)}},g}(),C=function(){function g(h){if(!(this instanceof g))return new g(h);typeof h=="number"?this.setAngle(h):typeof h=="object"?this.setRot(h):this.setIdentity()}return g.neo=function(h){var p=Object.create(g.prototype);return p.setAngle(h),p},g.clone=function(h){var p=Object.create(g.prototype);return p.s=h.s,p.c=h.c,p},g.identity=function(){var h=Object.create(g.prototype);return h.s=0,h.c=1,h},g.isValid=function(h){return h===null||typeof h>"u"?!1:d.isFinite(h.s)&&d.isFinite(h.c)},g.assert=function(h){},g.prototype.setIdentity=function(){this.s=0,this.c=1},g.prototype.set=function(h){typeof h=="object"?(this.s=h.s,this.c=h.c):(this.s=d.sin(h),this.c=d.cos(h))},g.prototype.setRot=function(h){this.s=h.s,this.c=h.c},g.prototype.setAngle=function(h){this.s=d.sin(h),this.c=d.cos(h)},g.prototype.getAngle=function(){return d.atan2(this.s,this.c)},g.prototype.getXAxis=function(){return l.neo(this.c,this.s)},g.prototype.getYAxis=function(){return l.neo(-this.s,this.c)},g.mul=function(h,p){if("c"in p&&"s"in p){var y=g.identity();return y.s=h.s*p.c+h.c*p.s,y.c=h.c*p.c-h.s*p.s,y}else if("x"in p&&"y"in p)return l.neo(h.c*p.x-h.s*p.y,h.s*p.x+h.c*p.y)},g.mulRot=function(h,p){var y=g.identity();return y.s=h.s*p.c+h.c*p.s,y.c=h.c*p.c-h.s*p.s,y},g.mulVec2=function(h,p){return l.neo(h.c*p.x-h.s*p.y,h.s*p.x+h.c*p.y)},g.mulSub=function(h,p,y){var _=h.c*(p.x-y.x)-h.s*(p.y-y.y),$=h.s*(p.x-y.x)+h.c*(p.y-y.y);return l.neo(_,$)},g.mulT=function(h,p){if("c"in p&&"s"in p){var y=g.identity();return y.s=h.c*p.s-h.s*p.c,y.c=h.c*p.c+h.s*p.s,y}else if("x"in p&&"y"in p)return l.neo(h.c*p.x+h.s*p.y,-h.s*p.x+h.c*p.y)},g.mulTRot=function(h,p){var y=g.identity();return y.s=h.c*p.s-h.s*p.c,y.c=h.c*p.c+h.s*p.s,y},g.mulTVec2=function(h,p){return l.neo(h.c*p.x+h.s*p.y,-h.s*p.x+h.c*p.y)},g}(),I=function(){function g(h,p){if(!(this instanceof g))return new g(h,p);this.p=l.zero(),this.q=C.identity(),typeof h<"u"&&this.p.setVec2(h),typeof p<"u"&&this.q.setAngle(p)}return g.clone=function(h){var p=Object.create(g.prototype);return p.p=l.clone(h.p),p.q=C.clone(h.q),p},g.neo=function(h,p){var y=Object.create(g.prototype);return y.p=l.clone(h),y.q=C.clone(p),y},g.identity=function(){var h=Object.create(g.prototype);return h.p=l.zero(),h.q=C.identity(),h},g.prototype.setIdentity=function(){this.p.setZero(),this.q.setIdentity()},g.prototype.set=function(h,p){typeof p>"u"?(this.p.set(h.p),this.q.set(h.q)):(this.p.set(h),this.q.set(p))},g.prototype.setNum=function(h,p){this.p.setVec2(h),this.q.setAngle(p)},g.prototype.setTransform=function(h){this.p.setVec2(h.p),this.q.setRot(h.q)},g.isValid=function(h){return h===null||typeof h>"u"?!1:l.isValid(h.p)&&C.isValid(h.q)},g.assert=function(h){},g.mul=function(h,p){if(Array.isArray(p)){for(var y=[],_=0;_<p.length;_++)y[_]=g.mul(h,p[_]);return y}else{if("x"in p&&"y"in p)return g.mulVec2(h,p);if("p"in p&&"q"in p)return g.mulXf(h,p)}},g.mulAll=function(h,p){for(var y=[],_=0;_<p.length;_++)y[_]=g.mul(h,p[_]);return y},g.mulFn=function(h){return function(p){return g.mul(h,p)}},g.mulVec2=function(h,p){var y=h.q.c*p.x-h.q.s*p.y+h.p.x,_=h.q.s*p.x+h.q.c*p.y+h.p.y;return l.neo(y,_)},g.mulXf=function(h,p){var y=g.identity();return y.q=C.mulRot(h.q,p.q),y.p=l.add(C.mulVec2(h.q,p.p),h.p),y},g.mulT=function(h,p){if("x"in p&&"y"in p)return g.mulTVec2(h,p);if("p"in p&&"q"in p)return g.mulTXf(h,p)},g.mulTVec2=function(h,p){var y=p.x-h.p.x,_=p.y-h.p.y,$=h.q.c*y+h.q.s*_,k=-h.q.s*y+h.q.c*_;return l.neo($,k)},g.mulTXf=function(h,p){var y=g.identity();return y.q.setRot(C.mulTRot(h.q,p.q)),y.p.setVec2(C.mulTVec2(h.q,l.sub(p.p,h.p))),y},g}(),N=function(){function g(h,p){this.localCenter=l.zero(),this.c=l.zero(),this.a=0,this.alpha0=0,this.c0=l.zero(),this.a0=0}return g.prototype.setTransform=function(h){var p=I.mulVec2(h,this.localCenter);this.c.setVec2(p),this.c0.setVec2(p),this.a=h.q.getAngle(),this.a0=h.q.getAngle()},g.prototype.setLocalCenter=function(h,p){this.localCenter.setVec2(h);var y=I.mulVec2(p,this.localCenter);this.c.setVec2(y),this.c0.setVec2(y)},g.prototype.getTransform=function(h,p){p===void 0&&(p=0),h.q.setAngle((1-p)*this.a0+p*this.a),h.p.setCombine(1-p,this.c0,p,this.c),h.p.sub(C.mulVec2(h.q,this.localCenter))},g.prototype.advance=function(h){var p=(h-this.alpha0)/(1-this.alpha0);this.c0.setCombine(p,this.c,1-p,this.c0),this.a0=p*this.a+(1-p)*this.a0,this.alpha0=h},g.prototype.forward=function(){this.a0=this.a,this.c0.setVec2(this.c)},g.prototype.normalize=function(){var h=d.mod(this.a0,-d.PI,+d.PI);this.a-=this.a0-h,this.a0=h},g.prototype.clone=function(){var h=new g;return h.localCenter.setVec2(this.localCenter),h.alpha0=this.alpha0,h.a0=this.a0,h.a=this.a,h.c0.setVec2(this.c0),h.c.setVec2(this.c),h},g.prototype.set=function(h){this.localCenter.setVec2(h.localCenter),this.alpha0=h.alpha0,this.a0=h.a0,this.a=h.a,this.c0.setVec2(h.c0),this.c.setVec2(h.c)},g}(),E=function(){function g(){this.v=l.zero(),this.w=0}return g}(),B=function(){function g(){this.c=l.zero(),this.a=0}return g.prototype.getTransform=function(h,p){return h.q.setAngle(this.a),h.p.setVec2(l.sub(this.c,C.mulVec2(h.q,p))),h},g}(),M=function(){function g(){}return g.prototype._reset=function(){},g.isValid=function(h){return h===null||typeof h>"u"?!1:typeof h.m_type=="string"&&typeof h.m_radius=="number"},g.prototype.getRadius=function(){return this.m_radius},g.prototype.getType=function(){return this.m_type},g}(),U={userData:null,friction:.2,restitution:0,density:0,isSensor:!1,filterGroupIndex:0,filterCategoryBits:1,filterMaskBits:65535},G=function(){function g(h,p){this.aabb=new f,this.fixture=h,this.childIndex=p,this.proxyId}return g}(),q=function(){function g(h,p,y){p.shape?(y=p,p=p.shape):typeof y=="number"&&(y={density:y}),y=i(y,U),this.m_body=h,this.m_friction=y.friction,this.m_restitution=y.restitution,this.m_density=y.density,this.m_isSensor=y.isSensor,this.m_filterGroupIndex=y.filterGroupIndex,this.m_filterCategoryBits=y.filterCategoryBits,this.m_filterMaskBits=y.filterMaskBits,this.m_shape=p,this.m_next=null,this.m_proxies=[],this.m_proxyCount=0;for(var _=this.m_shape.getChildCount(),$=0;$<_;++$)this.m_proxies[$]=new G(this,$);this.m_userData=y.userData}return g.prototype._reset=function(){var h=this.getBody(),p=h.m_world.m_broadPhase;this.destroyProxies(p),this.m_shape._reset&&this.m_shape._reset();for(var y=this.m_shape.getChildCount(),_=0;_<y;++_)this.m_proxies[_]=new G(this,_);this.createProxies(p,h.m_xf),h.resetMassData()},g.prototype._serialize=function(){return{friction:this.m_friction,restitution:this.m_restitution,density:this.m_density,isSensor:this.m_isSensor,filterGroupIndex:this.m_filterGroupIndex,filterCategoryBits:this.m_filterCategoryBits,filterMaskBits:this.m_filterMaskBits,shape:this.m_shape}},g._deserialize=function(h,p,y){var _=y(M,h.shape),$=_&&new g(p,_,h);return $},g.prototype.getType=function(){return this.m_shape.getType()},g.prototype.getShape=function(){return this.m_shape},g.prototype.isSensor=function(){return this.m_isSensor},g.prototype.setSensor=function(h){h!=this.m_isSensor&&(this.m_body.setAwake(!0),this.m_isSensor=h)},g.prototype.getUserData=function(){return this.m_userData},g.prototype.setUserData=function(h){this.m_userData=h},g.prototype.getBody=function(){return this.m_body},g.prototype.getNext=function(){return this.m_next},g.prototype.getDensity=function(){return this.m_density},g.prototype.setDensity=function(h){this.m_density=h},g.prototype.getFriction=function(){return this.m_friction},g.prototype.setFriction=function(h){this.m_friction=h},g.prototype.getRestitution=function(){return this.m_restitution},g.prototype.setRestitution=function(h){this.m_restitution=h},g.prototype.testPoint=function(h){return this.m_shape.testPoint(this.m_body.getTransform(),h)},g.prototype.rayCast=function(h,p,y){return this.m_shape.rayCast(h,p,this.m_body.getTransform(),y)},g.prototype.getMassData=function(h){this.m_shape.computeMass(h,this.m_density)},g.prototype.getAABB=function(h){return this.m_proxies[h].aabb},g.prototype.createProxies=function(h,p){this.m_proxyCount=this.m_shape.getChildCount();for(var y=0;y<this.m_proxyCount;++y){var _=this.m_proxies[y];this.m_shape.computeAABB(_.aabb,p,y),_.proxyId=h.createProxy(_.aabb,_)}},g.prototype.destroyProxies=function(h){for(var p=0;p<this.m_proxyCount;++p){var y=this.m_proxies[p];h.destroyProxy(y.proxyId),y.proxyId=null}this.m_proxyCount=0},g.prototype.synchronize=function(h,p,y){for(var _=0;_<this.m_proxyCount;++_){var $=this.m_proxies[_],k=new f,S=new f;this.m_shape.computeAABB(k,p,$.childIndex),this.m_shape.computeAABB(S,y,$.childIndex),$.aabb.combine(k,S);var T=l.sub(y.p,p.p);h.moveProxy($.proxyId,$.aabb,T)}},g.prototype.setFilterData=function(h){this.m_filterGroupIndex=h.groupIndex,this.m_filterCategoryBits=h.categoryBits,this.m_filterMaskBits=h.maskBits,this.refilter()},g.prototype.getFilterGroupIndex=function(){return this.m_filterGroupIndex},g.prototype.setFilterGroupIndex=function(h){this.m_filterGroupIndex=h},g.prototype.getFilterCategoryBits=function(){return this.m_filterCategoryBits},g.prototype.setFilterCategoryBits=function(h){this.m_filterCategoryBits=h},g.prototype.getFilterMaskBits=function(){return this.m_filterMaskBits},g.prototype.setFilterMaskBits=function(h){this.m_filterMaskBits=h},g.prototype.refilter=function(){if(this.m_body!=null){for(var h=this.m_body.getContactList();h;){var p=h.contact,y=p.getFixtureA(),_=p.getFixtureB();(y==this||_==this)&&p.flagForFiltering(),h=h.next}var $=this.m_body.getWorld();if($!=null)for(var k=$.m_broadPhase,S=0;S<this.m_proxyCount;++S)k.touchProxy(this.m_proxies[S].proxyId)}},g.prototype.shouldCollide=function(h){if(h.m_filterGroupIndex===this.m_filterGroupIndex&&h.m_filterGroupIndex!==0)return h.m_filterGroupIndex>0;var p=(h.m_filterMaskBits&this.m_filterCategoryBits)!==0,y=(h.m_filterCategoryBits&this.m_filterMaskBits)!==0,_=p&&y;return _},g}(),tt="static",et="kinematic",Q="dynamic",it={type:tt,position:l.zero(),angle:0,linearVelocity:l.zero(),angularVelocity:0,linearDamping:0,angularDamping:0,fixedRotation:!1,bullet:!1,gravityScale:1,allowSleep:!0,awake:!0,active:!0,userData:null},nt=function(){function g(){this.mass=0,this.center=l.zero(),this.I=0}return g}(),Z=function(){function g(h,p){p=i(p,it),this.m_world=h,this.m_awakeFlag=p.awake,this.m_autoSleepFlag=p.allowSleep,this.m_bulletFlag=p.bullet,this.m_fixedRotationFlag=p.fixedRotation,this.m_activeFlag=p.active,this.m_islandFlag=!1,this.m_toiFlag=!1,this.m_userData=p.userData,this.m_type=p.type,this.m_type==Q?(this.m_mass=1,this.m_invMass=1):(this.m_mass=0,this.m_invMass=0),this.m_I=0,this.m_invI=0,this.m_xf=I.identity(),this.m_xf.p=l.clone(p.position),this.m_xf.q.setAngle(p.angle),this.m_sweep=new N,this.m_sweep.setTransform(this.m_xf),this.c_velocity=new E,this.c_position=new B,this.m_force=l.zero(),this.m_torque=0,this.m_linearVelocity=l.clone(p.linearVelocity),this.m_angularVelocity=p.angularVelocity,this.m_linearDamping=p.linearDamping,this.m_angularDamping=p.angularDamping,this.m_gravityScale=p.gravityScale,this.m_sleepTime=0,this.m_jointList=null,this.m_contactList=null,this.m_fixtureList=null,this.m_prev=null,this.m_next=null,this.m_destroyed=!1}return g.prototype._serialize=function(){for(var h=[],p=this.m_fixtureList;p;p=p.m_next)h.push(p);return{type:this.m_type,bullet:this.m_bulletFlag,position:this.m_xf.p,angle:this.m_xf.q.getAngle(),linearVelocity:this.m_linearVelocity,angularVelocity:this.m_angularVelocity,fixtures:h}},g._deserialize=function(h,p,y){var _=new g(p,h);if(h.fixtures)for(var $=h.fixtures.length-1;$>=0;$--){var k=y(q,h.fixtures[$],_);_._addFixture(k)}return _},g.prototype.isWorldLocked=function(){return!!(this.m_world&&this.m_world.isLocked())},g.prototype.getWorld=function(){return this.m_world},g.prototype.getNext=function(){return this.m_next},g.prototype.setUserData=function(h){this.m_userData=h},g.prototype.getUserData=function(){return this.m_userData},g.prototype.getFixtureList=function(){return this.m_fixtureList},g.prototype.getJointList=function(){return this.m_jointList},g.prototype.getContactList=function(){return this.m_contactList},g.prototype.isStatic=function(){return this.m_type==tt},g.prototype.isDynamic=function(){return this.m_type==Q},g.prototype.isKinematic=function(){return this.m_type==et},g.prototype.setStatic=function(){return this.setType(tt),this},g.prototype.setDynamic=function(){return this.setType(Q),this},g.prototype.setKinematic=function(){return this.setType(et),this},g.prototype.getType=function(){return this.m_type},g.prototype.setType=function(h){if(this.isWorldLocked()!=!0&&this.m_type!=h){this.m_type=h,this.resetMassData(),this.m_type==tt&&(this.m_linearVelocity.setZero(),this.m_angularVelocity=0,this.m_sweep.forward(),this.synchronizeFixtures()),this.setAwake(!0),this.m_force.setZero(),this.m_torque=0;for(var p=this.m_contactList;p;){var y=p;p=p.next,this.m_world.destroyContact(y.contact)}this.m_contactList=null;for(var _=this.m_world.m_broadPhase,$=this.m_fixtureList;$;$=$.m_next)for(var k=$.m_proxyCount,S=0;S<k;++S)_.touchProxy($.m_proxies[S].proxyId)}},g.prototype.isBullet=function(){return this.m_bulletFlag},g.prototype.setBullet=function(h){this.m_bulletFlag=!!h},g.prototype.isSleepingAllowed=function(){return this.m_autoSleepFlag},g.prototype.setSleepingAllowed=function(h){this.m_autoSleepFlag=!!h,this.m_autoSleepFlag==!1&&this.setAwake(!0)},g.prototype.isAwake=function(){return this.m_awakeFlag},g.prototype.setAwake=function(h){h?this.m_awakeFlag==!1&&(this.m_awakeFlag=!0,this.m_sleepTime=0):(this.m_awakeFlag=!1,this.m_sleepTime=0,this.m_linearVelocity.setZero(),this.m_angularVelocity=0,this.m_force.setZero(),this.m_torque=0)},g.prototype.isActive=function(){return this.m_activeFlag},g.prototype.setActive=function(h){if(h!=this.m_activeFlag)if(this.m_activeFlag=!!h,this.m_activeFlag)for(var p=this.m_world.m_broadPhase,y=this.m_fixtureList;y;y=y.m_next)y.createProxies(p,this.m_xf);else{for(var p=this.m_world.m_broadPhase,y=this.m_fixtureList;y;y=y.m_next)y.destroyProxies(p);for(var _=this.m_contactList;_;){var $=_;_=_.next,this.m_world.destroyContact($.contact)}this.m_contactList=null}},g.prototype.isFixedRotation=function(){return this.m_fixedRotationFlag},g.prototype.setFixedRotation=function(h){this.m_fixedRotationFlag!=h&&(this.m_fixedRotationFlag=!!h,this.m_angularVelocity=0,this.resetMassData())},g.prototype.getTransform=function(){return this.m_xf},g.prototype.setTransform=function(h,p){if(this.isWorldLocked()!=!0){this.m_xf.setNum(h,p),this.m_sweep.setTransform(this.m_xf);for(var y=this.m_world.m_broadPhase,_=this.m_fixtureList;_;_=_.m_next)_.synchronize(y,this.m_xf,this.m_xf)}},g.prototype.synchronizeTransform=function(){this.m_sweep.getTransform(this.m_xf,1)},g.prototype.synchronizeFixtures=function(){var h=I.identity();this.m_sweep.getTransform(h,0);for(var p=this.m_world.m_broadPhase,y=this.m_fixtureList;y;y=y.m_next)y.synchronize(p,h,this.m_xf)},g.prototype.advance=function(h){this.m_sweep.advance(h),this.m_sweep.c.setVec2(this.m_sweep.c0),this.m_sweep.a=this.m_sweep.a0,this.m_sweep.getTransform(this.m_xf,1)},g.prototype.getPosition=function(){return this.m_xf.p},g.prototype.setPosition=function(h){this.setTransform(h,this.m_sweep.a)},g.prototype.getAngle=function(){return this.m_sweep.a},g.prototype.setAngle=function(h){this.setTransform(this.m_xf.p,h)},g.prototype.getWorldCenter=function(){return this.m_sweep.c},g.prototype.getLocalCenter=function(){return this.m_sweep.localCenter},g.prototype.getLinearVelocity=function(){return this.m_linearVelocity},g.prototype.getLinearVelocityFromWorldPoint=function(h){var p=l.sub(h,this.m_sweep.c);return l.add(this.m_linearVelocity,l.crossNumVec2(this.m_angularVelocity,p))},g.prototype.getLinearVelocityFromLocalPoint=function(h){return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(h))},g.prototype.setLinearVelocity=function(h){this.m_type!=tt&&(l.dot(h,h)>0&&this.setAwake(!0),this.m_linearVelocity.setVec2(h))},g.prototype.getAngularVelocity=function(){return this.m_angularVelocity},g.prototype.setAngularVelocity=function(h){this.m_type!=tt&&(h*h>0&&this.setAwake(!0),this.m_angularVelocity=h)},g.prototype.getLinearDamping=function(){return this.m_linearDamping},g.prototype.setLinearDamping=function(h){this.m_linearDamping=h},g.prototype.getAngularDamping=function(){return this.m_angularDamping},g.prototype.setAngularDamping=function(h){this.m_angularDamping=h},g.prototype.getGravityScale=function(){return this.m_gravityScale},g.prototype.setGravityScale=function(h){this.m_gravityScale=h},g.prototype.getMass=function(){return this.m_mass},g.prototype.getInertia=function(){return this.m_I+this.m_mass*l.dot(this.m_sweep.localCenter,this.m_sweep.localCenter)},g.prototype.getMassData=function(h){h.mass=this.m_mass,h.I=this.getInertia(),h.center.setVec2(this.m_sweep.localCenter)},g.prototype.resetMassData=function(){if(this.m_mass=0,this.m_invMass=0,this.m_I=0,this.m_invI=0,this.m_sweep.localCenter.setZero(),this.isStatic()||this.isKinematic()){this.m_sweep.c0.setVec2(this.m_xf.p),this.m_sweep.c.setVec2(this.m_xf.p),this.m_sweep.a0=this.m_sweep.a;return}for(var h=l.zero(),p=this.m_fixtureList;p;p=p.m_next)if(p.m_density!=0){var y=new nt;p.getMassData(y),this.m_mass+=y.mass,h.addMul(y.mass,y.center),this.m_I+=y.I}this.m_mass>0?(this.m_invMass=1/this.m_mass,h.mul(this.m_invMass)):(this.m_mass=1,this.m_invMass=1),this.m_I>0&&this.m_fixedRotationFlag==!1?(this.m_I-=this.m_mass*l.dot(h,h),this.m_invI=1/this.m_I):(this.m_I=0,this.m_invI=0);var _=l.clone(this.m_sweep.c);this.m_sweep.setLocalCenter(h,this.m_xf),this.m_linearVelocity.add(l.crossNumVec2(this.m_angularVelocity,l.sub(this.m_sweep.c,_)))},g.prototype.setMassData=function(h){if(this.isWorldLocked()!=!0&&this.m_type==Q){this.m_invMass=0,this.m_I=0,this.m_invI=0,this.m_mass=h.mass,this.m_mass<=0&&(this.m_mass=1),this.m_invMass=1/this.m_mass,h.I>0&&this.m_fixedRotationFlag==!1&&(this.m_I=h.I-this.m_mass*l.dot(h.center,h.center),this.m_invI=1/this.m_I);var p=l.clone(this.m_sweep.c);this.m_sweep.setLocalCenter(h.center,this.m_xf),this.m_linearVelocity.add(l.crossNumVec2(this.m_angularVelocity,l.sub(this.m_sweep.c,p)))}},g.prototype.applyForce=function(h,p,y){y===void 0&&(y=!0),this.m_type==Q&&(y&&this.m_awakeFlag==!1&&this.setAwake(!0),this.m_awakeFlag&&(this.m_force.add(h),this.m_torque+=l.crossVec2Vec2(l.sub(p,this.m_sweep.c),h)))},g.prototype.applyForceToCenter=function(h,p){p===void 0&&(p=!0),this.m_type==Q&&(p&&this.m_awakeFlag==!1&&this.setAwake(!0),this.m_awakeFlag&&this.m_force.add(h))},g.prototype.applyTorque=function(h,p){p===void 0&&(p=!0),this.m_type==Q&&(p&&this.m_awakeFlag==!1&&this.setAwake(!0),this.m_awakeFlag&&(this.m_torque+=h))},g.prototype.applyLinearImpulse=function(h,p,y){y===void 0&&(y=!0),this.m_type==Q&&(y&&this.m_awakeFlag==!1&&this.setAwake(!0),this.m_awakeFlag&&(this.m_linearVelocity.addMul(this.m_invMass,h),this.m_angularVelocity+=this.m_invI*l.crossVec2Vec2(l.sub(p,this.m_sweep.c),h)))},g.prototype.applyAngularImpulse=function(h,p){p===void 0&&(p=!0),this.m_type==Q&&(p&&this.m_awakeFlag==!1&&this.setAwake(!0),this.m_awakeFlag&&(this.m_angularVelocity+=this.m_invI*h))},g.prototype.shouldCollide=function(h){if(this.m_type!=Q&&h.m_type!=Q)return!1;for(var p=this.m_jointList;p;p=p.next)if(p.other==h&&p.joint.m_collideConnected==!1)return!1;return!0},g.prototype._addFixture=function(h){if(this.isWorldLocked()==!0)return null;if(this.m_activeFlag){var p=this.m_world.m_broadPhase;h.createProxies(p,this.m_xf)}return h.m_next=this.m_fixtureList,this.m_fixtureList=h,h.m_density>0&&this.resetMassData(),this.m_world.m_newFixture=!0,h},g.prototype.createFixture=function(h,p){if(this.isWorldLocked()==!0)return null;var y=new q(this,h,p);return this._addFixture(y),y},g.prototype.destroyFixture=function(h){if(this.isWorldLocked()!=!0){if(this.m_fixtureList===h)this.m_fixtureList=h.m_next;else for(var p=this.m_fixtureList;p!=null;){if(p.m_next===h){p.m_next=h.m_next;break}p=p.m_next}for(var y=this.m_contactList;y;){var _=y.contact;y=y.next;var $=_.getFixtureA(),k=_.getFixtureB();(h==$||h==k)&&this.m_world.destroyContact(_)}if(this.m_activeFlag){var S=this.m_world.m_broadPhase;h.destroyProxies(S)}h.m_body=null,h.m_next=null,this.m_world.publish("remove-fixture",h),this.resetMassData()}},g.prototype.getWorldPoint=function(h){return I.mulVec2(this.m_xf,h)},g.prototype.getWorldVector=function(h){return C.mulVec2(this.m_xf.q,h)},g.prototype.getLocalPoint=function(h){return I.mulTVec2(this.m_xf,h)},g.prototype.getLocalVector=function(h){return C.mulTVec2(this.m_xf.q,h)},g.STATIC="static",g.KINEMATIC="kinematic",g.DYNAMIC="dynamic",g}(),lt=function(){function g(h,p,y,_){typeof h=="object"&&h!==null?(this.ex=l.clone(h),this.ey=l.clone(p)):typeof h=="number"?(this.ex=l.neo(h,y),this.ey=l.neo(p,_)):(this.ex=l.zero(),this.ey=l.zero())}return g.prototype.toString=function(){return JSON.stringify(this)},g.isValid=function(h){return h===null||typeof h>"u"?!1:l.isValid(h.ex)&&l.isValid(h.ey)},g.assert=function(h){},g.prototype.set=function(h,p,y,_){typeof h=="number"&&typeof p=="number"&&typeof y=="number"&&typeof _=="number"?(this.ex.setNum(h,y),this.ey.setNum(p,_)):typeof h=="object"&&typeof p=="object"?(this.ex.setVec2(h),this.ey.setVec2(p)):typeof h=="object"&&(this.ex.setVec2(h.ex),this.ey.setVec2(h.ey))},g.prototype.setIdentity=function(){this.ex.x=1,this.ey.x=0,this.ex.y=0,this.ey.y=1},g.prototype.setZero=function(){this.ex.x=0,this.ey.x=0,this.ex.y=0,this.ey.y=0},g.prototype.getInverse=function(){var h=this.ex.x,p=this.ey.x,y=this.ex.y,_=this.ey.y,$=h*_-p*y;$!==0&&($=1/$);var k=new g;return k.ex.x=$*_,k.ey.x=-$*p,k.ex.y=-$*y,k.ey.y=$*h,k},g.prototype.solve=function(h){var p=this.ex.x,y=this.ey.x,_=this.ex.y,$=this.ey.y,k=p*$-y*_;k!==0&&(k=1/k);var S=l.zero();return S.x=k*($*h.x-y*h.y),S.y=k*(p*h.y-_*h.x),S},g.mul=function(h,p){if(p&&"x"in p&&"y"in p){var y=h.ex.x*p.x+h.ey.x*p.y,_=h.ex.y*p.x+h.ey.y*p.y;return l.neo(y,_)}else if(p&&"ex"in p&&"ey"in p){var $=h.ex.x*p.ex.x+h.ey.x*p.ex.y,k=h.ex.x*p.ey.x+h.ey.x*p.ey.y,S=h.ex.y*p.ex.x+h.ey.y*p.ex.y,T=h.ex.y*p.ey.x+h.ey.y*p.ey.y;return new g($,k,S,T)}},g.mulVec2=function(h,p){var y=h.ex.x*p.x+h.ey.x*p.y,_=h.ex.y*p.x+h.ey.y*p.y;return l.neo(y,_)},g.mulMat22=function(h,p){var y=h.ex.x*p.ex.x+h.ey.x*p.ex.y,_=h.ex.x*p.ey.x+h.ey.x*p.ey.y,$=h.ex.y*p.ex.x+h.ey.y*p.ex.y,k=h.ex.y*p.ey.x+h.ey.y*p.ey.y;return new g(y,_,$,k)},g.mulT=function(h,p){if(p&&"x"in p&&"y"in p)return l.neo(l.dot(p,h.ex),l.dot(p,h.ey));if(p&&"ex"in p&&"ey"in p){var y=l.neo(l.dot(h.ex,p.ex),l.dot(h.ey,p.ex)),_=l.neo(l.dot(h.ex,p.ey),l.dot(h.ey,p.ey));return new g(y,_)}},g.mulTVec2=function(h,p){return l.neo(l.dot(p,h.ex),l.dot(p,h.ey))},g.mulTMat22=function(h,p){var y=l.neo(l.dot(h.ex,p.ex),l.dot(h.ey,p.ex)),_=l.neo(l.dot(h.ex,p.ey),l.dot(h.ey,p.ey));return new g(y,_)},g.abs=function(h){return new g(l.abs(h.ex),l.abs(h.ey))},g.add=function(h,p){return new g(l.add(h.ex,p.ex),l.add(h.ey,p.ey))},g}(),ct;(function(g){g[g.e_circles=0]="e_circles",g[g.e_faceA=1]="e_faceA",g[g.e_faceB=2]="e_faceB"})(ct||(ct={}));var ut;(function(g){g[g.e_vertex=0]="e_vertex",g[g.e_face=1]="e_face"})(ut||(ut={}));var gt;(function(g){g[g.nullState=0]="nullState",g[g.addState=1]="addState",g[g.persistState=2]="persistState",g[g.removeState=3]="removeState"})(gt||(gt={}));var vt=function(){function g(){this.v=l.zero(),this.id=new At}return g.prototype.set=function(h){this.v.setVec2(h.v),this.id.set(h.id)},g}(),Ct=function(){function g(){this.localNormal=l.zero(),this.localPoint=l.zero(),this.points=[new St,new St],this.pointCount=0}return g.prototype.getWorldManifold=function(h,p,y,_,$){if(this.pointCount!=0){h=h||new Lt;var k=h.normal,S=h.points,T=h.separations;switch(this.type){case ct.e_circles:{k=l.neo(1,0);var L=I.mulVec2(p,this.localPoint),F=I.mulVec2(_,this.points[0].localPoint),O=l.sub(F,L);l.lengthSquared(O)>d.EPSILON*d.EPSILON&&(k.setVec2(O),k.normalize());var V=L.clone().addMul(y,k),R=F.clone().addMul(-$,k);S[0]=l.mid(V,R),T[0]=l.dot(l.sub(R,V),k),S.length=1,T.length=1;break}case ct.e_faceA:{k=C.mulVec2(p.q,this.localNormal);for(var D=I.mulVec2(p,this.localPoint),W=0;W<this.pointCount;++W){var H=I.mulVec2(_,this.points[W].localPoint),V=l.clone(H).addMul(y-l.dot(l.sub(H,D),k),k),R=l.clone(H).subMul($,k);S[W]=l.mid(V,R),T[W]=l.dot(l.sub(R,V),k)}S.length=this.pointCount,T.length=this.pointCount;break}case ct.e_faceB:{k=C.mulVec2(_.q,this.localNormal);for(var D=I.mulVec2(_,this.localPoint),W=0;W<this.pointCount;++W){var H=I.mulVec2(p,this.points[W].localPoint),R=l.combine(1,H,$-l.dot(l.sub(H,D),k),k),V=l.combine(1,H,-y,k);S[W]=l.mid(V,R),T[W]=l.dot(l.sub(V,R),k)}S.length=this.pointCount,T.length=this.pointCount,k.mul(-1);break}}return h.normal=k,h.points=S,h.separations=T,h}},g.clipSegmentToLine=Ot,g.ClipVertex=vt,g.getPointStates=Gt,g.PointState=gt,g}(),St=function(){function g(){this.localPoint=l.zero(),this.normalImpulse=0,this.tangentImpulse=0,this.id=new At}return g}(),At=function(){function g(){this.cf=new Rt}return Object.defineProperty(g.prototype,"key",{get:function(){return this.cf.indexA+this.cf.indexB*4+this.cf.typeA*16+this.cf.typeB*64},enumerable:!1,configurable:!0}),g.prototype.set=function(h){this.cf.set(h.cf)},g}(),Rt=function(){function g(){}return g.prototype.set=function(h){this.indexA=h.indexA,this.indexB=h.indexB,this.typeA=h.typeA,this.typeB=h.typeB},g}(),Lt=function(){function g(){this.points=[],this.separations=[]}return g}();function Gt(g,h,p,y){for(var _=0;_<p.pointCount;++_){var $=p.points[_].id;g[_]=gt.removeState;for(var k=0;k<y.pointCount;++k)if(y.points[k].id.key==$.key){g[_]=gt.persistState;break}}for(var _=0;_<y.pointCount;++_){var $=y.points[_].id;h[_]=gt.addState;for(var k=0;k<p.pointCount;++k)if(p.points[k].id.key==$.key){h[_]=gt.persistState;break}}}function Ot(g,h,p,y,_){var $=0,k=l.dot(p,h[0].v)-y,S=l.dot(p,h[1].v)-y;if(k<=0&&g[$++].set(h[0]),S<=0&&g[$++].set(h[1]),k*S<0){var T=k/(k-S);g[$].v.setCombine(1-T,h[0].v,T,h[1].v),g[$].id.cf.indexA=_,g[$].id.cf.indexB=h[0].id.cf.indexB,g[$].id.cf.typeA=ut.e_vertex,g[$].id.cf.typeB=ut.e_face,++$}return $}var Dt={gjkCalls:0,gjkIters:0,gjkMaxIters:0,toiTime:0,toiMaxTime:0,toiCalls:0,toiIters:0,toiMaxIters:0,toiRootIters:0,toiMaxRootIters:0,toString:function(g){g=typeof g=="string"?g:`
`;var h="";for(var p in this)typeof this[p]!="function"&&typeof this[p]!="object"&&(h+=p+": "+this[p]+g);return h}};Dt.gjkCalls=0,Dt.gjkIters=0,Dt.gjkMaxIters=0;var oe=function(){function g(){this.proxyA=new me,this.proxyB=new me,this.transformA=null,this.transformB=null,this.useRadii=!1}return g}(),fe=function(){function g(){this.pointA=l.zero(),this.pointB=l.zero()}return g}(),_e=function(){function g(){this.metric=0,this.indexA=[],this.indexB=[],this.count=0}return g}();function le(g,h,p){++Dt.gjkCalls;var y=p.proxyA,_=p.proxyB,$=p.transformA,k=p.transformB,S=new Be;S.readCache(h,y,$,_,k);for(var T=S.m_v,L=m.maxDistnceIterations,F=[],O=[],V=0,R=0;R<L;){V=S.m_count;for(var D=0;D<V;++D)F[D]=T[D].indexA,O[D]=T[D].indexB;if(S.solve(),S.m_count===3)break;var W=S.getClosestPoint();W.lengthSquared();var H=S.getSearchDirection();if(H.lengthSquared()<d.EPSILON*d.EPSILON)break;var j=T[S.m_count];j.indexA=y.getSupport(C.mulTVec2($.q,l.neg(H))),j.wA=I.mulVec2($,y.getVertex(j.indexA)),j.indexB=_.getSupport(C.mulTVec2(k.q,H)),j.wB=I.mulVec2(k,_.getVertex(j.indexB)),j.w=l.sub(j.wB,j.wA),++R,++Dt.gjkIters;for(var ot=!1,D=0;D<V;++D)if(j.indexA===F[D]&&j.indexB===O[D]){ot=!0;break}if(ot)break;++S.m_count}if(Dt.gjkMaxIters=d.max(Dt.gjkMaxIters,R),S.getWitnessPoints(g.pointA,g.pointB),g.distance=l.distance(g.pointA,g.pointB),g.iterations=R,S.writeCache(h),p.useRadii){var rt=y.m_radius,ft=_.m_radius;if(g.distance>rt+ft&&g.distance>d.EPSILON){g.distance-=rt+ft;var mt=l.sub(g.pointB,g.pointA);mt.normalize(),g.pointA.addMul(rt,mt),g.pointB.subMul(ft,mt)}else{var W=l.mid(g.pointA,g.pointB);g.pointA.setVec2(W),g.pointB.setVec2(W),g.distance=0}}}var me=function(){function g(){this.m_buffer=[],this.m_vertices=[],this.m_count=0,this.m_radius=0}return g.prototype.getVertexCount=function(){return this.m_count},g.prototype.getVertex=function(h){return this.m_vertices[h]},g.prototype.getSupport=function(h){for(var p=0,y=l.dot(this.m_vertices[0],h),_=0;_<this.m_count;++_){var $=l.dot(this.m_vertices[_],h);$>y&&(p=_,y=$)}return p},g.prototype.getSupportVertex=function(h){return this.m_vertices[this.getSupport(h)]},g.prototype.set=function(h,p){h.computeDistanceProxy(this,p)},g}(),ge=function(){function g(){this.wA=l.zero(),this.wB=l.zero(),this.w=l.zero()}return g.prototype.set=function(h){this.indexA=h.indexA,this.indexB=h.indexB,this.wA=l.clone(h.wA),this.wB=l.clone(h.wB),this.w=l.clone(h.w),this.a=h.a},g}(),Be=function(){function g(){this.m_v1=new ge,this.m_v2=new ge,this.m_v3=new ge,this.m_v=[this.m_v1,this.m_v2,this.m_v3],this.m_count}return g.prototype.toString=function(){return this.m_count===3?["+"+this.m_count,this.m_v1.a,this.m_v1.wA.x,this.m_v1.wA.y,this.m_v1.wB.x,this.m_v1.wB.y,this.m_v2.a,this.m_v2.wA.x,this.m_v2.wA.y,this.m_v2.wB.x,this.m_v2.wB.y,this.m_v3.a,this.m_v3.wA.x,this.m_v3.wA.y,this.m_v3.wB.x,this.m_v3.wB.y].toString():this.m_count===2?["+"+this.m_count,this.m_v1.a,this.m_v1.wA.x,this.m_v1.wA.y,this.m_v1.wB.x,this.m_v1.wB.y,this.m_v2.a,this.m_v2.wA.x,this.m_v2.wA.y,this.m_v2.wB.x,this.m_v2.wB.y].toString():this.m_count===1?["+"+this.m_count,this.m_v1.a,this.m_v1.wA.x,this.m_v1.wA.y,this.m_v1.wB.x,this.m_v1.wB.y].toString():"+"+this.m_count},g.prototype.readCache=function(h,p,y,_,$){this.m_count=h.count;for(var k=0;k<this.m_count;++k){var S=this.m_v[k];S.indexA=h.indexA[k],S.indexB=h.indexB[k];var T=p.getVertex(S.indexA),L=_.getVertex(S.indexB);S.wA=I.mulVec2(y,T),S.wB=I.mulVec2($,L),S.w=l.sub(S.wB,S.wA),S.a=0}if(this.m_count>1){var F=h.metric,O=this.getMetric();(O<.5*F||2*F<O||O<d.EPSILON)&&(this.m_count=0)}if(this.m_count===0){var S=this.m_v[0];S.indexA=0,S.indexB=0;var T=p.getVertex(0),L=_.getVertex(0);S.wA=I.mulVec2(y,T),S.wB=I.mulVec2($,L),S.w=l.sub(S.wB,S.wA),S.a=1,this.m_count=1}},g.prototype.writeCache=function(h){h.metric=this.getMetric(),h.count=this.m_count;for(var p=0;p<this.m_count;++p)h.indexA[p]=this.m_v[p].indexA,h.indexB[p]=this.m_v[p].indexB},g.prototype.getSearchDirection=function(){switch(this.m_count){case 1:return l.neg(this.m_v1.w);case 2:{var h=l.sub(this.m_v2.w,this.m_v1.w),p=l.crossVec2Vec2(h,l.neg(this.m_v1.w));return p>0?l.crossNumVec2(1,h):l.crossVec2Num(h,1)}default:return l.zero()}},g.prototype.getClosestPoint=function(){switch(this.m_count){case 0:return l.zero();case 1:return l.clone(this.m_v1.w);case 2:return l.combine(this.m_v1.a,this.m_v1.w,this.m_v2.a,this.m_v2.w);case 3:return l.zero();default:return l.zero()}},g.prototype.getWitnessPoints=function(h,p){switch(this.m_count){case 0:break;case 1:h.setVec2(this.m_v1.wA),p.setVec2(this.m_v1.wB);break;case 2:h.setCombine(this.m_v1.a,this.m_v1.wA,this.m_v2.a,this.m_v2.wA),p.setCombine(this.m_v1.a,this.m_v1.wB,this.m_v2.a,this.m_v2.wB);break;case 3:h.setCombine(this.m_v1.a,this.m_v1.wA,this.m_v2.a,this.m_v2.wA),h.addMul(this.m_v3.a,this.m_v3.wA),p.setVec2(h);break}},g.prototype.getMetric=function(){switch(this.m_count){case 0:return 0;case 1:return 0;case 2:return l.distance(this.m_v1.w,this.m_v2.w);case 3:return l.crossVec2Vec2(l.sub(this.m_v2.w,this.m_v1.w),l.sub(this.m_v3.w,this.m_v1.w));default:return 0}},g.prototype.solve=function(){switch(this.m_count){case 1:break;case 2:this.solve2();break;case 3:this.solve3();break}},g.prototype.solve2=function(){var h=this.m_v1.w,p=this.m_v2.w,y=l.sub(p,h),_=-l.dot(h,y);if(_<=0){this.m_v1.a=1,this.m_count=1;return}var $=l.dot(p,y);if($<=0){this.m_v2.a=1,this.m_count=1,this.m_v1.set(this.m_v2);return}var k=1/($+_);this.m_v1.a=$*k,this.m_v2.a=_*k,this.m_count=2},g.prototype.solve3=function(){var h=this.m_v1.w,p=this.m_v2.w,y=this.m_v3.w,_=l.sub(p,h),$=l.dot(h,_),k=l.dot(p,_),S=k,T=-$,L=l.sub(y,h),F=l.dot(h,L),O=l.dot(y,L),V=O,R=-F,D=l.sub(y,p),W=l.dot(p,D),H=l.dot(y,D),j=H,ot=-W,rt=l.crossVec2Vec2(_,L),ft=rt*l.crossVec2Vec2(p,y),mt=rt*l.crossVec2Vec2(y,h),xt=rt*l.crossVec2Vec2(h,p);if(T<=0&&R<=0){this.m_v1.a=1,this.m_count=1;return}if(S>0&&T>0&&xt<=0){var _t=1/(S+T);this.m_v1.a=S*_t,this.m_v2.a=T*_t,this.m_count=2;return}if(V>0&&R>0&&mt<=0){var It=1/(V+R);this.m_v1.a=V*It,this.m_v3.a=R*It,this.m_count=2,this.m_v2.set(this.m_v3);return}if(S<=0&&ot<=0){this.m_v2.a=1,this.m_count=1,this.m_v1.set(this.m_v2);return}if(V<=0&&j<=0){this.m_v3.a=1,this.m_count=1,this.m_v1.set(this.m_v3);return}if(j>0&&ot>0&&ft<=0){var Nt=1/(j+ot);this.m_v2.a=j*Nt,this.m_v3.a=ot*Nt,this.m_count=2,this.m_v1.set(this.m_v3);return}var Pt=1/(ft+mt+xt);this.m_v1.a=ft*Pt,this.m_v2.a=mt*Pt,this.m_v3.a=xt*Pt,this.m_count=3},g}();function Fe(g,h,p,y,_,$){var k=new oe;k.proxyA.set(g,h),k.proxyB.set(p,y),k.transformA=_,k.transformB=$,k.useRadii=!0;var S=new _e,T=new fe;return le(T,S,k),T.distance<10*d.EPSILON}var ss=function(){function g(h){this.contact=h}return g}();function Xe(g,h){return d.sqrt(g*h)}function Is(g,h){return g>h?g:h}var Ye=[],no=function(){function g(){this.rA=l.zero(),this.rB=l.zero(),this.normalImpulse=0,this.tangentImpulse=0,this.normalMass=0,this.tangentMass=0,this.velocityBias=0}return g}(),We=function(){function g(h,p,y,_,$){this.m_manifold=new Ct,this.m_prev=null,this.m_next=null,this.m_toi=1,this.m_toiCount=0,this.m_toiFlag=!1,this.m_tangentSpeed=0,this.m_enabledFlag=!0,this.m_islandFlag=!1,this.m_touchingFlag=!1,this.m_filterFlag=!1,this.m_bulletHitFlag=!1,this.m_impulse=new X1(this),this.v_points=[],this.v_normal=l.zero(),this.v_normalMass=new lt,this.v_K=new lt,this.p_localPoints=[],this.p_localNormal=l.zero(),this.p_localPoint=l.zero(),this.p_localCenterA=l.zero(),this.p_localCenterB=l.zero(),this.m_nodeA=new ss(this),this.m_nodeB=new ss(this),this.m_fixtureA=h,this.m_fixtureB=y,this.m_indexA=p,this.m_indexB=_,this.m_evaluateFcn=$,this.m_friction=Xe(this.m_fixtureA.m_friction,this.m_fixtureB.m_friction),this.m_restitution=Is(this.m_fixtureA.m_restitution,this.m_fixtureB.m_restitution)}return g.prototype.initConstraint=function(h){var p=this.m_fixtureA,y=this.m_fixtureB,_=p.getShape(),$=y.getShape(),k=p.getBody(),S=y.getBody(),T=this.getManifold(),L=T.pointCount;this.v_invMassA=k.m_invMass,this.v_invMassB=S.m_invMass,this.v_invIA=k.m_invI,this.v_invIB=S.m_invI,this.v_friction=this.m_friction,this.v_restitution=this.m_restitution,this.v_tangentSpeed=this.m_tangentSpeed,this.v_pointCount=L,this.v_K.setZero(),this.v_normalMass.setZero(),this.p_invMassA=k.m_invMass,this.p_invMassB=S.m_invMass,this.p_invIA=k.m_invI,this.p_invIB=S.m_invI,this.p_localCenterA=l.clone(k.m_sweep.localCenter),this.p_localCenterB=l.clone(S.m_sweep.localCenter),this.p_radiusA=_.m_radius,this.p_radiusB=$.m_radius,this.p_type=T.type,this.p_localNormal=l.clone(T.localNormal),this.p_localPoint=l.clone(T.localPoint),this.p_pointCount=L;for(var F=0;F<L;++F){var O=T.points[F],V=this.v_points[F]=new no;h.warmStarting?(V.normalImpulse=h.dtRatio*O.normalImpulse,V.tangentImpulse=h.dtRatio*O.tangentImpulse):(V.normalImpulse=0,V.tangentImpulse=0),V.rA.setZero(),V.rB.setZero(),V.normalMass=0,V.tangentMass=0,V.velocityBias=0,this.p_localPoints[F]=l.clone(O.localPoint)}},g.prototype.getManifold=function(){return this.m_manifold},g.prototype.getWorldManifold=function(h){var p=this.m_fixtureA.getBody(),y=this.m_fixtureB.getBody(),_=this.m_fixtureA.getShape(),$=this.m_fixtureB.getShape();return this.m_manifold.getWorldManifold(h,p.getTransform(),_.m_radius,y.getTransform(),$.m_radius)},g.prototype.setEnabled=function(h){this.m_enabledFlag=!!h},g.prototype.isEnabled=function(){return this.m_enabledFlag},g.prototype.isTouching=function(){return this.m_touchingFlag},g.prototype.getNext=function(){return this.m_next},g.prototype.getFixtureA=function(){return this.m_fixtureA},g.prototype.getFixtureB=function(){return this.m_fixtureB},g.prototype.getChildIndexA=function(){return this.m_indexA},g.prototype.getChildIndexB=function(){return this.m_indexB},g.prototype.flagForFiltering=function(){this.m_filterFlag=!0},g.prototype.setFriction=function(h){this.m_friction=h},g.prototype.getFriction=function(){return this.m_friction},g.prototype.resetFriction=function(){this.m_friction=Xe(this.m_fixtureA.m_friction,this.m_fixtureB.m_friction)},g.prototype.setRestitution=function(h){this.m_restitution=h},g.prototype.getRestitution=function(){return this.m_restitution},g.prototype.resetRestitution=function(){this.m_restitution=Is(this.m_fixtureA.m_restitution,this.m_fixtureB.m_restitution)},g.prototype.setTangentSpeed=function(h){this.m_tangentSpeed=h},g.prototype.getTangentSpeed=function(){return this.m_tangentSpeed},g.prototype.evaluate=function(h,p,y){this.m_evaluateFcn(h,p,this.m_fixtureA,this.m_indexA,y,this.m_fixtureB,this.m_indexB)},g.prototype.update=function(h){this.m_enabledFlag=!0;var p=!1,y=this.m_touchingFlag,_=this.m_fixtureA.isSensor(),$=this.m_fixtureB.isSensor(),k=_||$,S=this.m_fixtureA.getBody(),T=this.m_fixtureB.getBody(),L=S.getTransform(),F=T.getTransform(),O;if(k){var V=this.m_fixtureA.getShape(),R=this.m_fixtureB.getShape();p=Fe(V,this.m_indexA,R,this.m_indexB,L,F),this.m_manifold.pointCount=0}else{O=this.m_manifold,this.m_manifold=new Ct,this.evaluate(this.m_manifold,L,F),p=this.m_manifold.pointCount>0;for(var D=0;D<this.m_manifold.pointCount;++D){var W=this.m_manifold.points[D];W.normalImpulse=0,W.tangentImpulse=0;for(var H=0;H<O.pointCount;++H){var j=O.points[H];if(j.id.key==W.id.key){W.normalImpulse=j.normalImpulse,W.tangentImpulse=j.tangentImpulse;break}}}p!=y&&(S.setAwake(!0),T.setAwake(!0))}this.m_touchingFlag=p,!y&&p&&h&&h.beginContact(this),y&&!p&&h&&h.endContact(this),!k&&p&&h&&h.preSolve(this,O)},g.prototype.solvePositionConstraint=function(h){return this._solvePositionConstraint(h)},g.prototype.solvePositionConstraintTOI=function(h,p,y){return this._solvePositionConstraint(h,p,y)},g.prototype._solvePositionConstraint=function(h,p,y){var _=!!p&&!!y,$=this.m_fixtureA,k=this.m_fixtureB,S=$.getBody(),T=k.getBody();S.c_velocity,T.c_velocity;var L=S.c_position,F=T.c_position,O=l.clone(this.p_localCenterA),V=l.clone(this.p_localCenterB),R=0,D=0;(!_||S==p||S==y)&&(R=this.p_invMassA,D=this.p_invIA);var W=0,H=0;(!_||T==p||T==y)&&(W=this.p_invMassB,H=this.p_invIB);for(var j=l.clone(L.c),ot=L.a,rt=l.clone(F.c),ft=F.a,mt=0,xt=0;xt<this.p_pointCount;++xt){var _t=I.identity(),It=I.identity();_t.q.setAngle(ot),It.q.setAngle(ft),_t.p=l.sub(j,C.mulVec2(_t.q,O)),It.p=l.sub(rt,C.mulVec2(It.q,V));var Nt=void 0,Pt=void 0,kt=void 0;switch(this.p_type){case ct.e_circles:{var wt=I.mulVec2(_t,this.p_localPoint),Xt=I.mulVec2(It,this.p_localPoints[0]);Nt=l.sub(Xt,wt),Nt.normalize(),Pt=l.combine(.5,wt,.5,Xt),kt=l.dot(l.sub(Xt,wt),Nt)-this.p_radiusA-this.p_radiusB;break}case ct.e_faceA:{Nt=C.mulVec2(_t.q,this.p_localNormal);var jt=I.mulVec2(_t,this.p_localPoint),Qt=I.mulVec2(It,this.p_localPoints[xt]);kt=l.dot(l.sub(Qt,jt),Nt)-this.p_radiusA-this.p_radiusB,Pt=Qt;break}case ct.e_faceB:{Nt=C.mulVec2(It.q,this.p_localNormal);var jt=I.mulVec2(It,this.p_localPoint),Qt=I.mulVec2(_t,this.p_localPoints[xt]);kt=l.dot(l.sub(Qt,jt),Nt)-this.p_radiusA-this.p_radiusB,Pt=Qt,Nt.mul(-1);break}}var be=l.sub(Pt,j),$e=l.sub(Pt,rt);mt=d.min(mt,kt);var xe=_?m.toiBaugarte:m.baumgarte,qt=m.linearSlop,Kt=m.maxLinearCorrection,Jt=d.clamp(xe*(kt+qt),-Kt,0),Wt=l.crossVec2Vec2(be,Nt),tn=l.crossVec2Vec2($e,Nt),Kn=R+W+D*Wt*Wt+H*tn*tn,As=Kn>0?-Jt/Kn:0,_n=l.mulNumVec2(As,Nt);j.subMul(R,_n),ot-=D*l.crossVec2Vec2(be,_n),rt.addMul(W,_n),ft+=H*l.crossVec2Vec2($e,_n)}return L.c.setVec2(j),L.a=ot,F.c.setVec2(rt),F.a=ft,mt},g.prototype.initVelocityConstraint=function(h){var p=this.m_fixtureA,y=this.m_fixtureB,_=p.getBody(),$=y.getBody(),k=_.c_velocity,S=$.c_velocity,T=_.c_position,L=$.c_position,F=this.p_radiusA,O=this.p_radiusB,V=this.getManifold(),R=this.v_invMassA,D=this.v_invMassB,W=this.v_invIA,H=this.v_invIB,j=l.clone(this.p_localCenterA),ot=l.clone(this.p_localCenterB),rt=l.clone(T.c),ft=T.a,mt=l.clone(k.v),xt=k.w,_t=l.clone(L.c),It=L.a,Nt=l.clone(S.v),Pt=S.w,kt=I.identity(),wt=I.identity();kt.q.setAngle(ft),wt.q.setAngle(It),kt.p.setCombine(1,rt,-1,C.mulVec2(kt.q,j)),wt.p.setCombine(1,_t,-1,C.mulVec2(wt.q,ot));var Xt=V.getWorldManifold(null,kt,F,wt,O);this.v_normal.setVec2(Xt.normal);for(var jt=0;jt<this.v_pointCount;++jt){var Qt=this.v_points[jt];Qt.rA.setVec2(l.sub(Xt.points[jt],rt)),Qt.rB.setVec2(l.sub(Xt.points[jt],_t));var be=l.crossVec2Vec2(Qt.rA,this.v_normal),$e=l.crossVec2Vec2(Qt.rB,this.v_normal),xe=R+D+W*be*be+H*$e*$e;Qt.normalMass=xe>0?1/xe:0;var qt=l.crossVec2Num(this.v_normal,1),Kt=l.crossVec2Vec2(Qt.rA,qt),Jt=l.crossVec2Vec2(Qt.rB,qt),Wt=R+D+W*Kt*Kt+H*Jt*Jt;Qt.tangentMass=Wt>0?1/Wt:0,Qt.velocityBias=0;var tn=l.dot(this.v_normal,Nt)+l.dot(this.v_normal,l.crossNumVec2(Pt,Qt.rB))-l.dot(this.v_normal,mt)-l.dot(this.v_normal,l.crossNumVec2(xt,Qt.rA));tn<-m.velocityThreshold&&(Qt.velocityBias=-this.v_restitution*tn)}if(this.v_pointCount==2&&h.blockSolve){var Kn=this.v_points[0],As=this.v_points[1],_n=l.crossVec2Vec2(Kn.rA,this.v_normal),Io=l.crossVec2Vec2(Kn.rB,this.v_normal),Mr=l.crossVec2Vec2(As.rA,this.v_normal),Xn=l.crossVec2Vec2(As.rB,this.v_normal),co=R+D+W*_n*_n+H*Io*Io,Vr=R+D+W*Mr*Mr+H*Xn*Xn,Lr=R+D+W*_n*Mr+H*Io*Xn,lo=1e3;co*co<lo*(co*Vr-Lr*Lr)?(this.v_K.ex.setNum(co,Lr),this.v_K.ey.setNum(Lr,Vr),this.v_normalMass.set(this.v_K.getInverse())):this.v_pointCount=1}T.c.setVec2(rt),T.a=ft,k.v.setVec2(mt),k.w=xt,L.c.setVec2(_t),L.a=It,S.v.setVec2(Nt),S.w=Pt},g.prototype.warmStartConstraint=function(h){var p=this.m_fixtureA,y=this.m_fixtureB,_=p.getBody(),$=y.getBody(),k=_.c_velocity,S=$.c_velocity;_.c_position,$.c_position;for(var T=this.v_invMassA,L=this.v_invIA,F=this.v_invMassB,O=this.v_invIB,V=l.clone(k.v),R=k.w,D=l.clone(S.v),W=S.w,H=this.v_normal,j=l.crossVec2Num(H,1),ot=0;ot<this.v_pointCount;++ot){var rt=this.v_points[ot],ft=l.combine(rt.normalImpulse,H,rt.tangentImpulse,j);R-=L*l.crossVec2Vec2(rt.rA,ft),V.subMul(T,ft),W+=O*l.crossVec2Vec2(rt.rB,ft),D.addMul(F,ft)}k.v.setVec2(V),k.w=R,S.v.setVec2(D),S.w=W},g.prototype.storeConstraintImpulses=function(h){for(var p=this.m_manifold,y=0;y<this.v_pointCount;++y)p.points[y].normalImpulse=this.v_points[y].normalImpulse,p.points[y].tangentImpulse=this.v_points[y].tangentImpulse},g.prototype.solveVelocityConstraint=function(h){var p=this.m_fixtureA.m_body,y=this.m_fixtureB.m_body,_=p.c_velocity;p.c_position;var $=y.c_velocity;y.c_position;for(var k=this.v_invMassA,S=this.v_invIA,T=this.v_invMassB,L=this.v_invIB,F=l.clone(_.v),O=_.w,V=l.clone($.v),R=$.w,D=this.v_normal,W=l.crossVec2Num(D,1),H=this.v_friction,j=0;j<this.v_pointCount;++j){var ot=this.v_points[j],rt=l.zero();rt.addCombine(1,V,1,l.crossNumVec2(R,ot.rB)),rt.subCombine(1,F,1,l.crossNumVec2(O,ot.rA));var ft=l.dot(rt,W)-this.v_tangentSpeed,mt=ot.tangentMass*-ft,xt=H*ot.normalImpulse,_t=d.clamp(ot.tangentImpulse+mt,-xt,xt);mt=_t-ot.tangentImpulse,ot.tangentImpulse=_t;var It=l.mulNumVec2(mt,W);F.subMul(k,It),O-=S*l.crossVec2Vec2(ot.rA,It),V.addMul(T,It),R+=L*l.crossVec2Vec2(ot.rB,It)}if(this.v_pointCount==1||h.blockSolve==!1)for(var Nt=0;Nt<this.v_pointCount;++Nt){var ot=this.v_points[Nt],rt=l.zero();rt.addCombine(1,V,1,l.crossNumVec2(R,ot.rB)),rt.subCombine(1,F,1,l.crossNumVec2(O,ot.rA));var Pt=l.dot(rt,D),mt=-ot.normalMass*(Pt-ot.velocityBias),_t=d.max(ot.normalImpulse+mt,0);mt=_t-ot.normalImpulse,ot.normalImpulse=_t;var It=l.mulNumVec2(mt,D);F.subMul(k,It),O-=S*l.crossVec2Vec2(ot.rA,It),V.addMul(T,It),R+=L*l.crossVec2Vec2(ot.rB,It)}else{var kt=this.v_points[0],wt=this.v_points[1],Xt=l.neo(kt.normalImpulse,wt.normalImpulse),jt=l.zero().add(V).add(l.crossNumVec2(R,kt.rB)).sub(F).sub(l.crossNumVec2(O,kt.rA)),Qt=l.zero().add(V).add(l.crossNumVec2(R,wt.rB)).sub(F).sub(l.crossNumVec2(O,wt.rA)),be=l.dot(jt,D),$e=l.dot(Qt,D),xe=l.neo(be-kt.velocityBias,$e-wt.velocityBias);for(xe.sub(lt.mulVec2(this.v_K,Xt));;){var qt=lt.mulVec2(this.v_normalMass,xe).neg();if(qt.x>=0&&qt.y>=0){var Kt=l.sub(qt,Xt),Jt=l.mulNumVec2(Kt.x,D),Wt=l.mulNumVec2(Kt.y,D);F.subCombine(k,Jt,k,Wt),O-=S*(l.crossVec2Vec2(kt.rA,Jt)+l.crossVec2Vec2(wt.rA,Wt)),V.addCombine(T,Jt,T,Wt),R+=L*(l.crossVec2Vec2(kt.rB,Jt)+l.crossVec2Vec2(wt.rB,Wt)),kt.normalImpulse=qt.x,wt.normalImpulse=qt.y;break}if(qt.x=-kt.normalMass*xe.x,qt.y=0,be=0,$e=this.v_K.ex.y*qt.x+xe.y,qt.x>=0&&$e>=0){var Kt=l.sub(qt,Xt),Jt=l.mulNumVec2(Kt.x,D),Wt=l.mulNumVec2(Kt.y,D);F.subCombine(k,Jt,k,Wt),O-=S*(l.crossVec2Vec2(kt.rA,Jt)+l.crossVec2Vec2(wt.rA,Wt)),V.addCombine(T,Jt,T,Wt),R+=L*(l.crossVec2Vec2(kt.rB,Jt)+l.crossVec2Vec2(wt.rB,Wt)),kt.normalImpulse=qt.x,wt.normalImpulse=qt.y;break}if(qt.x=0,qt.y=-wt.normalMass*xe.y,be=this.v_K.ey.x*qt.y+xe.x,$e=0,qt.y>=0&&be>=0){var Kt=l.sub(qt,Xt),Jt=l.mulNumVec2(Kt.x,D),Wt=l.mulNumVec2(Kt.y,D);F.subCombine(k,Jt,k,Wt),O-=S*(l.crossVec2Vec2(kt.rA,Jt)+l.crossVec2Vec2(wt.rA,Wt)),V.addCombine(T,Jt,T,Wt),R+=L*(l.crossVec2Vec2(kt.rB,Jt)+l.crossVec2Vec2(wt.rB,Wt)),kt.normalImpulse=qt.x,wt.normalImpulse=qt.y;break}if(qt.x=0,qt.y=0,be=xe.x,$e=xe.y,be>=0&&$e>=0){var Kt=l.sub(qt,Xt),Jt=l.mulNumVec2(Kt.x,D),Wt=l.mulNumVec2(Kt.y,D);F.subCombine(k,Jt,k,Wt),O-=S*(l.crossVec2Vec2(kt.rA,Jt)+l.crossVec2Vec2(wt.rA,Wt)),V.addCombine(T,Jt,T,Wt),R+=L*(l.crossVec2Vec2(kt.rB,Jt)+l.crossVec2Vec2(wt.rB,Wt)),kt.normalImpulse=qt.x,wt.normalImpulse=qt.y;break}break}}_.v.setVec2(F),_.w=O,$.v.setVec2(V),$.w=R},g.addType=function(h,p,y){Ye[h]=Ye[h]||{},Ye[h][p]=y},g.create=function(h,p,y,_){var $=h.getType(),k=y.getType(),S,T;if(T=Ye[$]&&Ye[$][k])S=new g(h,p,y,_,T);else if(T=Ye[k]&&Ye[k][$])S=new g(y,_,h,p,T);else return null;h=S.getFixtureA(),y=S.getFixtureB(),p=S.getChildIndexA(),_=S.getChildIndexB();var L=h.getBody(),F=y.getBody();return S.m_nodeA.contact=S,S.m_nodeA.other=F,S.m_nodeA.prev=null,S.m_nodeA.next=L.m_contactList,L.m_contactList!=null&&(L.m_contactList.prev=S.m_nodeA),L.m_contactList=S.m_nodeA,S.m_nodeB.contact=S,S.m_nodeB.other=L,S.m_nodeB.prev=null,S.m_nodeB.next=F.m_contactList,F.m_contactList!=null&&(F.m_contactList.prev=S.m_nodeB),F.m_contactList=S.m_nodeB,h.isSensor()==!1&&y.isSensor()==!1&&(L.setAwake(!0),F.setAwake(!0)),S},g.destroy=function(h,p){var y=h.m_fixtureA,_=h.m_fixtureB,$=y.getBody(),k=_.getBody();h.isTouching()&&p.endContact(h),h.m_nodeA.prev&&(h.m_nodeA.prev.next=h.m_nodeA.next),h.m_nodeA.next&&(h.m_nodeA.next.prev=h.m_nodeA.prev),h.m_nodeA==$.m_contactList&&($.m_contactList=h.m_nodeA.next),h.m_nodeB.prev&&(h.m_nodeB.prev.next=h.m_nodeB.next),h.m_nodeB.next&&(h.m_nodeB.next.prev=h.m_nodeB.prev),h.m_nodeB==k.m_contactList&&(k.m_contactList=h.m_nodeB.next),h.m_manifold.pointCount>0&&y.isSensor()==!1&&_.isSensor()==!1&&($.setAwake(!0),k.setAwake(!0)),y.getType(),_.getType()},g}(),os=function(){function g(){this.other=null,this.joint=null,this.prev=null,this.next=null}return g}(),Me=function(){function g(h,p,y){this.m_type="unknown-joint",this.m_prev=null,this.m_next=null,this.m_edgeA=new os,this.m_edgeB=new os,this.m_islandFlag=!1,p="bodyA"in h?h.bodyA:p,y="bodyB"in h?h.bodyB:y,this.m_bodyA=p,this.m_bodyB=y,this.m_collideConnected=!!h.collideConnected,this.m_userData=h.userData}return g.prototype.isActive=function(){return this.m_bodyA.isActive()&&this.m_bodyB.isActive()},g.prototype.getType=function(){return this.m_type},g.prototype.getBodyA=function(){return this.m_bodyA},g.prototype.getBodyB=function(){return this.m_bodyB},g.prototype.getNext=function(){return this.m_next},g.prototype.getUserData=function(){return this.m_userData},g.prototype.setUserData=function(h){this.m_userData=h},g.prototype.getCollideConnected=function(){return this.m_collideConnected},g.prototype.shiftOrigin=function(h){},g}(),Ls=function(){return Date.now()},Ps=function(g){return Date.now()-g},wo={now:Ls,diff:Ps},Dr=function(){function g(){this.proxyA=new me,this.proxyB=new me,this.sweepA=new N,this.sweepB=new N}return g}(),Pn;(function(g){g[g.e_unknown=0]="e_unknown",g[g.e_failed=1]="e_failed",g[g.e_overlapped=2]="e_overlapped",g[g.e_touching=3]="e_touching",g[g.e_separated=4]="e_separated"})(Pn||(Pn={}));var Cc=function(){function g(){}return g}();Dt.toiTime=0,Dt.toiMaxTime=0,Dt.toiCalls=0,Dt.toiIters=0,Dt.toiMaxIters=0,Dt.toiRootIters=0,Dt.toiMaxRootIters=0;function Os(g,h){var p=wo.now();++Dt.toiCalls,g.state=Pn.e_unknown,g.t=h.tMax;var y=h.proxyA,_=h.proxyB,$=h.sweepA,k=h.sweepB;$.normalize(),k.normalize();var S=h.tMax,T=y.m_radius+_.m_radius,L=d.max(m.linearSlop,T-3*m.linearSlop),F=.25*m.linearSlop,O=0,V=m.maxTOIIterations,R=0,D=new _e,W=new oe;for(W.proxyA=h.proxyA,W.proxyB=h.proxyB,W.useRadii=!1;;){var H=I.identity(),j=I.identity();$.getTransform(H,O),k.getTransform(j,O),W.transformA=H,W.transformB=j;var ot=new fe;if(le(ot,D,W),ot.distance<=0){g.state=Pn.e_overlapped,g.t=0;break}if(ot.distance<L+F){g.state=Pn.e_touching,g.t=O;break}var rt=new eh;rt.initialize(D,y,$,_,k,O);for(var ft=!1,mt=S,xt=0;;){var _t=rt.findMinSeparation(mt);if(_t>L+F){g.state=Pn.e_separated,g.t=S,ft=!0;break}if(_t>L-F){O=mt;break}var It=rt.evaluate(O);if(It<L-F){g.state=Pn.e_failed,g.t=O,ft=!0;break}if(It<=L+F){g.state=Pn.e_touching,g.t=O,ft=!0;break}for(var Nt=0,Pt=O,kt=mt;;){var wt=void 0;Nt&1?wt=Pt+(L-It)*(kt-Pt)/(_t-It):wt=.5*(Pt+kt),++Nt,++Dt.toiRootIters;var Xt=rt.evaluate(wt);if(rt.indexA,rt.indexB,d.abs(Xt-L)<F){mt=wt;break}if(Xt>L?(Pt=wt,It=Xt):(kt=wt,_t=Xt),Nt===50)break}if(Dt.toiMaxRootIters=d.max(Dt.toiMaxRootIters,Nt),++xt,xt===m.maxPolygonVertices)break}if(++R,++Dt.toiIters,ft)break;if(R===V){g.state=Pn.e_failed,g.t=O;break}}Dt.toiMaxIters=d.max(Dt.toiMaxIters,R);var jt=wo.diff(p);Dt.toiMaxTime=d.max(Dt.toiMaxTime,jt),Dt.toiTime+=jt}var zs;(function(g){g[g.e_points=1]="e_points",g[g.e_faceA=2]="e_faceA",g[g.e_faceB=3]="e_faceB"})(zs||(zs={}));var eh=function(){function g(){this.m_proxyA=new me,this.m_proxyB=new me,this.m_localPoint=l.zero(),this.m_axis=l.zero()}return g.prototype.initialize=function(h,p,y,_,$,k){this.m_proxyA=p,this.m_proxyB=_;var S=h.count;this.m_sweepA=y,this.m_sweepB=$;var T=I.identity(),L=I.identity();if(this.m_sweepA.getTransform(T,k),this.m_sweepB.getTransform(L,k),S===1){this.m_type=zs.e_points;var F=this.m_proxyA.getVertex(h.indexA[0]),O=this.m_proxyB.getVertex(h.indexB[0]),V=I.mulVec2(T,F),R=I.mulVec2(L,O);this.m_axis.setCombine(1,R,-1,V);var D=this.m_axis.normalize();return D}else if(h.indexA[0]===h.indexA[1]){this.m_type=zs.e_faceB;var W=_.getVertex(h.indexB[0]),H=_.getVertex(h.indexB[1]);this.m_axis=l.crossVec2Num(l.sub(H,W),1),this.m_axis.normalize();var j=C.mulVec2(L.q,this.m_axis);this.m_localPoint=l.mid(W,H);var R=I.mulVec2(L,this.m_localPoint),F=p.getVertex(h.indexA[0]),V=I.mulVec2(T,F),D=l.dot(V,j)-l.dot(R,j);return D<0&&(this.m_axis=l.neg(this.m_axis),D=-D),D}else{this.m_type=zs.e_faceA;var ot=this.m_proxyA.getVertex(h.indexA[0]),rt=this.m_proxyA.getVertex(h.indexA[1]);this.m_axis=l.crossVec2Num(l.sub(rt,ot),1),this.m_axis.normalize();var j=C.mulVec2(T.q,this.m_axis);this.m_localPoint=l.mid(ot,rt);var V=I.mulVec2(T,this.m_localPoint),O=this.m_proxyB.getVertex(h.indexB[0]),R=I.mulVec2(L,O),D=l.dot(R,j)-l.dot(V,j);return D<0&&(this.m_axis=l.neg(this.m_axis),D=-D),D}},g.prototype.compute=function(h,p){var y=I.identity(),_=I.identity();switch(this.m_sweepA.getTransform(y,p),this.m_sweepB.getTransform(_,p),this.m_type){case zs.e_points:{if(h){var $=C.mulTVec2(y.q,this.m_axis),k=C.mulTVec2(_.q,l.neg(this.m_axis));this.indexA=this.m_proxyA.getSupport($),this.indexB=this.m_proxyB.getSupport(k)}var S=this.m_proxyA.getVertex(this.indexA),T=this.m_proxyB.getVertex(this.indexB),L=I.mulVec2(y,S),F=I.mulVec2(_,T),O=l.dot(F,this.m_axis)-l.dot(L,this.m_axis);return O}case zs.e_faceA:{var V=C.mulVec2(y.q,this.m_axis),L=I.mulVec2(y,this.m_localPoint);if(h){var k=C.mulTVec2(_.q,l.neg(V));this.indexA=-1,this.indexB=this.m_proxyB.getSupport(k)}var T=this.m_proxyB.getVertex(this.indexB),F=I.mulVec2(_,T),O=l.dot(F,V)-l.dot(L,V);return O}case zs.e_faceB:{var V=C.mulVec2(_.q,this.m_axis),F=I.mulVec2(_,this.m_localPoint);if(h){var $=C.mulTVec2(y.q,l.neg(V));this.indexB=-1,this.indexA=this.m_proxyA.getSupport($)}var S=this.m_proxyA.getVertex(this.indexA),L=I.mulVec2(y,S),O=l.dot(L,V)-l.dot(F,V);return O}default:return h&&(this.indexA=-1,this.indexB=-1),0}},g.prototype.findMinSeparation=function(h){return this.compute(!0,h)},g.prototype.evaluate=function(h){return this.compute(!1,h)},g}(),nh=function(){function g(){this.dt=0,this.inv_dt=0,this.velocityIterations=0,this.positionIterations=0,this.warmStarting=!1,this.blockSolve=!0,this.inv_dt0=0,this.dtRatio=1}return g.prototype.reset=function(h){this.dt>0&&(this.inv_dt0=this.inv_dt),this.dt=h,this.inv_dt=h==0?0:1/h,this.dtRatio=h*this.inv_dt0},g}(),Br=new nh,X1=function(){function g(h){this.contact=h,this.normals=[],this.tangents=[]}return Object.defineProperty(g.prototype,"normalImpulses",{get:function(){var h=this.contact,p=this.normals;p.length=0;for(var y=0;y<h.v_points.length;++y)p.push(h.v_points[y].normalImpulse);return p},enumerable:!1,configurable:!0}),Object.defineProperty(g.prototype,"tangentImpulses",{get:function(){var h=this.contact,p=this.tangents;p.length=0;for(var y=0;y<h.v_points.length;++y)p.push(h.v_points[y].tangentImpulse);return p},enumerable:!1,configurable:!0}),g}(),Im=function(){function g(h){this.m_world=h,this.m_stack=[],this.m_bodies=[],this.m_contacts=[],this.m_joints=[]}return g.prototype.clear=function(){this.m_stack.length=0,this.m_bodies.length=0,this.m_contacts.length=0,this.m_joints.length=0},g.prototype.addBody=function(h){this.m_bodies.push(h)},g.prototype.addContact=function(h){this.m_contacts.push(h)},g.prototype.addJoint=function(h){this.m_joints.push(h)},g.prototype.solveWorld=function(h){for(var p=this.m_world,y=p.m_bodyList;y;y=y.m_next)y.m_islandFlag=!1;for(var _=p.m_contactList;_;_=_.m_next)_.m_islandFlag=!1;for(var $=p.m_jointList;$;$=$.m_next)$.m_islandFlag=!1;for(var k=this.m_stack,S=p.m_bodyList;S;S=S.m_next)if(!S.m_islandFlag&&!(S.isAwake()==!1||S.isActive()==!1)&&!S.isStatic()){for(this.clear(),k.push(S),S.m_islandFlag=!0;k.length>0;){var y=k.pop();if(this.addBody(y),y.setAwake(!0),!y.isStatic()){for(var T=y.m_contactList;T;T=T.next){var L=T.contact;if(!L.m_islandFlag&&!(L.isEnabled()==!1||L.isTouching()==!1)){var F=L.m_fixtureA.m_isSensor,O=L.m_fixtureB.m_isSensor;if(!(F||O)){this.addContact(L),L.m_islandFlag=!0;var V=T.other;V.m_islandFlag||(k.push(V),V.m_islandFlag=!0)}}}for(var R=y.m_jointList;R;R=R.next)if(R.joint.m_islandFlag!=!0){var V=R.other;V.isActive()!=!1&&(this.addJoint(R.joint),R.joint.m_islandFlag=!0,!V.m_islandFlag&&(k.push(V),V.m_islandFlag=!0))}}}this.solveIsland(h);for(var D=0;D<this.m_bodies.length;++D){var y=this.m_bodies[D];y.isStatic()&&(y.m_islandFlag=!1)}}},g.prototype.solveIsland=function(h){for(var p=this.m_world,y=p.m_gravity,_=p.m_allowSleep,$=h.dt,k=0;k<this.m_bodies.length;++k){var S=this.m_bodies[k],T=l.clone(S.m_sweep.c),L=S.m_sweep.a,F=l.clone(S.m_linearVelocity),O=S.m_angularVelocity;S.m_sweep.c0.setVec2(S.m_sweep.c),S.m_sweep.a0=S.m_sweep.a,S.isDynamic()&&(F.addMul($*S.m_gravityScale,y),F.addMul($*S.m_invMass,S.m_force),O+=$*S.m_invI*S.m_torque,F.mul(1/(1+$*S.m_linearDamping)),O*=1/(1+$*S.m_angularDamping)),S.c_position.c=T,S.c_position.a=L,S.c_velocity.v=F,S.c_velocity.w=O}for(var k=0;k<this.m_contacts.length;++k){var V=this.m_contacts[k];V.initConstraint(h)}for(var k=0;k<this.m_contacts.length;++k){var V=this.m_contacts[k];V.initVelocityConstraint(h)}if(h.warmStarting)for(var k=0;k<this.m_contacts.length;++k){var V=this.m_contacts[k];V.warmStartConstraint(h)}for(var k=0;k<this.m_joints.length;++k){var R=this.m_joints[k];R.initVelocityConstraints(h)}for(var k=0;k<h.velocityIterations;++k){for(var D=0;D<this.m_joints.length;++D){var R=this.m_joints[D];R.solveVelocityConstraints(h)}for(var D=0;D<this.m_contacts.length;++D){var V=this.m_contacts[D];V.solveVelocityConstraint(h)}}for(var k=0;k<this.m_contacts.length;++k){var V=this.m_contacts[k];V.storeConstraintImpulses(h)}for(var k=0;k<this.m_bodies.length;++k){var S=this.m_bodies[k],T=l.clone(S.c_position.c),L=S.c_position.a,F=l.clone(S.c_velocity.v),O=S.c_velocity.w,W=l.mulNumVec2($,F);if(l.lengthSquared(W)>m.maxTranslationSquared){var H=m.maxTranslation/W.length();F.mul(H)}var j=$*O;if(j*j>m.maxRotationSquared){var H=m.maxRotation/d.abs(j);O*=H}T.addMul($,F),L+=$*O,S.c_position.c.setVec2(T),S.c_position.a=L,S.c_velocity.v.setVec2(F),S.c_velocity.w=O}for(var ot=!1,k=0;k<h.positionIterations;++k){for(var rt=0,D=0;D<this.m_contacts.length;++D){var V=this.m_contacts[D],ft=V.solvePositionConstraint(h);rt=d.min(rt,ft)}for(var mt=rt>=-3*m.linearSlop,xt=!0,D=0;D<this.m_joints.length;++D){var R=this.m_joints[D],_t=R.solvePositionConstraints(h);xt=xt&&_t}if(mt&&xt){ot=!0;break}}for(var k=0;k<this.m_bodies.length;++k){var S=this.m_bodies[k];S.m_sweep.c.setVec2(S.c_position.c),S.m_sweep.a=S.c_position.a,S.m_linearVelocity.setVec2(S.c_velocity.v),S.m_angularVelocity=S.c_velocity.w,S.synchronizeTransform()}if(this.postSolveIsland(),_){for(var It=1/0,Nt=m.linearSleepToleranceSqr,Pt=m.angularSleepToleranceSqr,k=0;k<this.m_bodies.length;++k){var S=this.m_bodies[k];S.isStatic()||(S.m_autoSleepFlag==!1||S.m_angularVelocity*S.m_angularVelocity>Pt||l.lengthSquared(S.m_linearVelocity)>Nt?(S.m_sleepTime=0,It=0):(S.m_sleepTime+=$,It=d.min(It,S.m_sleepTime)))}if(It>=m.timeToSleep&&ot)for(var k=0;k<this.m_bodies.length;++k){var S=this.m_bodies[k];S.setAwake(!1)}}},g.prototype.printBodies=function(h){for(var p=0;p<this.m_bodies.length;++p){var y=this.m_bodies[p];u.debug(h,y.c_position.a,y.c_position.c.x,y.c_position.c.y,y.c_velocity.w,y.c_velocity.v.x,y.c_velocity.v.y)}},g.prototype.solveWorldTOI=function(h){var p=this.m_world;if(p.m_stepComplete){for(var qt=p.m_bodyList;qt;qt=qt.m_next)qt.m_islandFlag=!1,qt.m_sweep.alpha0=0;for(var Kt=p.m_contactList;Kt;Kt=Kt.m_next)Kt.m_toiFlag=!1,Kt.m_islandFlag=!1,Kt.m_toiCount=0,Kt.m_toi=1}for(;;){for(var y=null,_=1,Kt=p.m_contactList;Kt;Kt=Kt.m_next)if(Kt.isEnabled()!=!1&&!(Kt.m_toiCount>m.maxSubSteps)){var $=1;if(Kt.m_toiFlag)$=Kt.m_toi;else{var k=Kt.getFixtureA(),S=Kt.getFixtureB();if(k.isSensor()||S.isSensor())continue;var T=k.getBody(),L=S.getBody(),F=T.isAwake()&&!T.isStatic(),O=L.isAwake()&&!L.isStatic();if(F==!1&&O==!1)continue;var V=T.isBullet()||!T.isDynamic(),R=L.isBullet()||!L.isDynamic();if(V==!1&&R==!1)continue;var D=T.m_sweep.alpha0;T.m_sweep.alpha0<L.m_sweep.alpha0?(D=L.m_sweep.alpha0,T.m_sweep.advance(D)):L.m_sweep.alpha0<T.m_sweep.alpha0&&(D=T.m_sweep.alpha0,L.m_sweep.advance(D));var W=Kt.getChildIndexA(),H=Kt.getChildIndexB();T.m_sweep,L.m_sweep;var j=new Dr;j.proxyA.set(k.getShape(),W),j.proxyB.set(S.getShape(),H),j.sweepA.set(T.m_sweep),j.sweepB.set(L.m_sweep),j.tMax=1;var ot=new Cc;Os(ot,j);var rt=ot.t;ot.state==Pn.e_touching?$=d.min(D+(1-D)*rt,1):$=1,Kt.m_toi=$,Kt.m_toiFlag=!0}$<_&&(y=Kt,_=$)}if(y==null||1-10*d.EPSILON<_){p.m_stepComplete=!0;break}var ft=y.getFixtureA(),mt=y.getFixtureB(),xt=ft.getBody(),_t=mt.getBody(),It=xt.m_sweep.clone(),Nt=_t.m_sweep.clone();if(xt.advance(_),_t.advance(_),y.update(p),y.m_toiFlag=!1,++y.m_toiCount,y.isEnabled()==!1||y.isTouching()==!1){y.setEnabled(!1),xt.m_sweep.set(It),_t.m_sweep.set(Nt),xt.synchronizeTransform(),_t.synchronizeTransform();continue}xt.setAwake(!0),_t.setAwake(!0),this.clear(),this.addBody(xt),this.addBody(_t),this.addContact(y),xt.m_islandFlag=!0,_t.m_islandFlag=!0,y.m_islandFlag=!0;for(var Pt=[xt,_t],kt=0;kt<Pt.length;++kt){var wt=Pt[kt];if(wt.isDynamic())for(var Xt=wt.m_contactList;Xt;Xt=Xt.next){var jt=Xt.contact;if(!jt.m_islandFlag){var Qt=Xt.other;if(!(Qt.isDynamic()&&!wt.isBullet()&&!Qt.isBullet())){var be=jt.m_fixtureA.m_isSensor,$e=jt.m_fixtureB.m_isSensor;if(!(be||$e)){var xe=Qt.m_sweep.clone();if(Qt.m_islandFlag==!1&&Qt.advance(_),jt.update(p),jt.isEnabled()==!1||jt.isTouching()==!1){Qt.m_sweep.set(xe),Qt.synchronizeTransform();continue}jt.m_islandFlag=!0,this.addContact(jt),!Qt.m_islandFlag&&(Qt.m_islandFlag=!0,Qt.isStatic()||Qt.setAwake(!0),this.addBody(Qt))}}}}}Br.reset((1-_)*h.dt),Br.dtRatio=1,Br.positionIterations=20,Br.velocityIterations=h.velocityIterations,Br.warmStarting=!1,this.solveIslandTOI(Br,xt,_t);for(var kt=0;kt<this.m_bodies.length;++kt){var wt=this.m_bodies[kt];if(wt.m_islandFlag=!1,!!wt.isDynamic()){wt.synchronizeFixtures();for(var Xt=wt.m_contactList;Xt;Xt=Xt.next)Xt.contact.m_toiFlag=!1,Xt.contact.m_islandFlag=!1}}if(p.findNewContacts(),p.m_subStepping){p.m_stepComplete=!1;break}}var qt,Kt},g.prototype.solveIslandTOI=function(h,p,y){this.m_world;for(var F=0;F<this.m_bodies.length;++F){var _=this.m_bodies[F];_.c_position.c.setVec2(_.m_sweep.c),_.c_position.a=_.m_sweep.a,_.c_velocity.v.setVec2(_.m_linearVelocity),_.c_velocity.w=_.m_angularVelocity}for(var F=0;F<this.m_contacts.length;++F){var $=this.m_contacts[F];$.initConstraint(h)}for(var F=0;F<h.positionIterations;++F){for(var k=0,S=0;S<this.m_contacts.length;++S){var $=this.m_contacts[S],T=$.solvePositionConstraintTOI(h,p,y);k=d.min(k,T)}var L=k>=-1.5*m.linearSlop;if(L)break}var F,O;p.m_sweep.c0.setVec2(p.c_position.c),p.m_sweep.a0=p.c_position.a,y.m_sweep.c0.setVec2(y.c_position.c),y.m_sweep.a0=y.c_position.a;for(var F=0;F<this.m_contacts.length;++F){var $=this.m_contacts[F];$.initVelocityConstraint(h)}for(var F=0;F<h.velocityIterations;++F)for(var S=0;S<this.m_contacts.length;++S){var $=this.m_contacts[S];$.solveVelocityConstraint(h)}for(var V=h.dt,F=0;F<this.m_bodies.length;++F){var _=this.m_bodies[F],O=l.clone(_.c_position.c),R=_.c_position.a,D=l.clone(_.c_velocity.v),W=_.c_velocity.w,H=l.mulNumVec2(V,D);if(l.dot(H,H)>m.maxTranslationSquared){var j=m.maxTranslation/H.length();D.mul(j)}var ot=V*W;if(ot*ot>m.maxRotationSquared){var j=m.maxRotation/d.abs(ot);W*=j}O.addMul(V,D),R+=V*W,_.c_position.c=O,_.c_position.a=R,_.c_velocity.v=D,_.c_velocity.w=W,_.m_sweep.c=O,_.m_sweep.a=R,_.m_linearVelocity=D,_.m_angularVelocity=W,_.synchronizeTransform()}this.postSolveIsland()},g.prototype.postSolveIsland=function(){for(var h=0;h<this.m_contacts.length;++h){var p=this.m_contacts[h];this.m_world.postSolve(p,p.m_impulse)}},g}(),Y1={gravity:l.zero(),allowSleep:!0,warmStarting:!0,continuousPhysics:!0,subStepping:!1,blockSolve:!0,velocityIterations:8,positionIterations:3},sh=function(){function g(h){var p=this;if(this.s_step=new nh,this.createContact=function(y,_){var $=y.fixture,k=_.fixture,S=y.childIndex,T=_.childIndex,L=$.getBody(),F=k.getBody();if(L!=F){for(var O=F.getContactList();O;){if(O.other==L){var V=O.contact.getFixtureA(),R=O.contact.getFixtureB(),D=O.contact.getChildIndexA(),W=O.contact.getChildIndexB();if(V==$&&R==k&&D==S&&W==T||V==k&&R==$&&D==T&&W==S)return}O=O.next}if(F.shouldCollide(L)!=!1&&k.shouldCollide($)!=!1){var H=We.create($,S,k,T);H!=null&&(H.m_prev=null,p.m_contactList!=null&&(H.m_next=p.m_contactList,p.m_contactList.m_prev=H),p.m_contactList=H,++p.m_contactCount)}}},!(this instanceof g))return new g(h);h&&l.isValid(h)&&(h={gravity:h}),h=i(h,Y1),this.m_solver=new Im(this),this.m_broadPhase=new A,this.m_contactList=null,this.m_contactCount=0,this.m_bodyList=null,this.m_bodyCount=0,this.m_jointList=null,this.m_jointCount=0,this.m_stepComplete=!0,this.m_allowSleep=h.allowSleep,this.m_gravity=l.clone(h.gravity),this.m_clearForces=!0,this.m_newFixture=!1,this.m_locked=!1,this.m_warmStarting=h.warmStarting,this.m_continuousPhysics=h.continuousPhysics,this.m_subStepping=h.subStepping,this.m_blockSolve=h.blockSolve,this.m_velocityIterations=h.velocityIterations,this.m_positionIterations=h.positionIterations,this.m_t=0}return g.prototype._serialize=function(){for(var h=[],p=[],y=this.getBodyList();y;y=y.getNext())h.push(y);for(var _=this.getJointList();_;_=_.getNext())typeof _._serialize=="function"&&p.push(_);return{gravity:this.m_gravity,bodies:h,joints:p}},g._deserialize=function(h,p,y){if(!h)return new g;var _=new g(h.gravity);if(h.bodies)for(var $=h.bodies.length-1;$>=0;$-=1)_._addBody(y(Z,h.bodies[$],_));if(h.joints)for(var $=h.joints.length-1;$>=0;$--)_.createJoint(y(Me,h.joints[$],_));return _},g.prototype.getBodyList=function(){return this.m_bodyList},g.prototype.getJointList=function(){return this.m_jointList},g.prototype.getContactList=function(){return this.m_contactList},g.prototype.getBodyCount=function(){return this.m_bodyCount},g.prototype.getJointCount=function(){return this.m_jointCount},g.prototype.getContactCount=function(){return this.m_contactCount},g.prototype.setGravity=function(h){this.m_gravity=h},g.prototype.getGravity=function(){return this.m_gravity},g.prototype.isLocked=function(){return this.m_locked},g.prototype.setAllowSleeping=function(h){if(h!=this.m_allowSleep&&(this.m_allowSleep=h,this.m_allowSleep==!1))for(var p=this.m_bodyList;p;p=p.m_next)p.setAwake(!0)},g.prototype.getAllowSleeping=function(){return this.m_allowSleep},g.prototype.setWarmStarting=function(h){this.m_warmStarting=h},g.prototype.getWarmStarting=function(){return this.m_warmStarting},g.prototype.setContinuousPhysics=function(h){this.m_continuousPhysics=h},g.prototype.getContinuousPhysics=function(){return this.m_continuousPhysics},g.prototype.setSubStepping=function(h){this.m_subStepping=h},g.prototype.getSubStepping=function(){return this.m_subStepping},g.prototype.setAutoClearForces=function(h){this.m_clearForces=h},g.prototype.getAutoClearForces=function(){return this.m_clearForces},g.prototype.clearForces=function(){for(var h=this.m_bodyList;h;h=h.getNext())h.m_force.setZero(),h.m_torque=0},g.prototype.queryAABB=function(h,p){var y=this.m_broadPhase;this.m_broadPhase.query(h,function(_){var $=y.getUserData(_);return p($.fixture)})},g.prototype.rayCast=function(h,p,y){var _=this.m_broadPhase;this.m_broadPhase.rayCast({maxFraction:1,p1:h,p2:p},function($,k){var S=_.getUserData(k),T=S.fixture,L=S.childIndex,F={},O=T.rayCast(F,$,L);if(O){var V=F.fraction,R=l.add(l.mulNumVec2(1-V,$.p1),l.mulNumVec2(V,$.p2));return y(T,R,F.normal,V)}return $.maxFraction})},g.prototype.getProxyCount=function(){return this.m_broadPhase.getProxyCount()},g.prototype.getTreeHeight=function(){return this.m_broadPhase.getTreeHeight()},g.prototype.getTreeBalance=function(){return this.m_broadPhase.getTreeBalance()},g.prototype.getTreeQuality=function(){return this.m_broadPhase.getTreeQuality()},g.prototype.shiftOrigin=function(h){if(!this.m_locked){for(var p=this.m_bodyList;p;p=p.m_next)p.m_xf.p.sub(h),p.m_sweep.c0.sub(h),p.m_sweep.c.sub(h);for(var y=this.m_jointList;y;y=y.m_next)y.shiftOrigin(h);this.m_broadPhase.shiftOrigin(h)}},g.prototype._addBody=function(h){this.isLocked()||(h.m_prev=null,h.m_next=this.m_bodyList,this.m_bodyList&&(this.m_bodyList.m_prev=h),this.m_bodyList=h,++this.m_bodyCount)},g.prototype.createBody=function(h,p){if(this.isLocked())return null;var y={};h&&(l.isValid(h)?y={position:h,angle:p}:typeof h=="object"&&(y=h));var _=new Z(this,y);return this._addBody(_),_},g.prototype.createDynamicBody=function(h,p){var y={};return h&&(l.isValid(h)?y={position:h,angle:p}:typeof h=="object"&&(y=h)),y.type="dynamic",this.createBody(y)},g.prototype.createKinematicBody=function(h,p){var y={};return h&&(l.isValid(h)?y={position:h,angle:p}:typeof h=="object"&&(y=h)),y.type="kinematic",this.createBody(y)},g.prototype.destroyBody=function(h){if(!this.isLocked()){if(h.m_destroyed)return!1;for(var p=h.m_jointList;p;){var y=p;p=p.next,this.publish("remove-joint",y.joint),this.destroyJoint(y.joint),h.m_jointList=p}h.m_jointList=null;for(var _=h.m_contactList;_;){var $=_;_=_.next,this.destroyContact($.contact),h.m_contactList=_}h.m_contactList=null;for(var k=h.m_fixtureList;k;){var S=k;k=k.m_next,this.publish("remove-fixture",S),S.destroyProxies(this.m_broadPhase),h.m_fixtureList=k}return h.m_fixtureList=null,h.m_prev&&(h.m_prev.m_next=h.m_next),h.m_next&&(h.m_next.m_prev=h.m_prev),h==this.m_bodyList&&(this.m_bodyList=h.m_next),h.m_destroyed=!0,--this.m_bodyCount,this.publish("remove-body",h),!0}},g.prototype.createJoint=function(h){if(this.isLocked())return null;if(h.m_prev=null,h.m_next=this.m_jointList,this.m_jointList&&(this.m_jointList.m_prev=h),this.m_jointList=h,++this.m_jointCount,h.m_edgeA.joint=h,h.m_edgeA.other=h.m_bodyB,h.m_edgeA.prev=null,h.m_edgeA.next=h.m_bodyA.m_jointList,h.m_bodyA.m_jointList&&(h.m_bodyA.m_jointList.prev=h.m_edgeA),h.m_bodyA.m_jointList=h.m_edgeA,h.m_edgeB.joint=h,h.m_edgeB.other=h.m_bodyA,h.m_edgeB.prev=null,h.m_edgeB.next=h.m_bodyB.m_jointList,h.m_bodyB.m_jointList&&(h.m_bodyB.m_jointList.prev=h.m_edgeB),h.m_bodyB.m_jointList=h.m_edgeB,h.m_collideConnected==!1)for(var p=h.m_bodyB.getContactList();p;p=p.next)p.other==h.m_bodyA&&p.contact.flagForFiltering();return h},g.prototype.destroyJoint=function(h){if(!this.isLocked()){h.m_prev&&(h.m_prev.m_next=h.m_next),h.m_next&&(h.m_next.m_prev=h.m_prev),h==this.m_jointList&&(this.m_jointList=h.m_next);var p=h.m_bodyA,y=h.m_bodyB;if(p.setAwake(!0),y.setAwake(!0),h.m_edgeA.prev&&(h.m_edgeA.prev.next=h.m_edgeA.next),h.m_edgeA.next&&(h.m_edgeA.next.prev=h.m_edgeA.prev),h.m_edgeA==p.m_jointList&&(p.m_jointList=h.m_edgeA.next),h.m_edgeA.prev=null,h.m_edgeA.next=null,h.m_edgeB.prev&&(h.m_edgeB.prev.next=h.m_edgeB.next),h.m_edgeB.next&&(h.m_edgeB.next.prev=h.m_edgeB.prev),h.m_edgeB==y.m_jointList&&(y.m_jointList=h.m_edgeB.next),h.m_edgeB.prev=null,h.m_edgeB.next=null,--this.m_jointCount,h.m_collideConnected==!1)for(var _=y.getContactList();_;)_.other==p&&_.contact.flagForFiltering(),_=_.next;this.publish("remove-joint",h)}},g.prototype.step=function(h,p,y){if(this.publish("pre-step",h),(p|0)!==p&&(p=0),p=p||this.m_velocityIterations,y=y||this.m_positionIterations,this.m_newFixture&&(this.findNewContacts(),this.m_newFixture=!1),this.m_locked=!0,this.s_step.reset(h),this.s_step.velocityIterations=p,this.s_step.positionIterations=y,this.s_step.warmStarting=this.m_warmStarting,this.s_step.blockSolve=this.m_blockSolve,this.updateContacts(),this.m_stepComplete&&h>0){this.m_solver.solveWorld(this.s_step);for(var _=this.m_bodyList;_;_=_.getNext())_.m_islandFlag!=!1&&(_.isStatic()||_.synchronizeFixtures());this.findNewContacts()}this.m_continuousPhysics&&h>0&&this.m_solver.solveWorldTOI(this.s_step),this.m_clearForces&&this.clearForces(),this.m_locked=!1,this.publish("post-step",h)},g.prototype.findNewContacts=function(){this.m_broadPhase.updatePairs(this.createContact)},g.prototype.updateContacts=function(){for(var h,p=this.m_contactList;h=p;){p=h.getNext();var y=h.getFixtureA(),_=h.getFixtureB(),$=h.getChildIndexA(),k=h.getChildIndexB(),S=y.getBody(),T=_.getBody();if(h.m_filterFlag){if(T.shouldCollide(S)==!1){this.destroyContact(h);continue}if(_.shouldCollide(y)==!1){this.destroyContact(h);continue}h.m_filterFlag=!1}var L=S.isAwake()&&!S.isStatic(),F=T.isAwake()&&!T.isStatic();if(!(L==!1&&F==!1)){var O=y.m_proxies[$].proxyId,V=_.m_proxies[k].proxyId,R=this.m_broadPhase.testOverlap(O,V);if(R==!1){this.destroyContact(h);continue}h.update(this)}}},g.prototype.destroyContact=function(h){We.destroy(h,this),h.m_prev&&(h.m_prev.m_next=h.m_next),h.m_next&&(h.m_next.m_prev=h.m_prev),h==this.m_contactList&&(this.m_contactList=h.m_next),--this.m_contactCount},g.prototype.on=function(h,p){return typeof h!="string"||typeof p!="function"?this:(this._listeners||(this._listeners={}),this._listeners[h]||(this._listeners[h]=[]),this._listeners[h].push(p),this)},g.prototype.off=function(h,p){if(typeof h!="string"||typeof p!="function")return this;var y=this._listeners&&this._listeners[h];if(!y||!y.length)return this;var _=y.indexOf(p);return _>=0&&y.splice(_,1),this},g.prototype.publish=function(h,p,y,_){var $=this._listeners&&this._listeners[h];if(!$||!$.length)return 0;for(var k=0;k<$.length;k++)$[k].call(this,p,y,_);return $.length},g.prototype.beginContact=function(h){this.publish("begin-contact",h)},g.prototype.endContact=function(h){this.publish("end-contact",h)},g.prototype.preSolve=function(h,p){this.publish("pre-solve",h,p)},g.prototype.postSolve=function(h,p){this.publish("post-solve",h,p)},g}(),Zt=function(){function g(h,p,y){if(!(this instanceof g))return new g(h,p,y);typeof h>"u"?(this.x=0,this.y=0,this.z=0):typeof h=="object"?(this.x=h.x,this.y=h.y,this.z=h.z):(this.x=h,this.y=p,this.z=y)}return g.prototype._serialize=function(){return{x:this.x,y:this.y,z:this.z}},g._deserialize=function(h){var p=Object.create(g.prototype);return p.x=h.x,p.y=h.y,p.z=h.z,p},g.neo=function(h,p,y){var _=Object.create(g.prototype);return _.x=h,_.y=p,_.z=y,_},g.zero=function(){var h=Object.create(g.prototype);return h.x=0,h.y=0,h.z=0,h},g.clone=function(h){return g.neo(h.x,h.y,h.z)},g.prototype.toString=function(){return JSON.stringify(this)},g.isValid=function(h){return h===null||typeof h>"u"?!1:d.isFinite(h.x)&&d.isFinite(h.y)&&d.isFinite(h.z)},g.assert=function(h){},g.prototype.setZero=function(){return this.x=0,this.y=0,this.z=0,this},g.prototype.set=function(h,p,y){return this.x=h,this.y=p,this.z=y,this},g.prototype.add=function(h){return this.x+=h.x,this.y+=h.y,this.z+=h.z,this},g.prototype.sub=function(h){return this.x-=h.x,this.y-=h.y,this.z-=h.z,this},g.prototype.mul=function(h){return this.x*=h,this.y*=h,this.z*=h,this},g.areEqual=function(h,p){return h===p||typeof h=="object"&&h!==null&&typeof p=="object"&&p!==null&&h.x===p.x&&h.y===p.y&&h.z===p.z},g.dot=function(h,p){return h.x*p.x+h.y*p.y+h.z*p.z},g.cross=function(h,p){return new g(h.y*p.z-h.z*p.y,h.z*p.x-h.x*p.z,h.x*p.y-h.y*p.x)},g.add=function(h,p){return new g(h.x+p.x,h.y+p.y,h.z+p.z)},g.sub=function(h,p){return new g(h.x-p.x,h.y-p.y,h.z-p.z)},g.mul=function(h,p){return new g(p*h.x,p*h.y,p*h.z)},g.prototype.neg=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},g.neg=function(h){return new g(-h.x,-h.y,-h.z)},g}(),so=function(g){o(h,g);function h(p,y){var _=this;return _ instanceof h?(_=g.call(this)||this,_.m_type=h.TYPE,_.m_radius=m.polygonRadius,_.m_vertex1=p?l.clone(p):l.zero(),_.m_vertex2=y?l.clone(y):l.zero(),_.m_vertex0=l.zero(),_.m_vertex3=l.zero(),_.m_hasVertex0=!1,_.m_hasVertex3=!1,_):new h(p,y)}return h.prototype._serialize=function(){return{type:this.m_type,vertex1:this.m_vertex1,vertex2:this.m_vertex2,vertex0:this.m_vertex0,vertex3:this.m_vertex3,hasVertex0:this.m_hasVertex0,hasVertex3:this.m_hasVertex3}},h._deserialize=function(p){var y=new h(p.vertex1,p.vertex2);return y.m_hasVertex0&&y.setPrevVertex(p.vertex0),y.m_hasVertex3&&y.setNextVertex(p.vertex3),y},h.prototype.setNext=function(p){return this.setNextVertex(p)},h.prototype.setNextVertex=function(p){return p?(this.m_vertex3.setVec2(p),this.m_hasVertex3=!0):(this.m_vertex3.setZero(),this.m_hasVertex3=!1),this},h.prototype.getNextVertex=function(){return this.m_vertex3},h.prototype.setPrev=function(p){return this.setPrevVertex(p)},h.prototype.setPrevVertex=function(p){return p?(this.m_vertex0.setVec2(p),this.m_hasVertex0=!0):(this.m_vertex0.setZero(),this.m_hasVertex0=!1),this},h.prototype.getPrevVertex=function(){return this.m_vertex0},h.prototype._set=function(p,y){return this.m_vertex1.setVec2(p),this.m_vertex2.setVec2(y),this.m_hasVertex0=!1,this.m_hasVertex3=!1,this},h.prototype._clone=function(){var p=new h;return p.m_type=this.m_type,p.m_radius=this.m_radius,p.m_vertex1.setVec2(this.m_vertex1),p.m_vertex2.setVec2(this.m_vertex2),p.m_vertex0.setVec2(this.m_vertex0),p.m_vertex3.setVec2(this.m_vertex3),p.m_hasVertex0=this.m_hasVertex0,p.m_hasVertex3=this.m_hasVertex3,p},h.prototype.getChildCount=function(){return 1},h.prototype.testPoint=function(p,y){return!1},h.prototype.rayCast=function(p,y,_,$){var k=C.mulTVec2(_.q,l.sub(y.p1,_.p)),S=C.mulTVec2(_.q,l.sub(y.p2,_.p)),T=l.sub(S,k),L=this.m_vertex1,F=this.m_vertex2,O=l.sub(F,L),V=l.neo(O.y,-O.x);V.normalize();var R=l.dot(V,l.sub(L,k)),D=l.dot(V,T);if(D==0)return!1;var W=R/D;if(W<0||y.maxFraction<W)return!1;var H=l.add(k,l.mulNumVec2(W,T)),j=l.sub(F,L),ot=l.dot(j,j);if(ot==0)return!1;var rt=l.dot(l.sub(H,L),j)/ot;return rt<0||1<rt?!1:(p.fraction=W,R>0?p.normal=C.mulVec2(_.q,V).neg():p.normal=C.mulVec2(_.q,V),!0)},h.prototype.computeAABB=function(p,y,_){var $=I.mulVec2(y,this.m_vertex1),k=I.mulVec2(y,this.m_vertex2);p.combinePoints($,k),p.extend(this.m_radius)},h.prototype.computeMass=function(p,y){p.mass=0,p.center.setCombine(.5,this.m_vertex1,.5,this.m_vertex2),p.I=0},h.prototype.computeDistanceProxy=function(p){p.m_vertices.push(this.m_vertex1),p.m_vertices.push(this.m_vertex2),p.m_count=2,p.m_radius=this.m_radius},h.TYPE="edge",h}(M),Di=function(g){o(h,g);function h(p,y){var _=this;return _ instanceof h?(_=g.call(this)||this,_.m_type=h.TYPE,_.m_radius=m.polygonRadius,_.m_vertices=[],_.m_count=0,_.m_prevVertex=null,_.m_nextVertex=null,_.m_hasPrevVertex=!1,_.m_hasNextVertex=!1,_.m_isLoop=!!y,p&&p.length&&(y?_._createLoop(p):_._createChain(p)),_):new h(p,y)}return h.prototype._serialize=function(){var p={type:this.m_type,vertices:this.m_vertices,isLoop:this.m_isLoop,hasPrevVertex:this.m_hasPrevVertex,hasNextVertex:this.m_hasNextVertex,prevVertex:null,nextVertex:null};return this.m_prevVertex&&(p.prevVertex=this.m_prevVertex),this.m_nextVertex&&(p.nextVertex=this.m_nextVertex),p},h._deserialize=function(p,y,_){var $=[];if(p.vertices)for(var k=0;k<p.vertices.length;k++)$.push(_(l,p.vertices[k]));var S=new h($,p.isLoop);return p.prevVertex&&S.setPrevVertex(p.prevVertex),p.nextVertex&&S.setNextVertex(p.nextVertex),S},h.prototype._createLoop=function(p){for(var y=1;y<p.length;++y)p[y-1],p[y];this.m_vertices=[],this.m_count=p.length+1;for(var y=0;y<p.length;++y)this.m_vertices[y]=l.clone(p[y]);return this.m_vertices[p.length]=l.clone(p[0]),this.m_prevVertex=this.m_vertices[this.m_count-2],this.m_nextVertex=this.m_vertices[1],this.m_hasPrevVertex=!0,this.m_hasNextVertex=!0,this},h.prototype._createChain=function(p){for(var y=1;y<p.length;++y)p[y-1],p[y];this.m_count=p.length;for(var y=0;y<p.length;++y)this.m_vertices[y]=l.clone(p[y]);return this.m_hasPrevVertex=!1,this.m_hasNextVertex=!1,this.m_prevVertex=null,this.m_nextVertex=null,this},h.prototype._reset=function(){this.m_isLoop?this._createLoop(this.m_vertices):this._createChain(this.m_vertices)},h.prototype.setPrevVertex=function(p){this.m_prevVertex=p,this.m_hasPrevVertex=!0},h.prototype.getPrevVertex=function(){return this.m_prevVertex},h.prototype.setNextVertex=function(p){this.m_nextVertex=p,this.m_hasNextVertex=!0},h.prototype.getNextVertex=function(){return this.m_nextVertex},h.prototype._clone=function(){var p=new h;return p._createChain(this.m_vertices),p.m_type=this.m_type,p.m_radius=this.m_radius,p.m_prevVertex=this.m_prevVertex,p.m_nextVertex=this.m_nextVertex,p.m_hasPrevVertex=this.m_hasPrevVertex,p.m_hasNextVertex=this.m_hasNextVertex,p},h.prototype.getChildCount=function(){return this.m_count-1},h.prototype.getChildEdge=function(p,y){p.m_type=so.TYPE,p.m_radius=this.m_radius,p.m_vertex1=this.m_vertices[y],p.m_vertex2=this.m_vertices[y+1],y>0?(p.m_vertex0=this.m_vertices[y-1],p.m_hasVertex0=!0):(p.m_vertex0=this.m_prevVertex,p.m_hasVertex0=this.m_hasPrevVertex),y<this.m_count-2?(p.m_vertex3=this.m_vertices[y+2],p.m_hasVertex3=!0):(p.m_vertex3=this.m_nextVertex,p.m_hasVertex3=this.m_hasNextVertex)},h.prototype.getVertex=function(p){return p<this.m_count?this.m_vertices[p]:this.m_vertices[0]},h.prototype.isLoop=function(){return this.m_isLoop},h.prototype.testPoint=function(p,y){return!1},h.prototype.rayCast=function(p,y,_,$){var k=new so(this.getVertex($),this.getVertex($+1));return k.rayCast(p,y,_,0)},h.prototype.computeAABB=function(p,y,_){var $=I.mulVec2(y,this.getVertex(_)),k=I.mulVec2(y,this.getVertex(_+1));p.combinePoints($,k)},h.prototype.computeMass=function(p,y){p.mass=0,p.center=l.zero(),p.I=0},h.prototype.computeDistanceProxy=function(p,y){p.m_buffer[0]=this.getVertex(y),p.m_buffer[1]=this.getVertex(y+1),p.m_vertices=p.m_buffer,p.m_count=2,p.m_radius=this.m_radius},h.TYPE="chain",h}(M),oo=function(g){o(h,g);function h(p){var y=this;return y instanceof h?(y=g.call(this)||this,y.m_type=h.TYPE,y.m_radius=m.polygonRadius,y.m_centroid=l.zero(),y.m_vertices=[],y.m_normals=[],y.m_count=0,p&&p.length&&y._set(p),y):new h(p)}return h.prototype._serialize=function(){return{type:this.m_type,vertices:this.m_vertices}},h._deserialize=function(p,y,_){var $=[];if(p.vertices)for(var k=0;k<p.vertices.length;k++)$.push(_(l,p.vertices[k]));var S=new h($);return S},h.prototype.getVertex=function(p){return this.m_vertices[p]},h.prototype._clone=function(){var p=new h;p.m_type=this.m_type,p.m_radius=this.m_radius,p.m_count=this.m_count,p.m_centroid.setVec2(this.m_centroid);for(var y=0;y<this.m_count;y++)p.m_vertices.push(this.m_vertices[y].clone());for(var y=0;y<this.m_normals.length;y++)p.m_normals.push(this.m_normals[y].clone());return p},h.prototype.getChildCount=function(){return 1},h.prototype._reset=function(){this._set(this.m_vertices)},h.prototype._set=function(p){if(p.length<3){this._setAsBox(1,1);return}for(var y=d.min(p.length,m.maxPolygonVertices),_=[],$=0;$<y;++$){for(var k=p[$],S=!0,T=0;T<_.length;++T)if(l.distanceSquared(k,_[T])<.25*m.linearSlopSquared){S=!1;break}S&&_.push(k)}if(y=_.length,y<3){this._setAsBox(1,1);return}for(var L=0,F=_[0].x,$=1;$<y;++$){var O=_[$].x;(O>F||O===F&&_[$].y<_[L].y)&&(L=$,F=O)}for(var V=[],R=0,D=L;;){V[R]=D;for(var W=0,T=1;T<y;++T){if(W===D){W=T;continue}var H=l.sub(_[W],_[V[R]]),k=l.sub(_[T],_[V[R]]),j=l.crossVec2Vec2(H,k);j<0&&(W=T),j===0&&k.lengthSquared()>H.lengthSquared()&&(W=T)}if(++R,D=W,W===L)break}if(R<3){this._setAsBox(1,1);return}this.m_count=R,this.m_vertices=[];for(var $=0;$<R;++$)this.m_vertices[$]=_[V[$]];for(var $=0;$<R;++$){var ot=$,rt=$+1<R?$+1:0,ft=l.sub(this.m_vertices[rt],this.m_vertices[ot]);this.m_normals[$]=l.crossVec2Num(ft,1),this.m_normals[$].normalize()}this.m_centroid=J1(this.m_vertices,R)},h.prototype._setAsBox=function(p,y,_,$){if(this.m_vertices[0]=l.neo(p,-y),this.m_vertices[1]=l.neo(p,y),this.m_vertices[2]=l.neo(-p,y),this.m_vertices[3]=l.neo(-p,-y),this.m_normals[0]=l.neo(1,0),this.m_normals[1]=l.neo(0,1),this.m_normals[2]=l.neo(-1,0),this.m_normals[3]=l.neo(0,-1),this.m_count=4,l.isValid(_)){$=$||0,this.m_centroid.setVec2(_);var k=I.identity();k.p.setVec2(_),k.q.setAngle($);for(var S=0;S<this.m_count;++S)this.m_vertices[S]=I.mulVec2(k,this.m_vertices[S]),this.m_normals[S]=C.mulVec2(k.q,this.m_normals[S])}},h.prototype.testPoint=function(p,y){for(var _=C.mulTVec2(p.q,l.sub(y,p.p)),$=0;$<this.m_count;++$){var k=l.dot(this.m_normals[$],l.sub(_,this.m_vertices[$]));if(k>0)return!1}return!0},h.prototype.rayCast=function(p,y,_,$){for(var k=C.mulTVec2(_.q,l.sub(y.p1,_.p)),S=C.mulTVec2(_.q,l.sub(y.p2,_.p)),T=l.sub(S,k),L=0,F=y.maxFraction,O=-1,V=0;V<this.m_count;++V){var R=l.dot(this.m_normals[V],l.sub(this.m_vertices[V],k)),D=l.dot(this.m_normals[V],T);if(D==0){if(R<0)return!1}else D<0&&R<L*D?(L=R/D,O=V):D>0&&R<F*D&&(F=R/D);if(F<L)return!1}return O>=0?(p.fraction=L,p.normal=C.mulVec2(_.q,this.m_normals[O]),!0):!1},h.prototype.computeAABB=function(p,y,_){for(var $=1/0,k=1/0,S=-1/0,T=-1/0,L=0;L<this.m_count;++L){var F=I.mulVec2(y,this.m_vertices[L]);$=d.min($,F.x),S=d.max(S,F.x),k=d.min(k,F.y),T=d.max(T,F.y)}p.lowerBound.setNum($,k),p.upperBound.setNum(S,T),p.extend(this.m_radius)},h.prototype.computeMass=function(p,y){for(var _=l.zero(),$=0,k=0,S=l.zero(),T=0;T<this.m_count;++T)S.add(this.m_vertices[T]);S.mul(1/this.m_count);for(var L=1/3,T=0;T<this.m_count;++T){var F=l.sub(this.m_vertices[T],S),O=T+1<this.m_count?l.sub(this.m_vertices[T+1],S):l.sub(this.m_vertices[0],S),V=l.crossVec2Vec2(F,O),R=.5*V;$+=R,_.addCombine(R*L,F,R*L,O);var D=F.x,W=F.y,H=O.x,j=O.y,ot=D*D+H*D+H*H,rt=W*W+j*W+j*j;k+=.25*L*V*(ot+rt)}p.mass=y*$,_.mul(1/$),p.center.setCombine(1,_,1,S),p.I=y*k,p.I+=p.mass*(l.dot(p.center,p.center)-l.dot(_,_))},h.prototype.validate=function(){for(var p=0;p<this.m_count;++p)for(var y=p,_=p<this.m_count-1?y+1:0,$=this.m_vertices[y],k=l.sub(this.m_vertices[_],$),S=0;S<this.m_count;++S)if(!(S==y||S==_)){var T=l.sub(this.m_vertices[S],$),L=l.crossVec2Vec2(k,T);if(L<0)return!1}return!0},h.prototype.computeDistanceProxy=function(p){p.m_vertices=this.m_vertices,p.m_count=this.m_count,p.m_radius=this.m_radius},h.TYPE="polygon",h}(M);function J1(g,h){for(var p=l.zero(),y=0,_=l.zero(),$,k=1/3,$=0;$<h;++$){var S=_,T=g[$],L=$+1<h?g[$+1]:g[0],F=l.sub(T,S),O=l.sub(L,S),V=l.crossVec2Vec2(F,O),R=.5*V;y+=R,p.addMul(R*k,S),p.addMul(R*k,T),p.addMul(R*k,L)}return p.mul(1/y),p}var oh=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(k=g.call(this)||this,k._setAsBox(p,y,_,$),k):new h(p,y,_,$)}return h.TYPE="polygon",h}(oo),Co=function(g){o(h,g);function h(p,y){var _=this;return _ instanceof h?(_=g.call(this)||this,_.m_type=h.TYPE,_.m_p=l.zero(),_.m_radius=1,typeof p=="object"&&l.isValid(p)?(_.m_p.setVec2(p),typeof y=="number"&&(_.m_radius=y)):typeof p=="number"&&(_.m_radius=p),_):new h(p,y)}return h.prototype._serialize=function(){return{type:this.m_type,p:this.m_p,radius:this.m_radius}},h._deserialize=function(p){return new h(p.p,p.radius)},h.prototype.getRadius=function(){return this.m_radius},h.prototype.getCenter=function(){return this.m_p},h.prototype.getVertex=function(p){return this.m_p},h.prototype._clone=function(){var p=new h;return p.m_type=this.m_type,p.m_radius=this.m_radius,p.m_p=this.m_p.clone(),p},h.prototype.getChildCount=function(){return 1},h.prototype.testPoint=function(p,y){var _=l.add(p.p,C.mulVec2(p.q,this.m_p)),$=l.sub(y,_);return l.dot($,$)<=this.m_radius*this.m_radius},h.prototype.rayCast=function(p,y,_,$){var k=l.add(_.p,C.mulVec2(_.q,this.m_p)),S=l.sub(y.p1,k),T=l.dot(S,S)-this.m_radius*this.m_radius,L=l.sub(y.p2,y.p1),F=l.dot(S,L),O=l.dot(L,L),V=F*F-O*T;if(V<0||O<d.EPSILON)return!1;var R=-(F+d.sqrt(V));return 0<=R&&R<=y.maxFraction*O?(R/=O,p.fraction=R,p.normal=l.add(S,l.mulNumVec2(R,L)),p.normal.normalize(),!0):!1},h.prototype.computeAABB=function(p,y,_){var $=l.add(y.p,C.mulVec2(y.q,this.m_p));p.lowerBound.setNum($.x-this.m_radius,$.y-this.m_radius),p.upperBound.setNum($.x+this.m_radius,$.y+this.m_radius)},h.prototype.computeMass=function(p,y){p.mass=y*d.PI*this.m_radius*this.m_radius,p.center=this.m_p,p.I=p.mass*(.5*this.m_radius*this.m_radius+l.dot(this.m_p,this.m_p))},h.prototype.computeDistanceProxy=function(p){p.m_vertices.push(this.m_p),p.m_count=1,p.m_radius=this.m_radius},h.TYPE="circle",h}(M),Z1={frequencyHz:0,dampingRatio:0},rh=function(g){o(h,g);function h(p,y,_,$,k){var S=this;if(!(S instanceof h))return new h(p,y,_,$,k);if(_&&$&&"m_type"in $&&"x"in _&&"y"in _){var T=_;_=$,$=T}return p=i(p,Z1),S=g.call(this,p,y,_)||this,y=S.m_bodyA,_=S.m_bodyB,S.m_type=h.TYPE,S.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),S.m_localAnchorB=l.clone(k?_.getLocalPoint(k):p.localAnchorB||l.zero()),S.m_length=d.isFinite(p.length)?p.length:l.distance(y.getWorldPoint(S.m_localAnchorA),_.getWorldPoint(S.m_localAnchorB)),S.m_frequencyHz=p.frequencyHz,S.m_dampingRatio=p.dampingRatio,S.m_impulse=0,S.m_gamma=0,S.m_bias=0,S}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,frequencyHz:this.m_frequencyHz,dampingRatio:this.m_dampingRatio,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,length:this.m_length,impulse:this.m_impulse,gamma:this.m_gamma,bias:this.m_bias}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB),p.length>0?this.m_length=+p.length:p.length<0||(p.anchorA||p.anchorA||p.anchorA||p.anchorA)&&(this.m_length=l.distance(this.m_bodyA.getWorldPoint(this.m_localAnchorA),this.m_bodyB.getWorldPoint(this.m_localAnchorB)))},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.setLength=function(p){this.m_length=p},h.prototype.getLength=function(){return this.m_length},h.prototype.setFrequency=function(p){this.m_frequencyHz=p},h.prototype.getFrequency=function(){return this.m_frequencyHz},h.prototype.setDampingRatio=function(p){this.m_dampingRatio=p},h.prototype.getDampingRatio=function(){return this.m_dampingRatio},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(this.m_impulse,this.m_u).mul(p)},h.prototype.getReactionTorque=function(p){return 0},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyA.c_velocity.v,k=this.m_bodyA.c_velocity.w,S=this.m_bodyB.c_position.c,T=this.m_bodyB.c_position.a,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w,O=C.neo(_),V=C.neo(T);this.m_rA=C.mulVec2(O,l.sub(this.m_localAnchorA,this.m_localCenterA)),this.m_rB=C.mulVec2(V,l.sub(this.m_localAnchorB,this.m_localCenterB)),this.m_u=l.sub(l.add(S,this.m_rB),l.add(y,this.m_rA));var R=this.m_u.length();R>m.linearSlop?this.m_u.mul(1/R):this.m_u.setNum(0,0);var D=l.crossVec2Vec2(this.m_rA,this.m_u),W=l.crossVec2Vec2(this.m_rB,this.m_u),H=this.m_invMassA+this.m_invIA*D*D+this.m_invMassB+this.m_invIB*W*W;if(this.m_mass=H!=0?1/H:0,this.m_frequencyHz>0){var j=R-this.m_length,ot=2*d.PI*this.m_frequencyHz,rt=2*this.m_mass*this.m_dampingRatio*ot,ft=this.m_mass*ot*ot,mt=p.dt;this.m_gamma=mt*(rt+mt*ft),this.m_gamma=this.m_gamma!=0?1/this.m_gamma:0,this.m_bias=j*mt*ft*this.m_gamma,H+=this.m_gamma,this.m_mass=H!=0?1/H:0}else this.m_gamma=0,this.m_bias=0;if(p.warmStarting){this.m_impulse*=p.dtRatio;var xt=l.mulNumVec2(this.m_impulse,this.m_u);$.subMul(this.m_invMassA,xt),k-=this.m_invIA*l.crossVec2Vec2(this.m_rA,xt),L.addMul(this.m_invMassB,xt),F+=this.m_invIB*l.crossVec2Vec2(this.m_rB,xt)}else this.m_impulse=0;this.m_bodyA.c_velocity.v.setVec2($),this.m_bodyA.c_velocity.w=k,this.m_bodyB.c_velocity.v.setVec2(L),this.m_bodyB.c_velocity.w=F},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=l.add(y,l.crossNumVec2(_,this.m_rA)),T=l.add($,l.crossNumVec2(k,this.m_rB)),L=l.dot(this.m_u,T)-l.dot(this.m_u,S),F=-this.m_mass*(L+this.m_bias+this.m_gamma*this.m_impulse);this.m_impulse+=F;var O=l.mulNumVec2(F,this.m_u);y.subMul(this.m_invMassA,O),_-=this.m_invIA*l.crossVec2Vec2(this.m_rA,O),$.addMul(this.m_invMassB,O),k+=this.m_invIB*l.crossVec2Vec2(this.m_rB,O),this.m_bodyA.c_velocity.v.setVec2(y),this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v.setVec2($),this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){if(this.m_frequencyHz>0)return!0;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=C.mulSub(S,this.m_localAnchorA,this.m_localCenterA),F=C.mulSub(T,this.m_localAnchorB,this.m_localCenterB),O=l.sub(l.add($,F),l.add(y,L)),V=O.normalize(),R=V-this.m_length;R=d.clamp(R,-m.maxLinearCorrection,m.maxLinearCorrection);var D=-this.m_mass*R,W=l.mulNumVec2(D,O);return y.subMul(this.m_invMassA,W),_-=this.m_invIA*l.crossVec2Vec2(L,W),$.addMul(this.m_invMassB,W),k+=this.m_invIB*l.crossVec2Vec2(F,W),this.m_bodyA.c_position.c.setVec2(y),this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c.setVec2($),this.m_bodyB.c_position.a=k,d.abs(R)<m.linearSlop},h.TYPE="distance-joint",h}(Me),Q1={maxForce:0,maxTorque:0},ih=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(p=i(p,Q1),k=g.call(this,p,y,_)||this,y=k.m_bodyA,_=k.m_bodyB,k.m_type=h.TYPE,k.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),k.m_localAnchorB=l.clone($?_.getLocalPoint($):p.localAnchorB||l.zero()),k.m_linearImpulse=l.zero(),k.m_angularImpulse=0,k.m_maxForce=p.maxForce,k.m_maxTorque=p.maxTorque,k):new h(p,y,_,$)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,maxForce:this.m_maxForce,maxTorque:this.m_maxTorque,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB)},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.setMaxForce=function(p){this.m_maxForce=p},h.prototype.getMaxForce=function(){return this.m_maxForce},h.prototype.setMaxTorque=function(p){this.m_maxTorque=p},h.prototype.getMaxTorque=function(){return this.m_maxTorque},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(p,this.m_linearImpulse)},h.prototype.getReactionTorque=function(p){return p*this.m_angularImpulse},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.a,_=this.m_bodyA.c_velocity.v,$=this.m_bodyA.c_velocity.w,k=this.m_bodyB.c_position.a,S=this.m_bodyB.c_velocity.v,T=this.m_bodyB.c_velocity.w,L=C.neo(y),F=C.neo(k);this.m_rA=C.mulVec2(L,l.sub(this.m_localAnchorA,this.m_localCenterA)),this.m_rB=C.mulVec2(F,l.sub(this.m_localAnchorB,this.m_localCenterB));var O=this.m_invMassA,V=this.m_invMassB,R=this.m_invIA,D=this.m_invIB,W=new lt;if(W.ex.x=O+V+R*this.m_rA.y*this.m_rA.y+D*this.m_rB.y*this.m_rB.y,W.ex.y=-R*this.m_rA.x*this.m_rA.y-D*this.m_rB.x*this.m_rB.y,W.ey.x=W.ex.y,W.ey.y=O+V+R*this.m_rA.x*this.m_rA.x+D*this.m_rB.x*this.m_rB.x,this.m_linearMass=W.getInverse(),this.m_angularMass=R+D,this.m_angularMass>0&&(this.m_angularMass=1/this.m_angularMass),p.warmStarting){this.m_linearImpulse.mul(p.dtRatio),this.m_angularImpulse*=p.dtRatio;var H=l.neo(this.m_linearImpulse.x,this.m_linearImpulse.y);_.subMul(O,H),$-=R*(l.crossVec2Vec2(this.m_rA,H)+this.m_angularImpulse),S.addMul(V,H),T+=D*(l.crossVec2Vec2(this.m_rB,H)+this.m_angularImpulse)}else this.m_linearImpulse.setZero(),this.m_angularImpulse=0;this.m_bodyA.c_velocity.v=_,this.m_bodyA.c_velocity.w=$,this.m_bodyB.c_velocity.v=S,this.m_bodyB.c_velocity.w=T},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_invMassA,T=this.m_invMassB,L=this.m_invIA,F=this.m_invIB,O=p.dt;{var V=k-_,R=-this.m_angularMass*V,D=this.m_angularImpulse,W=O*this.m_maxTorque;this.m_angularImpulse=d.clamp(this.m_angularImpulse+R,-W,W),R=this.m_angularImpulse-D,_-=L*R,k+=F*R}{var V=l.sub(l.add($,l.crossNumVec2(k,this.m_rB)),l.add(y,l.crossNumVec2(_,this.m_rA))),R=l.neg(lt.mulVec2(this.m_linearMass,V)),D=this.m_linearImpulse;this.m_linearImpulse.add(R);var W=O*this.m_maxForce;this.m_linearImpulse.lengthSquared()>W*W&&(this.m_linearImpulse.normalize(),this.m_linearImpulse.mul(W)),R=l.sub(this.m_linearImpulse,D),y.subMul(S,R),_-=L*l.crossVec2Vec2(this.m_rA,R),$.addMul(T,R),k+=F*l.crossVec2Vec2(this.m_rB,R)}this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){return!0},h.TYPE="friction-joint",h}(Me),ro=function(){function g(h,p,y){typeof h=="object"&&h!==null?(this.ex=Zt.clone(h),this.ey=Zt.clone(p),this.ez=Zt.clone(y)):(this.ex=Zt.zero(),this.ey=Zt.zero(),this.ez=Zt.zero())}return g.prototype.toString=function(){return JSON.stringify(this)},g.isValid=function(h){return h===null||typeof h>"u"?!1:Zt.isValid(h.ex)&&Zt.isValid(h.ey)&&Zt.isValid(h.ez)},g.assert=function(h){},g.prototype.setZero=function(){return this.ex.setZero(),this.ey.setZero(),this.ez.setZero(),this},g.prototype.solve33=function(h){var p=Zt.dot(this.ex,Zt.cross(this.ey,this.ez));p!==0&&(p=1/p);var y=new Zt;return y.x=p*Zt.dot(h,Zt.cross(this.ey,this.ez)),y.y=p*Zt.dot(this.ex,Zt.cross(h,this.ez)),y.z=p*Zt.dot(this.ex,Zt.cross(this.ey,h)),y},g.prototype.solve22=function(h){var p=this.ex.x,y=this.ey.x,_=this.ex.y,$=this.ey.y,k=p*$-y*_;k!==0&&(k=1/k);var S=l.zero();return S.x=k*($*h.x-y*h.y),S.y=k*(p*h.y-_*h.x),S},g.prototype.getInverse22=function(h){var p=this.ex.x,y=this.ey.x,_=this.ex.y,$=this.ey.y,k=p*$-y*_;k!==0&&(k=1/k),h.ex.x=k*$,h.ey.x=-k*y,h.ex.z=0,h.ex.y=-k*_,h.ey.y=k*p,h.ey.z=0,h.ez.x=0,h.ez.y=0,h.ez.z=0},g.prototype.getSymInverse33=function(h){var p=Zt.dot(this.ex,Zt.cross(this.ey,this.ez));p!==0&&(p=1/p);var y=this.ex.x,_=this.ey.x,$=this.ez.x,k=this.ey.y,S=this.ez.y,T=this.ez.z;h.ex.x=p*(k*T-S*S),h.ex.y=p*($*S-_*T),h.ex.z=p*(_*S-$*k),h.ey.x=h.ex.y,h.ey.y=p*(y*T-$*$),h.ey.z=p*($*_-y*S),h.ez.x=h.ex.z,h.ez.y=h.ey.z,h.ez.z=p*(y*k-_*_)},g.mul=function(h,p){if(p&&"z"in p&&"y"in p&&"x"in p){var y=h.ex.x*p.x+h.ey.x*p.y+h.ez.x*p.z,_=h.ex.y*p.x+h.ey.y*p.y+h.ez.y*p.z,$=h.ex.z*p.x+h.ey.z*p.y+h.ez.z*p.z;return new Zt(y,_,$)}else if(p&&"y"in p&&"x"in p){var y=h.ex.x*p.x+h.ey.x*p.y,_=h.ex.y*p.x+h.ey.y*p.y;return l.neo(y,_)}},g.mulVec3=function(h,p){var y=h.ex.x*p.x+h.ey.x*p.y+h.ez.x*p.z,_=h.ex.y*p.x+h.ey.y*p.y+h.ez.y*p.z,$=h.ex.z*p.x+h.ey.z*p.y+h.ez.z*p.z;return new Zt(y,_,$)},g.mulVec2=function(h,p){var y=h.ex.x*p.x+h.ey.x*p.y,_=h.ex.y*p.x+h.ey.y*p.y;return l.neo(y,_)},g.add=function(h,p){return new g(Zt.add(h.ex,p.ex),Zt.add(h.ey,p.ey),Zt.add(h.ez,p.ez))},g}(),Bi=0,Ic=1,Ac=2,kc=3,tw={lowerAngle:0,upperAngle:0,maxMotorTorque:0,motorSpeed:0,enableLimit:!1,enableMotor:!1},io=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(p=i(p,tw),k=g.call(this,p,y,_)||this,k.m_mass=new ro,k.m_limitState=Bi,y=k.m_bodyA,_=k.m_bodyB,k.m_type=h.TYPE,k.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),k.m_localAnchorB=l.clone($?_.getLocalPoint($):p.localAnchorB||l.zero()),k.m_referenceAngle=d.isFinite(p.referenceAngle)?p.referenceAngle:_.getAngle()-y.getAngle(),k.m_impulse=new Zt,k.m_motorImpulse=0,k.m_lowerAngle=p.lowerAngle,k.m_upperAngle=p.upperAngle,k.m_maxMotorTorque=p.maxMotorTorque,k.m_motorSpeed=p.motorSpeed,k.m_enableLimit=p.enableLimit,k.m_enableMotor=p.enableMotor,k):new h(p,y,_,$)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,lowerAngle:this.m_lowerAngle,upperAngle:this.m_upperAngle,maxMotorTorque:this.m_maxMotorTorque,motorSpeed:this.m_motorSpeed,enableLimit:this.m_enableLimit,enableMotor:this.m_enableMotor,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,referenceAngle:this.m_referenceAngle}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB)},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.getReferenceAngle=function(){return this.m_referenceAngle},h.prototype.getJointAngle=function(){var p=this.m_bodyA,y=this.m_bodyB;return y.m_sweep.a-p.m_sweep.a-this.m_referenceAngle},h.prototype.getJointSpeed=function(){var p=this.m_bodyA,y=this.m_bodyB;return y.m_angularVelocity-p.m_angularVelocity},h.prototype.isMotorEnabled=function(){return this.m_enableMotor},h.prototype.enableMotor=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_enableMotor=p},h.prototype.getMotorTorque=function(p){return p*this.m_motorImpulse},h.prototype.setMotorSpeed=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_motorSpeed=p},h.prototype.getMotorSpeed=function(){return this.m_motorSpeed},h.prototype.setMaxMotorTorque=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_maxMotorTorque=p},h.prototype.getMaxMotorTorque=function(){return this.m_maxMotorTorque},h.prototype.isLimitEnabled=function(){return this.m_enableLimit},h.prototype.enableLimit=function(p){p!=this.m_enableLimit&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_enableLimit=p,this.m_impulse.z=0)},h.prototype.getLowerLimit=function(){return this.m_lowerAngle},h.prototype.getUpperLimit=function(){return this.m_upperAngle},h.prototype.setLimits=function(p,y){(p!=this.m_lowerAngle||y!=this.m_upperAngle)&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_impulse.z=0,this.m_lowerAngle=p,this.m_upperAngle=y)},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.neo(this.m_impulse.x,this.m_impulse.y).mul(p)},h.prototype.getReactionTorque=function(p){return p*this.m_impulse.z},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.a,_=this.m_bodyA.c_velocity.v,$=this.m_bodyA.c_velocity.w,k=this.m_bodyB.c_position.a,S=this.m_bodyB.c_velocity.v,T=this.m_bodyB.c_velocity.w,L=C.neo(y),F=C.neo(k);this.m_rA=C.mulVec2(L,l.sub(this.m_localAnchorA,this.m_localCenterA)),this.m_rB=C.mulVec2(F,l.sub(this.m_localAnchorB,this.m_localCenterB));var O=this.m_invMassA,V=this.m_invMassB,R=this.m_invIA,D=this.m_invIB,W=R+D===0;if(this.m_mass.ex.x=O+V+this.m_rA.y*this.m_rA.y*R+this.m_rB.y*this.m_rB.y*D,this.m_mass.ey.x=-this.m_rA.y*this.m_rA.x*R-this.m_rB.y*this.m_rB.x*D,this.m_mass.ez.x=-this.m_rA.y*R-this.m_rB.y*D,this.m_mass.ex.y=this.m_mass.ey.x,this.m_mass.ey.y=O+V+this.m_rA.x*this.m_rA.x*R+this.m_rB.x*this.m_rB.x*D,this.m_mass.ez.y=this.m_rA.x*R+this.m_rB.x*D,this.m_mass.ex.z=this.m_mass.ez.x,this.m_mass.ey.z=this.m_mass.ez.y,this.m_mass.ez.z=R+D,this.m_motorMass=R+D,this.m_motorMass>0&&(this.m_motorMass=1/this.m_motorMass),(this.m_enableMotor==!1||W)&&(this.m_motorImpulse=0),this.m_enableLimit&&W==!1){var H=k-y-this.m_referenceAngle;d.abs(this.m_upperAngle-this.m_lowerAngle)<2*m.angularSlop?this.m_limitState=kc:H<=this.m_lowerAngle?(this.m_limitState!=Ic&&(this.m_impulse.z=0),this.m_limitState=Ic):H>=this.m_upperAngle?(this.m_limitState!=Ac&&(this.m_impulse.z=0),this.m_limitState=Ac):(this.m_limitState=Bi,this.m_impulse.z=0)}else this.m_limitState=Bi;if(p.warmStarting){this.m_impulse.mul(p.dtRatio),this.m_motorImpulse*=p.dtRatio;var j=l.neo(this.m_impulse.x,this.m_impulse.y);_.subMul(O,j),$-=R*(l.crossVec2Vec2(this.m_rA,j)+this.m_motorImpulse+this.m_impulse.z),S.addMul(V,j),T+=D*(l.crossVec2Vec2(this.m_rB,j)+this.m_motorImpulse+this.m_impulse.z)}else this.m_impulse.setZero(),this.m_motorImpulse=0;this.m_bodyA.c_velocity.v=_,this.m_bodyA.c_velocity.w=$,this.m_bodyB.c_velocity.v=S,this.m_bodyB.c_velocity.w=T},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_invMassA,T=this.m_invMassB,L=this.m_invIA,F=this.m_invIB,O=L+F===0;if(this.m_enableMotor&&this.m_limitState!=kc&&O==!1){var V=k-_-this.m_motorSpeed,R=-this.m_motorMass*V,D=this.m_motorImpulse,W=p.dt*this.m_maxMotorTorque;this.m_motorImpulse=d.clamp(this.m_motorImpulse+R,-W,W),R=this.m_motorImpulse-D,_-=L*R,k+=F*R}if(this.m_enableLimit&&this.m_limitState!=Bi&&O==!1){var H=l.zero();H.addCombine(1,$,1,l.crossNumVec2(k,this.m_rB)),H.subCombine(1,y,1,l.crossNumVec2(_,this.m_rA));var j=k-_,V=new Zt(H.x,H.y,j),R=Zt.neg(this.m_mass.solve33(V));if(this.m_limitState==kc)this.m_impulse.add(R);else if(this.m_limitState==Ic){var ot=this.m_impulse.z+R.z;if(ot<0){var rt=l.combine(-1,H,this.m_impulse.z,l.neo(this.m_mass.ez.x,this.m_mass.ez.y)),ft=this.m_mass.solve22(rt);R.x=ft.x,R.y=ft.y,R.z=-this.m_impulse.z,this.m_impulse.x+=ft.x,this.m_impulse.y+=ft.y,this.m_impulse.z=0}else this.m_impulse.add(R)}else if(this.m_limitState==Ac){var ot=this.m_impulse.z+R.z;if(ot>0){var rt=l.combine(-1,H,this.m_impulse.z,l.neo(this.m_mass.ez.x,this.m_mass.ez.y)),ft=this.m_mass.solve22(rt);R.x=ft.x,R.y=ft.y,R.z=-this.m_impulse.z,this.m_impulse.x+=ft.x,this.m_impulse.y+=ft.y,this.m_impulse.z=0}else this.m_impulse.add(R)}var mt=l.neo(R.x,R.y);y.subMul(S,mt),_-=L*(l.crossVec2Vec2(this.m_rA,mt)+R.z),$.addMul(T,mt),k+=F*(l.crossVec2Vec2(this.m_rB,mt)+R.z)}else{var V=l.zero();V.addCombine(1,$,1,l.crossNumVec2(k,this.m_rB)),V.subCombine(1,y,1,l.crossNumVec2(_,this.m_rA));var R=this.m_mass.solve22(l.neg(V));this.m_impulse.x+=R.x,this.m_impulse.y+=R.y,y.subMul(S,R),_-=L*l.crossVec2Vec2(this.m_rA,R),$.addMul(T,R),k+=F*l.crossVec2Vec2(this.m_rB,R)}this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=0,F=0,O=this.m_invIA+this.m_invIB==0;if(this.m_enableLimit&&this.m_limitState!=Bi&&O==!1){var V=k-_-this.m_referenceAngle,R=0;if(this.m_limitState==kc){var D=d.clamp(V-this.m_lowerAngle,-m.maxAngularCorrection,m.maxAngularCorrection);R=-this.m_motorMass*D,L=d.abs(D)}else if(this.m_limitState==Ic){var D=V-this.m_lowerAngle;L=-D,D=d.clamp(D+m.angularSlop,-m.maxAngularCorrection,0),R=-this.m_motorMass*D}else if(this.m_limitState==Ac){var D=V-this.m_upperAngle;L=D,D=d.clamp(D-m.angularSlop,0,m.maxAngularCorrection),R=-this.m_motorMass*D}_-=this.m_invIA*R,k+=this.m_invIB*R}{S.setAngle(_),T.setAngle(k);var W=C.mulVec2(S,l.sub(this.m_localAnchorA,this.m_localCenterA)),H=C.mulVec2(T,l.sub(this.m_localAnchorB,this.m_localCenterB)),D=l.zero();D.addCombine(1,$,1,H),D.subCombine(1,y,1,W),F=D.length();var j=this.m_invMassA,ot=this.m_invMassB,rt=this.m_invIA,ft=this.m_invIB,mt=new lt;mt.ex.x=j+ot+rt*W.y*W.y+ft*H.y*H.y,mt.ex.y=-rt*W.x*W.y-ft*H.x*H.y,mt.ey.x=mt.ex.y,mt.ey.y=j+ot+rt*W.x*W.x+ft*H.x*H.x;var xt=l.neg(mt.solve(D));y.subMul(j,xt),_-=rt*l.crossVec2Vec2(W,xt),$.addMul(ot,xt),k+=ft*l.crossVec2Vec2(H,xt)}return this.m_bodyA.c_position.c.setVec2(y),this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c.setVec2($),this.m_bodyB.c_position.a=k,F<=m.linearSlop&&L<=m.angularSlop},h.TYPE="revolute-joint",h}(Me),$c=0,ah=1,ch=2,Am=3,ew={enableLimit:!1,lowerTranslation:0,upperTranslation:0,enableMotor:!1,maxMotorForce:0,motorSpeed:0},lh=function(g){o(h,g);function h(p,y,_,$,k){var S=this;return S instanceof h?(p=i(p,ew),S=g.call(this,p,y,_)||this,y=S.m_bodyA,_=S.m_bodyB,S.m_type=h.TYPE,S.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),S.m_localAnchorB=l.clone($?_.getLocalPoint($):p.localAnchorB||l.zero()),S.m_localXAxisA=l.clone(k?y.getLocalVector(k):p.localAxisA||l.neo(1,0)),S.m_localXAxisA.normalize(),S.m_localYAxisA=l.crossNumVec2(1,S.m_localXAxisA),S.m_referenceAngle=d.isFinite(p.referenceAngle)?p.referenceAngle:_.getAngle()-y.getAngle(),S.m_impulse=new Zt,S.m_motorMass=0,S.m_motorImpulse=0,S.m_lowerTranslation=p.lowerTranslation,S.m_upperTranslation=p.upperTranslation,S.m_maxMotorForce=p.maxMotorForce,S.m_motorSpeed=p.motorSpeed,S.m_enableLimit=p.enableLimit,S.m_enableMotor=p.enableMotor,S.m_limitState=$c,S.m_axis=l.zero(),S.m_perp=l.zero(),S.m_K=new ro,S):new h(p,y,_,$,k)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,lowerTranslation:this.m_lowerTranslation,upperTranslation:this.m_upperTranslation,maxMotorForce:this.m_maxMotorForce,motorSpeed:this.m_motorSpeed,enableLimit:this.m_enableLimit,enableMotor:this.m_enableMotor,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,localAxisA:this.m_localXAxisA,referenceAngle:this.m_referenceAngle}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y),p.localAxisA=l.clone(p.localAxisA);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB),p.localAxisA&&(this.m_localXAxisA.setVec2(p.localAxisA),this.m_localYAxisA.setVec2(l.crossNumVec2(1,p.localAxisA)))},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.getLocalAxisA=function(){return this.m_localXAxisA},h.prototype.getReferenceAngle=function(){return this.m_referenceAngle},h.prototype.getJointTranslation=function(){var p=this.m_bodyA.getWorldPoint(this.m_localAnchorA),y=this.m_bodyB.getWorldPoint(this.m_localAnchorB),_=l.sub(y,p),$=this.m_bodyA.getWorldVector(this.m_localXAxisA),k=l.dot(_,$);return k},h.prototype.getJointSpeed=function(){var p=this.m_bodyA,y=this.m_bodyB,_=C.mulVec2(p.m_xf.q,l.sub(this.m_localAnchorA,p.m_sweep.localCenter)),$=C.mulVec2(y.m_xf.q,l.sub(this.m_localAnchorB,y.m_sweep.localCenter)),k=l.add(p.m_sweep.c,_),S=l.add(y.m_sweep.c,$),T=l.sub(S,k),L=C.mulVec2(p.m_xf.q,this.m_localXAxisA),F=p.m_linearVelocity,O=y.m_linearVelocity,V=p.m_angularVelocity,R=y.m_angularVelocity,D=l.dot(T,l.crossNumVec2(V,L))+l.dot(L,l.sub(l.addCrossNumVec2(O,R,$),l.addCrossNumVec2(F,V,_)));return D},h.prototype.isLimitEnabled=function(){return this.m_enableLimit},h.prototype.enableLimit=function(p){p!=this.m_enableLimit&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_enableLimit=p,this.m_impulse.z=0)},h.prototype.getLowerLimit=function(){return this.m_lowerTranslation},h.prototype.getUpperLimit=function(){return this.m_upperTranslation},h.prototype.setLimits=function(p,y){(p!=this.m_lowerTranslation||y!=this.m_upperTranslation)&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_lowerTranslation=p,this.m_upperTranslation=y,this.m_impulse.z=0)},h.prototype.isMotorEnabled=function(){return this.m_enableMotor},h.prototype.enableMotor=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_enableMotor=p},h.prototype.setMotorSpeed=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_motorSpeed=p},h.prototype.setMaxMotorForce=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_maxMotorForce=p},h.prototype.getMaxMotorForce=function(){return this.m_maxMotorForce},h.prototype.getMotorSpeed=function(){return this.m_motorSpeed},h.prototype.getMotorForce=function(p){return p*this.m_motorImpulse},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.combine(this.m_impulse.x,this.m_perp,this.m_motorImpulse+this.m_impulse.z,this.m_axis).mul(p)},h.prototype.getReactionTorque=function(p){return p*this.m_impulse.y},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyA.c_velocity.v,k=this.m_bodyA.c_velocity.w,S=this.m_bodyB.c_position.c,T=this.m_bodyB.c_position.a,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w,O=C.neo(_),V=C.neo(T),R=C.mulVec2(O,l.sub(this.m_localAnchorA,this.m_localCenterA)),D=C.mulVec2(V,l.sub(this.m_localAnchorB,this.m_localCenterB)),W=l.zero();W.addCombine(1,S,1,D),W.subCombine(1,y,1,R);var H=this.m_invMassA,j=this.m_invMassB,ot=this.m_invIA,rt=this.m_invIB;this.m_axis=C.mulVec2(O,this.m_localXAxisA),this.m_a1=l.crossVec2Vec2(l.add(W,R),this.m_axis),this.m_a2=l.crossVec2Vec2(D,this.m_axis),this.m_motorMass=H+j+ot*this.m_a1*this.m_a1+rt*this.m_a2*this.m_a2,this.m_motorMass>0&&(this.m_motorMass=1/this.m_motorMass);{this.m_perp=C.mulVec2(O,this.m_localYAxisA),this.m_s1=l.crossVec2Vec2(l.add(W,R),this.m_perp),this.m_s2=l.crossVec2Vec2(D,this.m_perp),l.crossVec2Vec2(R,this.m_perp);var ft=H+j+ot*this.m_s1*this.m_s1+rt*this.m_s2*this.m_s2,mt=ot*this.m_s1+rt*this.m_s2,xt=ot*this.m_s1*this.m_a1+rt*this.m_s2*this.m_a2,_t=ot+rt;_t==0&&(_t=1);var It=ot*this.m_a1+rt*this.m_a2,Nt=H+j+ot*this.m_a1*this.m_a1+rt*this.m_a2*this.m_a2;this.m_K.ex.set(ft,mt,xt),this.m_K.ey.set(mt,_t,It),this.m_K.ez.set(xt,It,Nt)}if(this.m_enableLimit){var Pt=l.dot(this.m_axis,W);d.abs(this.m_upperTranslation-this.m_lowerTranslation)<2*m.linearSlop?this.m_limitState=Am:Pt<=this.m_lowerTranslation?this.m_limitState!=ah&&(this.m_limitState=ah,this.m_impulse.z=0):Pt>=this.m_upperTranslation?this.m_limitState!=ch&&(this.m_limitState=ch,this.m_impulse.z=0):(this.m_limitState=$c,this.m_impulse.z=0)}else this.m_limitState=$c,this.m_impulse.z=0;if(this.m_enableMotor==!1&&(this.m_motorImpulse=0),p.warmStarting){this.m_impulse.mul(p.dtRatio),this.m_motorImpulse*=p.dtRatio;var kt=l.combine(this.m_impulse.x,this.m_perp,this.m_motorImpulse+this.m_impulse.z,this.m_axis),wt=this.m_impulse.x*this.m_s1+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a1,Xt=this.m_impulse.x*this.m_s2+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a2;$.subMul(H,kt),k-=ot*wt,L.addMul(j,kt),F+=rt*Xt}else this.m_impulse.setZero(),this.m_motorImpulse=0;this.m_bodyA.c_velocity.v.setVec2($),this.m_bodyA.c_velocity.w=k,this.m_bodyB.c_velocity.v.setVec2(L),this.m_bodyB.c_velocity.w=F},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_invMassA,T=this.m_invMassB,L=this.m_invIA,F=this.m_invIB;if(this.m_enableMotor&&this.m_limitState!=Am){var O=l.dot(this.m_axis,l.sub($,y))+this.m_a2*k-this.m_a1*_,V=this.m_motorMass*(this.m_motorSpeed-O),R=this.m_motorImpulse,D=p.dt*this.m_maxMotorForce;this.m_motorImpulse=d.clamp(this.m_motorImpulse+V,-D,D),V=this.m_motorImpulse-R;var W=l.mulNumVec2(V,this.m_axis),H=V*this.m_a1,j=V*this.m_a2;y.subMul(S,W),_-=L*H,$.addMul(T,W),k+=F*j}var ot=l.zero();if(ot.x+=l.dot(this.m_perp,$)+this.m_s2*k,ot.x-=l.dot(this.m_perp,y)+this.m_s1*_,ot.y=k-_,this.m_enableLimit&&this.m_limitState!=$c){var rt=0;rt+=l.dot(this.m_axis,$)+this.m_a2*k,rt-=l.dot(this.m_axis,y)+this.m_a1*_;var O=new Zt(ot.x,ot.y,rt),ft=Zt.clone(this.m_impulse),mt=this.m_K.solve33(Zt.neg(O));this.m_impulse.add(mt),this.m_limitState==ah?this.m_impulse.z=d.max(this.m_impulse.z,0):this.m_limitState==ch&&(this.m_impulse.z=d.min(this.m_impulse.z,0));var xt=l.combine(-1,ot,-(this.m_impulse.z-ft.z),l.neo(this.m_K.ez.x,this.m_K.ez.y)),_t=l.add(this.m_K.solve22(xt),l.neo(ft.x,ft.y));this.m_impulse.x=_t.x,this.m_impulse.y=_t.y,mt=Zt.sub(this.m_impulse,ft);var W=l.combine(mt.x,this.m_perp,mt.z,this.m_axis),H=mt.x*this.m_s1+mt.y+mt.z*this.m_a1,j=mt.x*this.m_s2+mt.y+mt.z*this.m_a2;y.subMul(S,W),_-=L*H,$.addMul(T,W),k+=F*j}else{var mt=this.m_K.solve22(l.neg(ot));this.m_impulse.x+=mt.x,this.m_impulse.y+=mt.y;var W=l.mulNumVec2(mt.x,this.m_perp),H=mt.x*this.m_s1+mt.y,j=mt.x*this.m_s2+mt.y;y.subMul(S,W),_-=L*H,$.addMul(T,W),k+=F*j}this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=this.m_invMassA,F=this.m_invMassB,O=this.m_invIA,V=this.m_invIB,R=C.mulVec2(S,l.sub(this.m_localAnchorA,this.m_localCenterA)),D=C.mulVec2(T,l.sub(this.m_localAnchorB,this.m_localCenterB)),W=l.sub(l.add($,D),l.add(y,R)),H=C.mulVec2(S,this.m_localXAxisA),j=l.crossVec2Vec2(l.add(W,R),H),ot=l.crossVec2Vec2(D,H),rt=C.mulVec2(S,this.m_localYAxisA),ft=l.crossVec2Vec2(l.add(W,R),rt),mt=l.crossVec2Vec2(D,rt),xt=new Zt,_t=l.zero();_t.x=l.dot(rt,W),_t.y=k-_-this.m_referenceAngle;var It=d.abs(_t.x),Nt=d.abs(_t.y),Pt=m.linearSlop,kt=m.maxLinearCorrection,wt=!1,Xt=0;if(this.m_enableLimit){var jt=l.dot(H,W);d.abs(this.m_upperTranslation-this.m_lowerTranslation)<2*Pt?(Xt=d.clamp(jt,-kt,kt),It=d.max(It,d.abs(jt)),wt=!0):jt<=this.m_lowerTranslation?(Xt=d.clamp(jt-this.m_lowerTranslation+Pt,-kt,0),It=d.max(It,this.m_lowerTranslation-jt),wt=!0):jt>=this.m_upperTranslation&&(Xt=d.clamp(jt-this.m_upperTranslation-Pt,0,kt),It=d.max(It,jt-this.m_upperTranslation),wt=!0)}if(wt){var Qt=L+F+O*ft*ft+V*mt*mt,be=O*ft+V*mt,$e=O*ft*j+V*mt*ot,xe=O+V;xe==0&&(xe=1);var qt=O*j+V*ot,Kt=L+F+O*j*j+V*ot*ot,Jt=new ro;Jt.ex.set(Qt,be,$e),Jt.ey.set(be,xe,qt),Jt.ez.set($e,qt,Kt);var Wt=new Zt;Wt.x=_t.x,Wt.y=_t.y,Wt.z=Xt,xt=Jt.solve33(Zt.neg(Wt))}else{var Qt=L+F+O*ft*ft+V*mt*mt,be=O*ft+V*mt,xe=O+V;xe==0&&(xe=1);var Jt=new lt;Jt.ex.setNum(Qt,be),Jt.ey.setNum(be,xe);var tn=Jt.solve(l.neg(_t));xt.x=tn.x,xt.y=tn.y,xt.z=0}var Kn=l.combine(xt.x,rt,xt.z,H),As=xt.x*ft+xt.y+xt.z*j,_n=xt.x*mt+xt.y+xt.z*ot;return y.subMul(L,Kn),_-=O*As,$.addMul(F,Kn),k+=V*_n,this.m_bodyA.c_position.c=y,this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c=$,this.m_bodyB.c_position.a=k,It<=m.linearSlop&&Nt<=m.angularSlop},h.TYPE="prismatic-joint",h}(Me),nw={ratio:1},uh=function(g){o(h,g);function h(p,y,_,$,k,S){var T=this;if(!(T instanceof h))return new h(p,y,_,$,k,S);p=i(p,nw),T=g.call(this,p,y,_)||this,y=T.m_bodyA,_=T.m_bodyB,T.m_type=h.TYPE,T.m_joint1=$||p.joint1,T.m_joint2=k||p.joint2,T.m_ratio=d.isFinite(S)?S:p.ratio,T.m_type1=T.m_joint1.getType(),T.m_type2=T.m_joint2.getType();var L,F;T.m_bodyC=T.m_joint1.getBodyA(),T.m_bodyA=T.m_joint1.getBodyB();var O=T.m_bodyA.m_xf,V=T.m_bodyA.m_sweep.a,R=T.m_bodyC.m_xf,D=T.m_bodyC.m_sweep.a;if(T.m_type1===io.TYPE){var W=T.m_joint1;T.m_localAnchorC=W.m_localAnchorA,T.m_localAnchorA=W.m_localAnchorB,T.m_referenceAngleA=W.m_referenceAngle,T.m_localAxisC=l.zero(),L=V-D-T.m_referenceAngleA}else{var H=T.m_joint1;T.m_localAnchorC=H.m_localAnchorA,T.m_localAnchorA=H.m_localAnchorB,T.m_referenceAngleA=H.m_referenceAngle,T.m_localAxisC=H.m_localXAxisA;var j=T.m_localAnchorC,ot=C.mulTVec2(R.q,l.add(C.mulVec2(O.q,T.m_localAnchorA),l.sub(O.p,R.p)));L=l.dot(ot,T.m_localAxisC)-l.dot(j,T.m_localAxisC)}T.m_bodyD=T.m_joint2.getBodyA(),T.m_bodyB=T.m_joint2.getBodyB();var rt=T.m_bodyB.m_xf,ft=T.m_bodyB.m_sweep.a,mt=T.m_bodyD.m_xf,xt=T.m_bodyD.m_sweep.a;if(T.m_type2===io.TYPE){var W=T.m_joint2;T.m_localAnchorD=W.m_localAnchorA,T.m_localAnchorB=W.m_localAnchorB,T.m_referenceAngleB=W.m_referenceAngle,T.m_localAxisD=l.zero(),F=ft-xt-T.m_referenceAngleB}else{var H=T.m_joint2;T.m_localAnchorD=H.m_localAnchorA,T.m_localAnchorB=H.m_localAnchorB,T.m_referenceAngleB=H.m_referenceAngle,T.m_localAxisD=H.m_localXAxisA;var _t=T.m_localAnchorD,It=C.mulTVec2(mt.q,l.add(C.mulVec2(rt.q,T.m_localAnchorB),l.sub(rt.p,mt.p)));F=l.dot(It,T.m_localAxisD)-l.dot(_t,T.m_localAxisD)}return T.m_constant=L+T.m_ratio*F,T.m_impulse=0,T}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,joint1:this.m_joint1,joint2:this.m_joint2,ratio:this.m_ratio}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y),p.joint1=_(Me,p.joint1,y),p.joint2=_(Me,p.joint2,y);var $=new h(p);return $},h.prototype.getJoint1=function(){return this.m_joint1},h.prototype.getJoint2=function(){return this.m_joint2},h.prototype.setRatio=function(p){this.m_ratio=p},h.prototype.getRatio=function(){return this.m_ratio},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(this.m_impulse,this.m_JvAC).mul(p)},h.prototype.getReactionTorque=function(p){var y=this.m_impulse*this.m_JwA;return p*y},h.prototype.initVelocityConstraints=function(p){this.m_lcA=this.m_bodyA.m_sweep.localCenter,this.m_lcB=this.m_bodyB.m_sweep.localCenter,this.m_lcC=this.m_bodyC.m_sweep.localCenter,this.m_lcD=this.m_bodyD.m_sweep.localCenter,this.m_mA=this.m_bodyA.m_invMass,this.m_mB=this.m_bodyB.m_invMass,this.m_mC=this.m_bodyC.m_invMass,this.m_mD=this.m_bodyD.m_invMass,this.m_iA=this.m_bodyA.m_invI,this.m_iB=this.m_bodyB.m_invI,this.m_iC=this.m_bodyC.m_invI,this.m_iD=this.m_bodyD.m_invI;var y=this.m_bodyA.c_position.a,_=this.m_bodyA.c_velocity.v,$=this.m_bodyA.c_velocity.w,k=this.m_bodyB.c_position.a,S=this.m_bodyB.c_velocity.v,T=this.m_bodyB.c_velocity.w,L=this.m_bodyC.c_position.a,F=this.m_bodyC.c_velocity.v,O=this.m_bodyC.c_velocity.w,V=this.m_bodyD.c_position.a,R=this.m_bodyD.c_velocity.v,D=this.m_bodyD.c_velocity.w,W=C.neo(y),H=C.neo(k),j=C.neo(L),ot=C.neo(V);if(this.m_mass=0,this.m_type1==io.TYPE)this.m_JvAC=l.zero(),this.m_JwA=1,this.m_JwC=1,this.m_mass+=this.m_iA+this.m_iC;else{var rt=C.mulVec2(j,this.m_localAxisC),ft=C.mulSub(j,this.m_localAnchorC,this.m_lcC),mt=C.mulSub(W,this.m_localAnchorA,this.m_lcA);this.m_JvAC=rt,this.m_JwC=l.crossVec2Vec2(ft,rt),this.m_JwA=l.crossVec2Vec2(mt,rt),this.m_mass+=this.m_mC+this.m_mA+this.m_iC*this.m_JwC*this.m_JwC+this.m_iA*this.m_JwA*this.m_JwA}if(this.m_type2==io.TYPE)this.m_JvBD=l.zero(),this.m_JwB=this.m_ratio,this.m_JwD=this.m_ratio,this.m_mass+=this.m_ratio*this.m_ratio*(this.m_iB+this.m_iD);else{var rt=C.mulVec2(ot,this.m_localAxisD),xt=C.mulSub(ot,this.m_localAnchorD,this.m_lcD),_t=C.mulSub(H,this.m_localAnchorB,this.m_lcB);this.m_JvBD=l.mulNumVec2(this.m_ratio,rt),this.m_JwD=this.m_ratio*l.crossVec2Vec2(xt,rt),this.m_JwB=this.m_ratio*l.crossVec2Vec2(_t,rt),this.m_mass+=this.m_ratio*this.m_ratio*(this.m_mD+this.m_mB)+this.m_iD*this.m_JwD*this.m_JwD+this.m_iB*this.m_JwB*this.m_JwB}this.m_mass=this.m_mass>0?1/this.m_mass:0,p.warmStarting?(_.addMul(this.m_mA*this.m_impulse,this.m_JvAC),$+=this.m_iA*this.m_impulse*this.m_JwA,S.addMul(this.m_mB*this.m_impulse,this.m_JvBD),T+=this.m_iB*this.m_impulse*this.m_JwB,F.subMul(this.m_mC*this.m_impulse,this.m_JvAC),O-=this.m_iC*this.m_impulse*this.m_JwC,R.subMul(this.m_mD*this.m_impulse,this.m_JvBD),D-=this.m_iD*this.m_impulse*this.m_JwD):this.m_impulse=0,this.m_bodyA.c_velocity.v.setVec2(_),this.m_bodyA.c_velocity.w=$,this.m_bodyB.c_velocity.v.setVec2(S),this.m_bodyB.c_velocity.w=T,this.m_bodyC.c_velocity.v.setVec2(F),this.m_bodyC.c_velocity.w=O,this.m_bodyD.c_velocity.v.setVec2(R),this.m_bodyD.c_velocity.w=D},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_bodyC.c_velocity.v,T=this.m_bodyC.c_velocity.w,L=this.m_bodyD.c_velocity.v,F=this.m_bodyD.c_velocity.w,O=l.dot(this.m_JvAC,y)-l.dot(this.m_JvAC,S)+l.dot(this.m_JvBD,$)-l.dot(this.m_JvBD,L);O+=this.m_JwA*_-this.m_JwC*T+(this.m_JwB*k-this.m_JwD*F);var V=-this.m_mass*O;this.m_impulse+=V,y.addMul(this.m_mA*V,this.m_JvAC),_+=this.m_iA*V*this.m_JwA,$.addMul(this.m_mB*V,this.m_JvBD),k+=this.m_iB*V*this.m_JwB,S.subMul(this.m_mC*V,this.m_JvAC),T-=this.m_iC*V*this.m_JwC,L.subMul(this.m_mD*V,this.m_JvBD),F-=this.m_iD*V*this.m_JwD,this.m_bodyA.c_velocity.v.setVec2(y),this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v.setVec2($),this.m_bodyB.c_velocity.w=k,this.m_bodyC.c_velocity.v.setVec2(S),this.m_bodyC.c_velocity.w=T,this.m_bodyD.c_velocity.v.setVec2(L),this.m_bodyD.c_velocity.w=F},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=this.m_bodyC.c_position.c,T=this.m_bodyC.c_position.a,L=this.m_bodyD.c_position.c,F=this.m_bodyD.c_position.a,O=C.neo(_),V=C.neo(k),R=C.neo(T),D=C.neo(F),W=0,H,j,ot,rt,ft,mt,xt,_t,It=0;if(this.m_type1==io.TYPE)ot=l.zero(),ft=1,xt=1,It+=this.m_iA+this.m_iC,H=_-T-this.m_referenceAngleA;else{var Nt=C.mulVec2(R,this.m_localAxisC),Pt=C.mulSub(R,this.m_localAnchorC,this.m_lcC),kt=C.mulSub(O,this.m_localAnchorA,this.m_lcA);ot=Nt,xt=l.crossVec2Vec2(Pt,Nt),ft=l.crossVec2Vec2(kt,Nt),It+=this.m_mC+this.m_mA+this.m_iC*xt*xt+this.m_iA*ft*ft;var wt=l.sub(this.m_localAnchorC,this.m_lcC),Xt=C.mulTVec2(R,l.add(kt,l.sub(y,S)));H=l.dot(l.sub(Xt,wt),this.m_localAxisC)}if(this.m_type2==io.TYPE)rt=l.zero(),mt=this.m_ratio,_t=this.m_ratio,It+=this.m_ratio*this.m_ratio*(this.m_iB+this.m_iD),j=k-F-this.m_referenceAngleB;else{var Nt=C.mulVec2(D,this.m_localAxisD),jt=C.mulSub(D,this.m_localAnchorD,this.m_lcD),Qt=C.mulSub(V,this.m_localAnchorB,this.m_lcB);rt=l.mulNumVec2(this.m_ratio,Nt),_t=this.m_ratio*l.crossVec2Vec2(jt,Nt),mt=this.m_ratio*l.crossVec2Vec2(Qt,Nt),It+=this.m_ratio*this.m_ratio*(this.m_mD+this.m_mB)+this.m_iD*_t*_t+this.m_iB*mt*mt;var be=l.sub(this.m_localAnchorD,this.m_lcD),$e=C.mulTVec2(D,l.add(Qt,l.sub($,L)));j=l.dot($e,this.m_localAxisD)-l.dot(be,this.m_localAxisD)}var xe=H+this.m_ratio*j-this.m_constant,qt=0;return It>0&&(qt=-xe/It),y.addMul(this.m_mA*qt,ot),_+=this.m_iA*qt*ft,$.addMul(this.m_mB*qt,rt),k+=this.m_iB*qt*mt,S.subMul(this.m_mC*qt,ot),T-=this.m_iC*qt*xt,L.subMul(this.m_mD*qt,rt),F-=this.m_iD*qt*_t,this.m_bodyA.c_position.c.setVec2(y),this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c.setVec2($),this.m_bodyB.c_position.a=k,this.m_bodyC.c_position.c.setVec2(S),this.m_bodyC.c_position.a=T,this.m_bodyD.c_position.c.setVec2(L),this.m_bodyD.c_position.a=F,W<m.linearSlop},h.TYPE="gear-joint",h}(Me),sw={maxForce:1,maxTorque:1,correctionFactor:.3},hh=function(g){o(h,g);function h(p,y,_){var $=this;return $ instanceof h?(p=i(p,sw),$=g.call(this,p,y,_)||this,y=$.m_bodyA,_=$.m_bodyB,$.m_type=h.TYPE,$.m_linearOffset=d.isFinite(p.linearOffset)?p.linearOffset:y.getLocalPoint(_.getPosition()),$.m_angularOffset=d.isFinite(p.angularOffset)?p.angularOffset:_.getAngle()-y.getAngle(),$.m_linearImpulse=l.zero(),$.m_angularImpulse=0,$.m_maxForce=p.maxForce,$.m_maxTorque=p.maxTorque,$.m_correctionFactor=p.correctionFactor,$):new h(p,y,_)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,maxForce:this.m_maxForce,maxTorque:this.m_maxTorque,correctionFactor:this.m_correctionFactor,linearOffset:this.m_linearOffset,angularOffset:this.m_angularOffset}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){},h.prototype.setMaxForce=function(p){this.m_maxForce=p},h.prototype.getMaxForce=function(){return this.m_maxForce},h.prototype.setMaxTorque=function(p){this.m_maxTorque=p},h.prototype.getMaxTorque=function(){return this.m_maxTorque},h.prototype.setCorrectionFactor=function(p){this.m_correctionFactor=p},h.prototype.getCorrectionFactor=function(){return this.m_correctionFactor},h.prototype.setLinearOffset=function(p){(p.x!=this.m_linearOffset.x||p.y!=this.m_linearOffset.y)&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_linearOffset=p)},h.prototype.getLinearOffset=function(){return this.m_linearOffset},h.prototype.setAngularOffset=function(p){p!=this.m_angularOffset&&(this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_angularOffset=p)},h.prototype.getAngularOffset=function(){return this.m_angularOffset},h.prototype.getAnchorA=function(){return this.m_bodyA.getPosition()},h.prototype.getAnchorB=function(){return this.m_bodyB.getPosition()},h.prototype.getReactionForce=function(p){return l.mulNumVec2(p,this.m_linearImpulse)},h.prototype.getReactionTorque=function(p){return p*this.m_angularImpulse},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyA.c_velocity.v,k=this.m_bodyA.c_velocity.w,S=this.m_bodyB.c_position.c,T=this.m_bodyB.c_position.a,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w,O=C.neo(_),V=C.neo(T);this.m_rA=C.mulVec2(O,l.neg(this.m_localCenterA)),this.m_rB=C.mulVec2(V,l.neg(this.m_localCenterB));var R=this.m_invMassA,D=this.m_invMassB,W=this.m_invIA,H=this.m_invIB,j=new lt;if(j.ex.x=R+D+W*this.m_rA.y*this.m_rA.y+H*this.m_rB.y*this.m_rB.y,j.ex.y=-W*this.m_rA.x*this.m_rA.y-H*this.m_rB.x*this.m_rB.y,j.ey.x=j.ex.y,j.ey.y=R+D+W*this.m_rA.x*this.m_rA.x+H*this.m_rB.x*this.m_rB.x,this.m_linearMass=j.getInverse(),this.m_angularMass=W+H,this.m_angularMass>0&&(this.m_angularMass=1/this.m_angularMass),this.m_linearError=l.zero(),this.m_linearError.addCombine(1,S,1,this.m_rB),this.m_linearError.subCombine(1,y,1,this.m_rA),this.m_linearError.sub(C.mulVec2(O,this.m_linearOffset)),this.m_angularError=T-_-this.m_angularOffset,p.warmStarting){this.m_linearImpulse.mul(p.dtRatio),this.m_angularImpulse*=p.dtRatio;var ot=l.neo(this.m_linearImpulse.x,this.m_linearImpulse.y);$.subMul(R,ot),k-=W*(l.crossVec2Vec2(this.m_rA,ot)+this.m_angularImpulse),L.addMul(D,ot),F+=H*(l.crossVec2Vec2(this.m_rB,ot)+this.m_angularImpulse)}else this.m_linearImpulse.setZero(),this.m_angularImpulse=0;this.m_bodyA.c_velocity.v=$,this.m_bodyA.c_velocity.w=k,this.m_bodyB.c_velocity.v=L,this.m_bodyB.c_velocity.w=F},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_invMassA,T=this.m_invMassB,L=this.m_invIA,F=this.m_invIB,O=p.dt,V=p.inv_dt;{var R=k-_+V*this.m_correctionFactor*this.m_angularError,D=-this.m_angularMass*R,W=this.m_angularImpulse,H=O*this.m_maxTorque;this.m_angularImpulse=d.clamp(this.m_angularImpulse+D,-H,H),D=this.m_angularImpulse-W,_-=L*D,k+=F*D}{var R=l.zero();R.addCombine(1,$,1,l.crossNumVec2(k,this.m_rB)),R.subCombine(1,y,1,l.crossNumVec2(_,this.m_rA)),R.addMul(V*this.m_correctionFactor,this.m_linearError);var D=l.neg(lt.mulVec2(this.m_linearMass,R)),W=l.clone(this.m_linearImpulse);this.m_linearImpulse.add(D);var H=O*this.m_maxForce;this.m_linearImpulse.clamp(H),D=l.sub(this.m_linearImpulse,W),y.subMul(S,D),_-=L*l.crossVec2Vec2(this.m_rA,D),$.addMul(T,D),k+=F*l.crossVec2Vec2(this.m_rB,D)}this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){return!0},h.TYPE="motor-joint",h}(Me),ow={maxForce:0,frequencyHz:5,dampingRatio:.7},dh=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(p=i(p,ow),k=g.call(this,p,y,_)||this,y=k.m_bodyA,_=k.m_bodyB,k.m_type=h.TYPE,k.m_targetA=$?l.clone($):p.target||l.zero(),k.m_localAnchorB=I.mulTVec2(_.getTransform(),k.m_targetA),k.m_maxForce=p.maxForce,k.m_impulse=l.zero(),k.m_frequencyHz=p.frequencyHz,k.m_dampingRatio=p.dampingRatio,k.m_beta=0,k.m_gamma=0,k.m_rB=l.zero(),k.m_localCenterB=l.zero(),k.m_invMassB=0,k.m_invIB=0,k.m_mass=new lt,k.m_C=l.zero(),k):new h(p,y,_,$)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,target:this.m_targetA,maxForce:this.m_maxForce,frequencyHz:this.m_frequencyHz,dampingRatio:this.m_dampingRatio,_localAnchorB:this.m_localAnchorB}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y),p.target=l.clone(p.target);var $=new h(p);return p._localAnchorB&&($.m_localAnchorB=p._localAnchorB),$},h.prototype.setTarget=function(p){this.m_bodyB.isAwake()==!1&&this.m_bodyB.setAwake(!0),this.m_targetA=l.clone(p)},h.prototype.getTarget=function(){return this.m_targetA},h.prototype.setMaxForce=function(p){this.m_maxForce=p},h.prototype.getMaxForce=function(){return this.m_maxForce},h.prototype.setFrequency=function(p){this.m_frequencyHz=p},h.prototype.getFrequency=function(){return this.m_frequencyHz},h.prototype.setDampingRatio=function(p){this.m_dampingRatio=p},h.prototype.getDampingRatio=function(){return this.m_dampingRatio},h.prototype.getAnchorA=function(){return l.clone(this.m_targetA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(p,this.m_impulse)},h.prototype.getReactionTorque=function(p){return p*0},h.prototype.shiftOrigin=function(p){this.m_targetA.sub(p)},h.prototype.initVelocityConstraints=function(p){this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyB.c_position,_=this.m_bodyB.c_velocity,$=y.c,k=y.a,S=_.v,T=_.w,L=C.neo(k),F=this.m_bodyB.getMass(),O=2*d.PI*this.m_frequencyHz,V=2*F*this.m_dampingRatio*O,R=F*(O*O),D=p.dt;this.m_gamma=D*(V+D*R),this.m_gamma!=0&&(this.m_gamma=1/this.m_gamma),this.m_beta=D*R*this.m_gamma,this.m_rB=C.mulVec2(L,l.sub(this.m_localAnchorB,this.m_localCenterB));var W=new lt;W.ex.x=this.m_invMassB+this.m_invIB*this.m_rB.y*this.m_rB.y+this.m_gamma,W.ex.y=-this.m_invIB*this.m_rB.x*this.m_rB.y,W.ey.x=W.ex.y,W.ey.y=this.m_invMassB+this.m_invIB*this.m_rB.x*this.m_rB.x+this.m_gamma,this.m_mass=W.getInverse(),this.m_C.setVec2($),this.m_C.addCombine(1,this.m_rB,-1,this.m_targetA),this.m_C.mul(this.m_beta),T*=.98,p.warmStarting?(this.m_impulse.mul(p.dtRatio),S.addMul(this.m_invMassB,this.m_impulse),T+=this.m_invIB*l.crossVec2Vec2(this.m_rB,this.m_impulse)):this.m_impulse.setZero(),_.v.setVec2(S),_.w=T},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyB.c_velocity,_=l.clone(y.v),$=y.w,k=l.crossNumVec2($,this.m_rB);k.add(_),k.addCombine(1,this.m_C,this.m_gamma,this.m_impulse),k.neg();var S=lt.mulVec2(this.m_mass,k),T=l.clone(this.m_impulse);this.m_impulse.add(S);var L=p.dt*this.m_maxForce;this.m_impulse.clamp(L),S=l.sub(this.m_impulse,T),_.addMul(this.m_invMassB,S),$+=this.m_invIB*l.crossVec2Vec2(this.m_rB,S),y.v.setVec2(_),y.w=$},h.prototype.solvePositionConstraints=function(p){return!0},h.TYPE="mouse-joint",h}(Me),rw={collideConnected:!0},ph=function(g){o(h,g);function h(p,y,_,$,k,S,T,L){var F=this;return F instanceof h?(p=i(p,rw),F=g.call(this,p,y,_)||this,y=F.m_bodyA,_=F.m_bodyB,F.m_type=h.TYPE,F.m_groundAnchorA=$||p.groundAnchorA||l.neo(-1,1),F.m_groundAnchorB=k||p.groundAnchorB||l.neo(1,1),F.m_localAnchorA=S?y.getLocalPoint(S):p.localAnchorA||l.neo(-1,0),F.m_localAnchorB=T?_.getLocalPoint(T):p.localAnchorB||l.neo(1,0),F.m_lengthA=d.isFinite(p.lengthA)?p.lengthA:l.distance(S,$),F.m_lengthB=d.isFinite(p.lengthB)?p.lengthB:l.distance(T,k),F.m_ratio=d.isFinite(L)?L:p.ratio,F.m_constant=F.m_lengthA+F.m_ratio*F.m_lengthB,F.m_impulse=0,F):new h(p,y,_,$,k,S,T,L)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,groundAnchorA:this.m_groundAnchorA,groundAnchorB:this.m_groundAnchorB,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,lengthA:this.m_lengthA,lengthB:this.m_lengthB,ratio:this.m_ratio}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype.getGroundAnchorA=function(){return this.m_groundAnchorA},h.prototype.getGroundAnchorB=function(){return this.m_groundAnchorB},h.prototype.getLengthA=function(){return this.m_lengthA},h.prototype.getLengthB=function(){return this.m_lengthB},h.prototype.getRatio=function(){return this.m_ratio},h.prototype.getCurrentLengthA=function(){var p=this.m_bodyA.getWorldPoint(this.m_localAnchorA),y=this.m_groundAnchorA;return l.distance(p,y)},h.prototype.getCurrentLengthB=function(){var p=this.m_bodyB.getWorldPoint(this.m_localAnchorB),y=this.m_groundAnchorB;return l.distance(p,y)},h.prototype.shiftOrigin=function(p){this.m_groundAnchorA.sub(p),this.m_groundAnchorB.sub(p)},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(this.m_impulse,this.m_uB).mul(p)},h.prototype.getReactionTorque=function(p){return 0},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyA.c_velocity.v,k=this.m_bodyA.c_velocity.w,S=this.m_bodyB.c_position.c,T=this.m_bodyB.c_position.a,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w,O=C.neo(_),V=C.neo(T);this.m_rA=C.mulVec2(O,l.sub(this.m_localAnchorA,this.m_localCenterA)),this.m_rB=C.mulVec2(V,l.sub(this.m_localAnchorB,this.m_localCenterB)),this.m_uA=l.sub(l.add(y,this.m_rA),this.m_groundAnchorA),this.m_uB=l.sub(l.add(S,this.m_rB),this.m_groundAnchorB);var R=this.m_uA.length(),D=this.m_uB.length();R>10*m.linearSlop?this.m_uA.mul(1/R):this.m_uA.setZero(),D>10*m.linearSlop?this.m_uB.mul(1/D):this.m_uB.setZero();var W=l.crossVec2Vec2(this.m_rA,this.m_uA),H=l.crossVec2Vec2(this.m_rB,this.m_uB),j=this.m_invMassA+this.m_invIA*W*W,ot=this.m_invMassB+this.m_invIB*H*H;if(this.m_mass=j+this.m_ratio*this.m_ratio*ot,this.m_mass>0&&(this.m_mass=1/this.m_mass),p.warmStarting){this.m_impulse*=p.dtRatio;var rt=l.mulNumVec2(-this.m_impulse,this.m_uA),ft=l.mulNumVec2(-this.m_ratio*this.m_impulse,this.m_uB);$.addMul(this.m_invMassA,rt),k+=this.m_invIA*l.crossVec2Vec2(this.m_rA,rt),L.addMul(this.m_invMassB,ft),F+=this.m_invIB*l.crossVec2Vec2(this.m_rB,ft)}else this.m_impulse=0;this.m_bodyA.c_velocity.v=$,this.m_bodyA.c_velocity.w=k,this.m_bodyB.c_velocity.v=L,this.m_bodyB.c_velocity.w=F},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=l.add(y,l.crossNumVec2(_,this.m_rA)),T=l.add($,l.crossNumVec2(k,this.m_rB)),L=-l.dot(this.m_uA,S)-this.m_ratio*l.dot(this.m_uB,T),F=-this.m_mass*L;this.m_impulse+=F;var O=l.mulNumVec2(-F,this.m_uA),V=l.mulNumVec2(-this.m_ratio*F,this.m_uB);y.addMul(this.m_invMassA,O),_+=this.m_invIA*l.crossVec2Vec2(this.m_rA,O),$.addMul(this.m_invMassB,V),k+=this.m_invIB*l.crossVec2Vec2(this.m_rB,V),this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=C.mulVec2(S,l.sub(this.m_localAnchorA,this.m_localCenterA)),F=C.mulVec2(T,l.sub(this.m_localAnchorB,this.m_localCenterB)),O=l.sub(l.add(y,this.m_rA),this.m_groundAnchorA),V=l.sub(l.add($,this.m_rB),this.m_groundAnchorB),R=O.length(),D=V.length();R>10*m.linearSlop?O.mul(1/R):O.setZero(),D>10*m.linearSlop?V.mul(1/D):V.setZero();var W=l.crossVec2Vec2(L,O),H=l.crossVec2Vec2(F,V),j=this.m_invMassA+this.m_invIA*W*W,ot=this.m_invMassB+this.m_invIB*H*H,rt=j+this.m_ratio*this.m_ratio*ot;rt>0&&(rt=1/rt);var ft=this.m_constant-R-this.m_ratio*D,mt=d.abs(ft),xt=-rt*ft,_t=l.mulNumVec2(-xt,O),It=l.mulNumVec2(-this.m_ratio*xt,V);return y.addMul(this.m_invMassA,_t),_+=this.m_invIA*l.crossVec2Vec2(L,_t),$.addMul(this.m_invMassB,It),k+=this.m_invIB*l.crossVec2Vec2(F,It),this.m_bodyA.c_position.c=y,this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c=$,this.m_bodyB.c_position.a=k,mt<m.linearSlop},h.TYPE="pulley-joint",h}(Me),km=0,iw=2,aw={maxLength:0},fh=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(p=i(p,aw),k=g.call(this,p,y,_)||this,y=k.m_bodyA,_=k.m_bodyB,k.m_type=h.TYPE,k.m_localAnchorA=$?y.getLocalPoint($):p.localAnchorA||l.neo(-1,0),k.m_localAnchorB=$?_.getLocalPoint($):p.localAnchorB||l.neo(1,0),k.m_maxLength=p.maxLength,k.m_mass=0,k.m_impulse=0,k.m_length=0,k.m_state=km,k):new h(p,y,_,$)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,maxLength:this.m_maxLength}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.setMaxLength=function(p){this.m_maxLength=p},h.prototype.getMaxLength=function(){return this.m_maxLength},h.prototype.getLimitState=function(){return this.m_state},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.mulNumVec2(this.m_impulse,this.m_u).mul(p)},h.prototype.getReactionTorque=function(p){return 0},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyA.c_velocity.v,k=this.m_bodyA.c_velocity.w,S=this.m_bodyB.c_position.c,T=this.m_bodyB.c_position.a,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w,O=C.neo(_),V=C.neo(T);this.m_rA=C.mulSub(O,this.m_localAnchorA,this.m_localCenterA),this.m_rB=C.mulSub(V,this.m_localAnchorB,this.m_localCenterB),this.m_u=l.zero(),this.m_u.addCombine(1,S,1,this.m_rB),this.m_u.subCombine(1,y,1,this.m_rA),this.m_length=this.m_u.length();var R=this.m_length-this.m_maxLength;if(R>0?this.m_state=iw:this.m_state=km,this.m_length>m.linearSlop)this.m_u.mul(1/this.m_length);else{this.m_u.setZero(),this.m_mass=0,this.m_impulse=0;return}var D=l.crossVec2Vec2(this.m_rA,this.m_u),W=l.crossVec2Vec2(this.m_rB,this.m_u),H=this.m_invMassA+this.m_invIA*D*D+this.m_invMassB+this.m_invIB*W*W;if(this.m_mass=H!=0?1/H:0,p.warmStarting){this.m_impulse*=p.dtRatio;var j=l.mulNumVec2(this.m_impulse,this.m_u);$.subMul(this.m_invMassA,j),k-=this.m_invIA*l.crossVec2Vec2(this.m_rA,j),L.addMul(this.m_invMassB,j),F+=this.m_invIB*l.crossVec2Vec2(this.m_rB,j)}else this.m_impulse=0;this.m_bodyA.c_velocity.v.setVec2($),this.m_bodyA.c_velocity.w=k,this.m_bodyB.c_velocity.v.setVec2(L),this.m_bodyB.c_velocity.w=F},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=l.addCrossNumVec2(y,_,this.m_rA),T=l.addCrossNumVec2($,k,this.m_rB),L=this.m_length-this.m_maxLength,F=l.dot(this.m_u,l.sub(T,S));L<0&&(F+=p.inv_dt*L);var O=-this.m_mass*F,V=this.m_impulse;this.m_impulse=d.min(0,this.m_impulse+O),O=this.m_impulse-V;var R=l.mulNumVec2(O,this.m_u);y.subMul(this.m_invMassA,R),_-=this.m_invIA*l.crossVec2Vec2(this.m_rA,R),$.addMul(this.m_invMassB,R),k+=this.m_invIB*l.crossVec2Vec2(this.m_rB,R),this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=C.mulSub(S,this.m_localAnchorA,this.m_localCenterA),F=C.mulSub(T,this.m_localAnchorB,this.m_localCenterB),O=l.zero();O.addCombine(1,$,1,F),O.subCombine(1,y,1,L);var V=O.normalize(),R=V-this.m_maxLength;R=d.clamp(R,0,m.maxLinearCorrection);var D=-this.m_mass*R,W=l.mulNumVec2(D,O);return y.subMul(this.m_invMassA,W),_-=this.m_invIA*l.crossVec2Vec2(L,W),$.addMul(this.m_invMassB,W),k+=this.m_invIB*l.crossVec2Vec2(F,W),this.m_bodyA.c_position.c.setVec2(y),this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c.setVec2($),this.m_bodyB.c_position.a=k,V-this.m_maxLength<m.linearSlop},h.TYPE="rope-joint",h}(Me),cw={frequencyHz:0,dampingRatio:0},mh=function(g){o(h,g);function h(p,y,_,$){var k=this;return k instanceof h?(p=i(p,cw),k=g.call(this,p,y,_)||this,y=k.m_bodyA,_=k.m_bodyB,k.m_type=h.TYPE,k.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),k.m_localAnchorB=l.clone($?_.getLocalPoint($):p.localAnchorB||l.zero()),k.m_referenceAngle=d.isFinite(p.referenceAngle)?p.referenceAngle:_.getAngle()-y.getAngle(),k.m_frequencyHz=p.frequencyHz,k.m_dampingRatio=p.dampingRatio,k.m_impulse=new Zt,k.m_bias=0,k.m_gamma=0,k.m_rA,k.m_rB,k.m_localCenterA,k.m_localCenterB,k.m_invMassA,k.m_invMassB,k.m_invIA,k.m_invIB,k.m_mass=new ro,k):new h(p,y,_,$)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,frequencyHz:this.m_frequencyHz,dampingRatio:this.m_dampingRatio,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,referenceAngle:this.m_referenceAngle}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB)},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.getReferenceAngle=function(){return this.m_referenceAngle},h.prototype.setFrequency=function(p){this.m_frequencyHz=p},h.prototype.getFrequency=function(){return this.m_frequencyHz},h.prototype.setDampingRatio=function(p){this.m_dampingRatio=p},h.prototype.getDampingRatio=function(){return this.m_dampingRatio},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.neo(this.m_impulse.x,this.m_impulse.y).mul(p)},h.prototype.getReactionTorque=function(p){return p*this.m_impulse.z},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_bodyA.c_position.a,_=this.m_bodyA.c_velocity.v,$=this.m_bodyA.c_velocity.w,k=this.m_bodyB.c_position.a,S=this.m_bodyB.c_velocity.v,T=this.m_bodyB.c_velocity.w,L=C.neo(y),F=C.neo(k);this.m_rA=C.mulVec2(L,l.sub(this.m_localAnchorA,this.m_localCenterA)),this.m_rB=C.mulVec2(F,l.sub(this.m_localAnchorB,this.m_localCenterB));var O=this.m_invMassA,V=this.m_invMassB,R=this.m_invIA,D=this.m_invIB,W=new ro;if(W.ex.x=O+V+this.m_rA.y*this.m_rA.y*R+this.m_rB.y*this.m_rB.y*D,W.ey.x=-this.m_rA.y*this.m_rA.x*R-this.m_rB.y*this.m_rB.x*D,W.ez.x=-this.m_rA.y*R-this.m_rB.y*D,W.ex.y=W.ey.x,W.ey.y=O+V+this.m_rA.x*this.m_rA.x*R+this.m_rB.x*this.m_rB.x*D,W.ez.y=this.m_rA.x*R+this.m_rB.x*D,W.ex.z=W.ez.x,W.ey.z=W.ez.y,W.ez.z=R+D,this.m_frequencyHz>0){W.getInverse22(this.m_mass);var H=R+D,j=H>0?1/H:0,ot=k-y-this.m_referenceAngle,rt=2*d.PI*this.m_frequencyHz,ft=2*j*this.m_dampingRatio*rt,mt=j*rt*rt,xt=p.dt;this.m_gamma=xt*(ft+xt*mt),this.m_gamma=this.m_gamma!=0?1/this.m_gamma:0,this.m_bias=ot*xt*mt*this.m_gamma,H+=this.m_gamma,this.m_mass.ez.z=H!=0?1/H:0}else W.ez.z==0?(W.getInverse22(this.m_mass),this.m_gamma=0,this.m_bias=0):(W.getSymInverse33(this.m_mass),this.m_gamma=0,this.m_bias=0);if(p.warmStarting){this.m_impulse.mul(p.dtRatio);var _t=l.neo(this.m_impulse.x,this.m_impulse.y);_.subMul(O,_t),$-=R*(l.crossVec2Vec2(this.m_rA,_t)+this.m_impulse.z),S.addMul(V,_t),T+=D*(l.crossVec2Vec2(this.m_rB,_t)+this.m_impulse.z)}else this.m_impulse.setZero();this.m_bodyA.c_velocity.v=_,this.m_bodyA.c_velocity.w=$,this.m_bodyB.c_velocity.v=S,this.m_bodyB.c_velocity.w=T},h.prototype.solveVelocityConstraints=function(p){var y=this.m_bodyA.c_velocity.v,_=this.m_bodyA.c_velocity.w,$=this.m_bodyB.c_velocity.v,k=this.m_bodyB.c_velocity.w,S=this.m_invMassA,T=this.m_invMassB,L=this.m_invIA,F=this.m_invIB;if(this.m_frequencyHz>0){var O=k-_,V=-this.m_mass.ez.z*(O+this.m_bias+this.m_gamma*this.m_impulse.z);this.m_impulse.z+=V,_-=L*V,k+=F*V;var R=l.zero();R.addCombine(1,$,1,l.crossNumVec2(k,this.m_rB)),R.subCombine(1,y,1,l.crossNumVec2(_,this.m_rA));var D=l.neg(ro.mulVec2(this.m_mass,R));this.m_impulse.x+=D.x,this.m_impulse.y+=D.y;var W=l.clone(D);y.subMul(S,W),_-=L*l.crossVec2Vec2(this.m_rA,W),$.addMul(T,W),k+=F*l.crossVec2Vec2(this.m_rB,W)}else{var R=l.zero();R.addCombine(1,$,1,l.crossNumVec2(k,this.m_rB)),R.subCombine(1,y,1,l.crossNumVec2(_,this.m_rA));var O=k-_,H=new Zt(R.x,R.y,O),j=Zt.neg(ro.mulVec3(this.m_mass,H));this.m_impulse.add(j);var W=l.neo(j.x,j.y);y.subMul(S,W),_-=L*(l.crossVec2Vec2(this.m_rA,W)+j.z),$.addMul(T,W),k+=F*(l.crossVec2Vec2(this.m_rB,W)+j.z)}this.m_bodyA.c_velocity.v=y,this.m_bodyA.c_velocity.w=_,this.m_bodyB.c_velocity.v=$,this.m_bodyB.c_velocity.w=k},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=this.m_invMassA,F=this.m_invMassB,O=this.m_invIA,V=this.m_invIB,R=C.mulVec2(S,l.sub(this.m_localAnchorA,this.m_localCenterA)),D=C.mulVec2(T,l.sub(this.m_localAnchorB,this.m_localCenterB)),W,H,j=new ro;if(j.ex.x=L+F+R.y*R.y*O+D.y*D.y*V,j.ey.x=-R.y*R.x*O-D.y*D.x*V,j.ez.x=-R.y*O-D.y*V,j.ex.y=j.ey.x,j.ey.y=L+F+R.x*R.x*O+D.x*D.x*V,j.ez.y=R.x*O+D.x*V,j.ex.z=j.ez.x,j.ey.z=j.ez.y,j.ez.z=O+V,this.m_frequencyHz>0){var ot=l.zero();ot.addCombine(1,$,1,D),ot.subCombine(1,y,1,R),W=ot.length(),H=0;var rt=l.neg(j.solve22(ot));y.subMul(L,rt),_-=O*l.crossVec2Vec2(R,rt),$.addMul(F,rt),k+=V*l.crossVec2Vec2(D,rt)}else{var ot=l.zero();ot.addCombine(1,$,1,D),ot.subCombine(1,y,1,R);var ft=k-_-this.m_referenceAngle;W=ot.length(),H=d.abs(ft);var mt=new Zt(ot.x,ot.y,ft),xt=new Zt;if(j.ez.z>0)xt=Zt.neg(j.solve33(mt));else{var _t=l.neg(j.solve22(ot));xt.set(_t.x,_t.y,0)}var rt=l.neo(xt.x,xt.y);y.subMul(L,rt),_-=O*(l.crossVec2Vec2(R,rt)+xt.z),$.addMul(F,rt),k+=V*(l.crossVec2Vec2(D,rt)+xt.z)}return this.m_bodyA.c_position.c=y,this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c=$,this.m_bodyB.c_position.a=k,W<=m.linearSlop&&H<=m.angularSlop},h.TYPE="weld-joint",h}(Me),lw={enableMotor:!1,maxMotorTorque:0,motorSpeed:0,frequencyHz:2,dampingRatio:.7},gh=function(g){o(h,g);function h(p,y,_,$,k){var S=this;return S instanceof h?(p=i(p,lw),S=g.call(this,p,y,_)||this,S.m_ax=l.zero(),S.m_ay=l.zero(),y=S.m_bodyA,_=S.m_bodyB,S.m_type=h.TYPE,S.m_localAnchorA=l.clone($?y.getLocalPoint($):p.localAnchorA||l.zero()),S.m_localAnchorB=l.clone($?_.getLocalPoint($):p.localAnchorB||l.zero()),S.m_localXAxisA=l.clone(k?y.getLocalVector(k):p.localAxisA||p.localAxis||l.neo(1,0)),S.m_localYAxisA=l.crossNumVec2(1,S.m_localXAxisA),S.m_mass=0,S.m_impulse=0,S.m_motorMass=0,S.m_motorImpulse=0,S.m_springMass=0,S.m_springImpulse=0,S.m_maxMotorTorque=p.maxMotorTorque,S.m_motorSpeed=p.motorSpeed,S.m_enableMotor=p.enableMotor,S.m_frequencyHz=p.frequencyHz,S.m_dampingRatio=p.dampingRatio,S.m_bias=0,S.m_gamma=0,S):new h(p,y,_,$,k)}return h.prototype._serialize=function(){return{type:this.m_type,bodyA:this.m_bodyA,bodyB:this.m_bodyB,collideConnected:this.m_collideConnected,enableMotor:this.m_enableMotor,maxMotorTorque:this.m_maxMotorTorque,motorSpeed:this.m_motorSpeed,frequencyHz:this.m_frequencyHz,dampingRatio:this.m_dampingRatio,localAnchorA:this.m_localAnchorA,localAnchorB:this.m_localAnchorB,localAxisA:this.m_localXAxisA}},h._deserialize=function(p,y,_){p=r({},p),p.bodyA=_(Z,p.bodyA,y),p.bodyB=_(Z,p.bodyB,y);var $=new h(p);return $},h.prototype._setAnchors=function(p){p.anchorA?this.m_localAnchorA.setVec2(this.m_bodyA.getLocalPoint(p.anchorA)):p.localAnchorA&&this.m_localAnchorA.setVec2(p.localAnchorA),p.anchorB?this.m_localAnchorB.setVec2(this.m_bodyB.getLocalPoint(p.anchorB)):p.localAnchorB&&this.m_localAnchorB.setVec2(p.localAnchorB),p.localAxisA&&(this.m_localXAxisA.setVec2(p.localAxisA),this.m_localYAxisA.setVec2(l.crossNumVec2(1,p.localAxisA)))},h.prototype.getLocalAnchorA=function(){return this.m_localAnchorA},h.prototype.getLocalAnchorB=function(){return this.m_localAnchorB},h.prototype.getLocalAxisA=function(){return this.m_localXAxisA},h.prototype.getJointTranslation=function(){var p=this.m_bodyA,y=this.m_bodyB,_=p.getWorldPoint(this.m_localAnchorA),$=y.getWorldPoint(this.m_localAnchorB),k=l.sub($,_),S=p.getWorldVector(this.m_localXAxisA),T=l.dot(k,S);return T},h.prototype.getJointSpeed=function(){var p=this.m_bodyA.m_angularVelocity,y=this.m_bodyB.m_angularVelocity;return y-p},h.prototype.isMotorEnabled=function(){return this.m_enableMotor},h.prototype.enableMotor=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_enableMotor=p},h.prototype.setMotorSpeed=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_motorSpeed=p},h.prototype.getMotorSpeed=function(){return this.m_motorSpeed},h.prototype.setMaxMotorTorque=function(p){this.m_bodyA.setAwake(!0),this.m_bodyB.setAwake(!0),this.m_maxMotorTorque=p},h.prototype.getMaxMotorTorque=function(){return this.m_maxMotorTorque},h.prototype.getMotorTorque=function(p){return p*this.m_motorImpulse},h.prototype.setSpringFrequencyHz=function(p){this.m_frequencyHz=p},h.prototype.getSpringFrequencyHz=function(){return this.m_frequencyHz},h.prototype.setSpringDampingRatio=function(p){this.m_dampingRatio=p},h.prototype.getSpringDampingRatio=function(){return this.m_dampingRatio},h.prototype.getAnchorA=function(){return this.m_bodyA.getWorldPoint(this.m_localAnchorA)},h.prototype.getAnchorB=function(){return this.m_bodyB.getWorldPoint(this.m_localAnchorB)},h.prototype.getReactionForce=function(p){return l.combine(this.m_impulse,this.m_ay,this.m_springImpulse,this.m_ax).mul(p)},h.prototype.getReactionTorque=function(p){return p*this.m_motorImpulse},h.prototype.initVelocityConstraints=function(p){this.m_localCenterA=this.m_bodyA.m_sweep.localCenter,this.m_localCenterB=this.m_bodyB.m_sweep.localCenter,this.m_invMassA=this.m_bodyA.m_invMass,this.m_invMassB=this.m_bodyB.m_invMass,this.m_invIA=this.m_bodyA.m_invI,this.m_invIB=this.m_bodyB.m_invI;var y=this.m_invMassA,_=this.m_invMassB,$=this.m_invIA,k=this.m_invIB,S=this.m_bodyA.c_position.c,T=this.m_bodyA.c_position.a,L=this.m_bodyA.c_velocity.v,F=this.m_bodyA.c_velocity.w,O=this.m_bodyB.c_position.c,V=this.m_bodyB.c_position.a,R=this.m_bodyB.c_velocity.v,D=this.m_bodyB.c_velocity.w,W=C.neo(T),H=C.neo(V),j=C.mulVec2(W,l.sub(this.m_localAnchorA,this.m_localCenterA)),ot=C.mulVec2(H,l.sub(this.m_localAnchorB,this.m_localCenterB)),rt=l.zero();if(rt.addCombine(1,O,1,ot),rt.subCombine(1,S,1,j),this.m_ay=C.mulVec2(W,this.m_localYAxisA),this.m_sAy=l.crossVec2Vec2(l.add(rt,j),this.m_ay),this.m_sBy=l.crossVec2Vec2(ot,this.m_ay),this.m_mass=y+_+$*this.m_sAy*this.m_sAy+k*this.m_sBy*this.m_sBy,this.m_mass>0&&(this.m_mass=1/this.m_mass),this.m_springMass=0,this.m_bias=0,this.m_gamma=0,this.m_frequencyHz>0){this.m_ax=C.mulVec2(W,this.m_localXAxisA),this.m_sAx=l.crossVec2Vec2(l.add(rt,j),this.m_ax),this.m_sBx=l.crossVec2Vec2(ot,this.m_ax);var ft=y+_+$*this.m_sAx*this.m_sAx+k*this.m_sBx*this.m_sBx;if(ft>0){this.m_springMass=1/ft;var mt=l.dot(rt,this.m_ax),xt=2*d.PI*this.m_frequencyHz,_t=2*this.m_springMass*this.m_dampingRatio*xt,It=this.m_springMass*xt*xt,Nt=p.dt;this.m_gamma=Nt*(_t+Nt*It),this.m_gamma>0&&(this.m_gamma=1/this.m_gamma),this.m_bias=mt*Nt*It*this.m_gamma,this.m_springMass=ft+this.m_gamma,this.m_springMass>0&&(this.m_springMass=1/this.m_springMass)}}else this.m_springImpulse=0;if(this.m_enableMotor?(this.m_motorMass=$+k,this.m_motorMass>0&&(this.m_motorMass=1/this.m_motorMass)):(this.m_motorMass=0,this.m_motorImpulse=0),p.warmStarting){this.m_impulse*=p.dtRatio,this.m_springImpulse*=p.dtRatio,this.m_motorImpulse*=p.dtRatio;var Pt=l.combine(this.m_impulse,this.m_ay,this.m_springImpulse,this.m_ax),kt=this.m_impulse*this.m_sAy+this.m_springImpulse*this.m_sAx+this.m_motorImpulse,wt=this.m_impulse*this.m_sBy+this.m_springImpulse*this.m_sBx+this.m_motorImpulse;L.subMul(this.m_invMassA,Pt),F-=this.m_invIA*kt,R.addMul(this.m_invMassB,Pt),D+=this.m_invIB*wt}else this.m_impulse=0,this.m_springImpulse=0,this.m_motorImpulse=0;this.m_bodyA.c_velocity.v.setVec2(L),this.m_bodyA.c_velocity.w=F,this.m_bodyB.c_velocity.v.setVec2(R),this.m_bodyB.c_velocity.w=D},h.prototype.solveVelocityConstraints=function(p){var y=this.m_invMassA,_=this.m_invMassB,$=this.m_invIA,k=this.m_invIB,S=this.m_bodyA.c_velocity.v,T=this.m_bodyA.c_velocity.w,L=this.m_bodyB.c_velocity.v,F=this.m_bodyB.c_velocity.w;{var O=l.dot(this.m_ax,L)-l.dot(this.m_ax,S)+this.m_sBx*F-this.m_sAx*T,V=-this.m_springMass*(O+this.m_bias+this.m_gamma*this.m_springImpulse);this.m_springImpulse+=V;var R=l.mulNumVec2(V,this.m_ax),D=V*this.m_sAx,W=V*this.m_sBx;S.subMul(y,R),T-=$*D,L.addMul(_,R),F+=k*W}{var O=F-T-this.m_motorSpeed,V=-this.m_motorMass*O,H=this.m_motorImpulse,j=p.dt*this.m_maxMotorTorque;this.m_motorImpulse=d.clamp(this.m_motorImpulse+V,-j,j),V=this.m_motorImpulse-H,T-=$*V,F+=k*V}{var O=l.dot(this.m_ay,L)-l.dot(this.m_ay,S)+this.m_sBy*F-this.m_sAy*T,V=-this.m_mass*O;this.m_impulse+=V;var R=l.mulNumVec2(V,this.m_ay),D=V*this.m_sAy,W=V*this.m_sBy;S.subMul(y,R),T-=$*D,L.addMul(_,R),F+=k*W}this.m_bodyA.c_velocity.v.setVec2(S),this.m_bodyA.c_velocity.w=T,this.m_bodyB.c_velocity.v.setVec2(L),this.m_bodyB.c_velocity.w=F},h.prototype.solvePositionConstraints=function(p){var y=this.m_bodyA.c_position.c,_=this.m_bodyA.c_position.a,$=this.m_bodyB.c_position.c,k=this.m_bodyB.c_position.a,S=C.neo(_),T=C.neo(k),L=C.mulVec2(S,l.sub(this.m_localAnchorA,this.m_localCenterA)),F=C.mulVec2(T,l.sub(this.m_localAnchorB,this.m_localCenterB)),O=l.zero();O.addCombine(1,$,1,F),O.subCombine(1,y,1,L);var V=C.mulVec2(S,this.m_localYAxisA),R=l.crossVec2Vec2(l.add(O,L),V),D=l.crossVec2Vec2(F,V),W=l.dot(O,V),H=this.m_invMassA+this.m_invMassB+this.m_invIA*this.m_sAy*this.m_sAy+this.m_invIB*this.m_sBy*this.m_sBy,j;H!=0?j=-W/H:j=0;var ot=l.mulNumVec2(j,V),rt=j*R,ft=j*D;return y.subMul(this.m_invMassA,ot),_-=this.m_invIA*rt,$.addMul(this.m_invMassB,ot),k+=this.m_invIB*ft,this.m_bodyA.c_position.c.setVec2(y),this.m_bodyA.c_position.a=_,this.m_bodyB.c_position.c.setVec2($),this.m_bodyB.c_position.a=k,d.abs(W)<=m.linearSlop},h.TYPE="wheel-joint",h}(Me),uw=0;function Sc(g){var h;g=g||{};var p=g.rootClass||sh,y=g.preSerialize||function(F){return F},_=g.postSerialize||function(F,O){return F},$=g.preDeserialize||function(F){return F},k=g.postDeserialize||function(F,O){return F},S={World:sh,Body:Z,Joint:Me,Fixture:q,Shape:M},T=r({Vec2:l,Vec3:Zt},S),L=(h={},h[Z.STATIC]=Z,h[Z.DYNAMIC]=Z,h[Z.KINEMATIC]=Z,h[Di.TYPE]=Di,h[oh.TYPE]=oh,h[so.TYPE]=so,h[oo.TYPE]=oo,h[Co.TYPE]=Co,h[rh.TYPE]=rh,h[ih.TYPE]=ih,h[uh.TYPE]=uh,h[hh.TYPE]=hh,h[dh.TYPE]=dh,h[lh.TYPE]=lh,h[ph.TYPE]=ph,h[io.TYPE]=io,h[fh.TYPE]=fh,h[mh.TYPE]=mh,h[gh.TYPE]=gh,h);this.toJson=function(F){var O=[],V=[F],R={};function D(rt,ft){if(rt.__sid=rt.__sid||++uw,!R[rt.__sid]){V.push(rt);var mt=O.length+V.length,xt={refIndex:mt,refType:ft};R[rt.__sid]=xt}return R[rt.__sid]}function W(rt){rt=y(rt);var ft=rt._serialize();return ft=_(ft,rt),ft}function H(rt,ft){if(typeof rt!="object"||rt===null)return rt;if(typeof rt._serialize=="function"){if(rt!==ft){for(var mt in S)if(rt instanceof S[mt])return D(rt,mt)}rt=W(rt)}if(Array.isArray(rt)){for(var xt=[],_t=0;_t<rt.length;_t++)xt[_t]=H(rt[_t]);rt=xt}else{var xt={};for(var _t in rt)rt.hasOwnProperty(_t)&&(xt[_t]=H(rt[_t]));rt=xt}return rt}for(;V.length;){var j=V.shift(),ot=H(j,j);O.push(ot)}return O},this.fromJson=function(F){var O={};function V(H,j){return(!j||!j._deserialize)&&(j=L[H.type]),j&&j._deserialize}function R(H,j,ot){var rt=V(j,H);if(!!rt){j=$(j);var ft=rt(j,ot,D);return ft=k(ft,j),ft}}function D(H,j,ot){if(!j.refIndex)return H&&H._deserialize&&R(H,j,ot);H=T[j.refType]||H;var rt=j.refIndex;if(!O[rt]){var ft=F[rt],mt=R(H,ft,ot);O[rt]=mt}return O[rt]}var W=p._deserialize(F[0],null,D);return W}}var $m=new Sc;Sc.toJson=$m.toJson,Sc.fromJson=$m.fromJson,We.addType(Co.TYPE,Co.TYPE,hw);function hw(g,h,p,y,_,$,k){Sm(g,p.getShape(),h,$.getShape(),_)}function Sm(g,h,p,y,_){g.pointCount=0;var $=I.mulVec2(p,h.m_p),k=I.mulVec2(_,y.m_p),S=l.distanceSquared(k,$),T=h.m_radius,L=y.m_radius,F=T+L;S>F*F||(g.type=ct.e_circles,g.localPoint.setVec2(h.m_p),g.localNormal.setZero(),g.pointCount=1,g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex)}We.addType(so.TYPE,Co.TYPE,dw),We.addType(Di.TYPE,Co.TYPE,pw);function dw(g,h,p,y,_,$,k){var S=p.getShape(),T=$.getShape();xh(g,S,h,T,_)}function pw(g,h,p,y,_,$,k){var S=p.getShape(),T=new so;S.getChildEdge(T,y);var L=T,F=$.getShape();xh(g,L,h,F,_)}function xh(g,h,p,y,_){g.pointCount=0;var $=I.mulTVec2(p,I.mulVec2(_,y.m_p)),k=h.m_vertex1,S=h.m_vertex2,T=l.sub(S,k),L=l.dot(T,l.sub(S,$)),F=l.dot(T,l.sub($,k)),O=h.m_radius+y.m_radius;if(F<=0){var V=l.clone(k),R=l.sub($,V),D=l.dot(R,R);if(D>O*O)return;if(h.m_hasVertex0){var W=h.m_vertex0,H=k,j=l.sub(H,W),ot=l.dot(j,l.sub(H,$));if(ot>0)return}g.type=ct.e_circles,g.localNormal.setZero(),g.localPoint.setVec2(V),g.pointCount=1,g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex;return}if(L<=0){var rt=l.clone(S),ft=l.sub($,rt),mt=l.dot(ft,ft);if(mt>O*O)return;if(h.m_hasVertex3){var xt=h.m_vertex3,_t=S,It=l.sub(xt,_t),Nt=l.dot(It,l.sub($,_t));if(Nt>0)return}g.type=ct.e_circles,g.localNormal.setZero(),g.localPoint.setVec2(rt),g.pointCount=1,g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=1,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex;return}var Pt=l.dot(T,T),kt=l.combine(L/Pt,k,F/Pt,S),wt=l.sub($,kt),Xt=l.dot(wt,wt);if(!(Xt>O*O)){var jt=l.neo(-T.y,T.x);l.dot(jt,l.sub($,k))<0&&jt.setNum(-jt.x,-jt.y),jt.normalize(),g.type=ct.e_faceA,g.localNormal=jt,g.localPoint.setVec2(k),g.pointCount=1,g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_face,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex}}We.addType(oo.TYPE,oo.TYPE,fw);function fw(g,h,p,y,_,$,k){yh(g,p.getShape(),h,$.getShape(),_)}function Nm(g,h,p,y,_){for(var $=g.m_count,k=p.m_count,S=g.m_normals,T=g.m_vertices,L=p.m_vertices,F=I.mulTXf(y,h),O=0,V=-1/0,R=0;R<$;++R){for(var D=C.mulVec2(F.q,S[R]),W=I.mulVec2(F,T[R]),H=1/0,j=0;j<k;++j){var ot=l.dot(D,L[j])-l.dot(D,W);ot<H&&(H=ot)}H>V&&(V=H,O=R)}_.maxSeparation=V,_.bestIndex=O}function mw(g,h,p,y,_,$){for(var k=h.m_normals,S=_.m_count,T=_.m_vertices,L=_.m_normals,F=C.mulTVec2($.q,C.mulVec2(p.q,k[y])),O=0,V=1/0,R=0;R<S;++R){var D=l.dot(F,L[R]);D<V&&(V=D,O=R)}var W=O,H=W+1<S?W+1:0;g[0].v=I.mulVec2($,T[W]),g[0].id.cf.indexA=y,g[0].id.cf.indexB=W,g[0].id.cf.typeA=ut.e_face,g[0].id.cf.typeB=ut.e_vertex,g[1].v=I.mulVec2($,T[H]),g[1].id.cf.indexA=y,g[1].id.cf.indexB=H,g[1].id.cf.typeA=ut.e_face,g[1].id.cf.typeB=ut.e_vertex}var Fr={maxSeparation:0,bestIndex:0};function yh(g,h,p,y,_){g.pointCount=0;var $=h.m_radius+y.m_radius;Nm(h,p,y,_,Fr);var k=Fr.bestIndex,S=Fr.maxSeparation;if(!(S>$)){Nm(y,_,h,p,Fr);var T=Fr.bestIndex,L=Fr.maxSeparation;if(!(L>$)){var F,O,V,R,D,W,H=.1*m.linearSlop;L>S+H?(F=y,O=h,V=_,R=p,D=T,g.type=ct.e_faceB,W=1):(F=h,O=y,V=p,R=_,D=k,g.type=ct.e_faceA,W=0);var j=[new vt,new vt];mw(j,F,V,D,O,R);var ot=F.m_count,rt=F.m_vertices,ft=D,mt=D+1<ot?D+1:0,xt=rt[ft],_t=rt[mt],It=l.sub(_t,xt);It.normalize();var Nt=l.crossVec2Num(It,1),Pt=l.combine(.5,xt,.5,_t),kt=C.mulVec2(V.q,It),wt=l.crossVec2Num(kt,1);xt=I.mulVec2(V,xt),_t=I.mulVec2(V,_t);var Xt=l.dot(wt,xt),jt=-l.dot(kt,xt)+$,Qt=l.dot(kt,_t)+$,be=[new vt,new vt],$e=[new vt,new vt],xe;if(xe=Ot(be,j,l.neg(kt),jt,ft),!(xe<2)&&(xe=Ot($e,be,kt,Qt,mt),!(xe<2))){g.localNormal=Nt,g.localPoint=Pt;for(var qt=0,Kt=0;Kt<$e.length;++Kt){var Jt=l.dot(wt,$e[Kt].v)-Xt;if(Jt<=$){var Wt=g.points[qt];if(Wt.localPoint.setVec2(I.mulTVec2(R,$e[Kt].v)),Wt.id=$e[Kt].id,W){var tn=Wt.id.cf,Kn=tn.indexA,As=tn.indexB,_n=tn.typeA,Io=tn.typeB;tn.indexA=As,tn.indexB=Kn,tn.typeA=Io,tn.typeB=_n}++qt}}g.pointCount=qt}}}}We.addType(oo.TYPE,Co.TYPE,gw);function gw(g,h,p,y,_,$,k){Tm(g,p.getShape(),h,$.getShape(),_)}function Tm(g,h,p,y,_){g.pointCount=0;for(var $=I.mulVec2(_,y.m_p),k=I.mulTVec2(p,$),S=0,T=-1/0,L=h.m_radius+y.m_radius,F=h.m_count,O=h.m_vertices,V=h.m_normals,R=0;R<F;++R){var D=l.dot(V[R],l.sub(k,O[R]));if(D>L)return;D>T&&(T=D,S=R)}var W=S,H=W+1<F?W+1:0,j=O[W],ot=O[H];if(T<d.EPSILON){g.pointCount=1,g.type=ct.e_faceA,g.localNormal.setVec2(V[S]),g.localPoint.setCombine(.5,j,.5,ot),g.points[0].localPoint=y.m_p,g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex;return}var rt=l.dot(l.sub(k,j),l.sub(ot,j)),ft=l.dot(l.sub(k,ot),l.sub(j,ot));if(rt<=0){if(l.distanceSquared(k,j)>L*L)return;g.pointCount=1,g.type=ct.e_faceA,g.localNormal.setCombine(1,k,-1,j),g.localNormal.normalize(),g.localPoint=j,g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex}else if(ft<=0){if(l.distanceSquared(k,ot)>L*L)return;g.pointCount=1,g.type=ct.e_faceA,g.localNormal.setCombine(1,k,-1,ot),g.localNormal.normalize(),g.localPoint.setVec2(ot),g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex}else{var mt=l.mid(j,ot),xt=l.dot(k,V[W])-l.dot(mt,V[W]);if(xt>L)return;g.pointCount=1,g.type=ct.e_faceA,g.localNormal.setVec2(V[W]),g.localPoint.setVec2(mt),g.points[0].localPoint.setVec2(y.m_p),g.points[0].id.cf.indexA=0,g.points[0].id.cf.typeA=ut.e_vertex,g.points[0].id.cf.indexB=0,g.points[0].id.cf.typeB=ut.e_vertex}}We.addType(so.TYPE,oo.TYPE,xw),We.addType(Di.TYPE,oo.TYPE,yw);function xw(g,h,p,y,_,$,k){vh(g,p.getShape(),h,$.getShape(),_)}function yw(g,h,p,y,_,$,k){var S=p.getShape(),T=new so;S.getChildEdge(T,y),vh(g,T,h,$.getShape(),_)}var rs;(function(g){g[g.e_unknown=-1]="e_unknown",g[g.e_edgeA=1]="e_edgeA",g[g.e_edgeB=2]="e_edgeB"})(rs||(rs={}));var Em;(function(g){g[g.e_isolated=0]="e_isolated",g[g.e_concave=1]="e_concave",g[g.e_convex=2]="e_convex"})(Em||(Em={}));var Rm=function(){function g(){}return g}(),vw=function(){function g(){this.vertices=[],this.normals=[],this.count=0}return g}(),_w=function(){function g(){this.normal=l.zero(),this.sideNormal1=l.zero(),this.sideNormal2=l.zero()}return g}(),Ws=new Rm,En=new Rm,an=new vw,ne=new _w;function vh(g,h,p,y,_){var $=I.mulTXf(p,_),k=I.mulVec2($,y.m_centroid),S=h.m_vertex0,T=h.m_vertex1,L=h.m_vertex2,F=h.m_vertex3,O=h.m_hasVertex0,V=h.m_hasVertex3,R=l.sub(L,T);R.normalize();var D=l.neo(R.y,-R.x),W=l.dot(D,l.sub(k,T)),H=0,j=0,ot=!1,rt=!1,ft,mt;if(O){var xt=l.sub(T,S);xt.normalize(),ft=l.neo(xt.y,-xt.x),ot=l.crossVec2Vec2(xt,R)>=0,H=l.dot(ft,k)-l.dot(ft,S)}if(V){var _t=l.sub(F,L);_t.normalize(),mt=l.neo(_t.y,-_t.x),rt=l.crossVec2Vec2(R,_t)>0,j=l.dot(mt,k)-l.dot(mt,L)}var It,Nt=l.zero(),Pt=l.zero(),kt=l.zero();O&&V?ot&&rt?(It=H>=0||W>=0||j>=0,It?(Nt.setVec2(D),Pt.setVec2(ft),kt.setVec2(mt)):(Nt.setMul(-1,D),Pt.setMul(-1,D),kt.setMul(-1,D))):ot?(It=H>=0||W>=0&&j>=0,It?(Nt.setVec2(D),Pt.setVec2(ft),kt.setVec2(D)):(Nt.setMul(-1,D),Pt.setMul(-1,mt),kt.setMul(-1,D))):rt?(It=j>=0||H>=0&&W>=0,It?(Nt.setVec2(D),Pt.setVec2(D),kt.setVec2(mt)):(Nt.setMul(-1,D),Pt.setMul(-1,D),kt.setMul(-1,ft))):(It=H>=0&&W>=0&&j>=0,It?(Nt.setVec2(D),Pt.setVec2(D),kt.setVec2(D)):(Nt.setMul(-1,D),Pt.setMul(-1,mt),kt.setMul(-1,ft))):O?ot?(It=H>=0||W>=0,It?(Nt.setVec2(D),Pt.setVec2(ft),kt.setMul(-1,D)):(Nt.setMul(-1,D),Pt.setVec2(D),kt.setMul(-1,D))):(It=H>=0&&W>=0,It?(Nt.setVec2(D),Pt.setVec2(D),kt.setMul(-1,D)):(Nt.setMul(-1,D),Pt.setVec2(D),kt.setMul(-1,ft))):V?rt?(It=W>=0||j>=0,It?(Nt.setVec2(D),Pt.setMul(-1,D),kt.setVec2(mt)):(Nt.setMul(-1,D),Pt.setMul(-1,D),kt.setVec2(D))):(It=W>=0&&j>=0,It?(Nt.setVec2(D),Pt.setMul(-1,D),kt.setVec2(D)):(Nt.setMul(-1,D),Pt.setMul(-1,mt),kt.setVec2(D))):(It=W>=0,It?(Nt.setVec2(D),Pt.setMul(-1,D),kt.setMul(-1,D)):(Nt.setMul(-1,D),Pt.setVec2(D),kt.setVec2(D))),an.count=y.m_count;for(var wt=0;wt<y.m_count;++wt)an.vertices[wt]=I.mulVec2($,y.m_vertices[wt]),an.normals[wt]=C.mulVec2($.q,y.m_normals[wt]);var Xt=2*m.polygonRadius;g.pointCount=0;{Ws.type=rs.e_edgeA,Ws.index=It?0:1,Ws.separation=1/0;for(var wt=0;wt<an.count;++wt){var jt=l.dot(Nt,l.sub(an.vertices[wt],T));jt<Ws.separation&&(Ws.separation=jt)}}if(Ws.type!=rs.e_unknown&&!(Ws.separation>Xt)){{En.type=rs.e_unknown,En.index=-1,En.separation=-1/0;for(var Qt=l.neo(-Nt.y,Nt.x),wt=0;wt<an.count;++wt){var be=l.neg(an.normals[wt]),$e=l.dot(be,l.sub(an.vertices[wt],T)),xe=l.dot(be,l.sub(an.vertices[wt],L)),jt=d.min($e,xe);if(jt>Xt){En.type=rs.e_edgeB,En.index=wt,En.separation=jt;break}if(l.dot(be,Qt)>=0){if(l.dot(l.sub(be,kt),Nt)<-m.angularSlop)continue}else if(l.dot(l.sub(be,Pt),Nt)<-m.angularSlop)continue;jt>En.separation&&(En.type=rs.e_edgeB,En.index=wt,En.separation=jt)}}if(!(En.type!=rs.e_unknown&&En.separation>Xt)){var qt=.98,Kt=.001,Jt;En.type==rs.e_unknown?Jt=Ws:En.separation>qt*Ws.separation+Kt?Jt=En:Jt=Ws;var Wt=[new vt,new vt];if(Jt.type==rs.e_edgeA){g.type=ct.e_faceA;for(var tn=0,Kn=l.dot(Nt,an.normals[0]),wt=1;wt<an.count;++wt){var As=l.dot(Nt,an.normals[wt]);As<Kn&&(Kn=As,tn=wt)}var _n=tn,Io=_n+1<an.count?_n+1:0;Wt[0].v=an.vertices[_n],Wt[0].id.cf.indexA=0,Wt[0].id.cf.indexB=_n,Wt[0].id.cf.typeA=ut.e_face,Wt[0].id.cf.typeB=ut.e_vertex,Wt[1].v=an.vertices[Io],Wt[1].id.cf.indexA=0,Wt[1].id.cf.indexB=Io,Wt[1].id.cf.typeA=ut.e_face,Wt[1].id.cf.typeB=ut.e_vertex,It?(ne.i1=0,ne.i2=1,ne.v1=T,ne.v2=L,ne.normal.setVec2(D)):(ne.i1=1,ne.i2=0,ne.v1=L,ne.v2=T,ne.normal.setMul(-1,D))}else g.type=ct.e_faceB,Wt[0].v=T,Wt[0].id.cf.indexA=0,Wt[0].id.cf.indexB=Jt.index,Wt[0].id.cf.typeA=ut.e_vertex,Wt[0].id.cf.typeB=ut.e_face,Wt[1].v=L,Wt[1].id.cf.indexA=0,Wt[1].id.cf.indexB=Jt.index,Wt[1].id.cf.typeA=ut.e_vertex,Wt[1].id.cf.typeB=ut.e_face,ne.i1=Jt.index,ne.i2=ne.i1+1<an.count?ne.i1+1:0,ne.v1=an.vertices[ne.i1],ne.v2=an.vertices[ne.i2],ne.normal.setVec2(an.normals[ne.i1]);ne.sideNormal1.setNum(ne.normal.y,-ne.normal.x),ne.sideNormal2.setMul(-1,ne.sideNormal1),ne.sideOffset1=l.dot(ne.sideNormal1,ne.v1),ne.sideOffset2=l.dot(ne.sideNormal2,ne.v2);var Mr=[new vt,new vt],Xn=[new vt,new vt],co;if(co=Ot(Mr,Wt,ne.sideNormal1,ne.sideOffset1,ne.i1),!(co<m.maxManifoldPoints)&&(co=Ot(Xn,Mr,ne.sideNormal2,ne.sideOffset2,ne.i2),!(co<m.maxManifoldPoints))){Jt.type==rs.e_edgeA?(g.localNormal=l.clone(ne.normal),g.localPoint=l.clone(ne.v1)):(g.localNormal=l.clone(y.m_normals[ne.i1]),g.localPoint=l.clone(y.m_vertices[ne.i1]));for(var Vr=0,wt=0;wt<m.maxManifoldPoints;++wt){var Lr=l.dot(ne.normal,l.sub(Xn[wt].v,ne.v1));if(Lr<=Xt){var lo=g.points[Vr];Jt.type==rs.e_edgeA?(lo.localPoint=I.mulTVec2($,Xn[wt].v),lo.id=Xn[wt].id):(lo.localPoint=Xn[wt].v,lo.id.cf.typeA=Xn[wt].id.cf.typeB,lo.id.cf.typeB=Xn[wt].id.cf.typeA,lo.id.cf.indexA=Xn[wt].id.cf.indexB,lo.id.cf.indexB=Xn[wt].id.cf.indexA),++Vr}}g.pointCount=Vr}}}}var ao={};ao.CollidePolygons=yh,ao.Settings=m,ao.Sweep=N,ao.Manifold=Ct,ao.Distance=le,ao.TimeOfImpact=Os,ao.DynamicTree=b,ao.stats=Dt,Im.TimeStep=nh,le.testOverlap=Fe,le.Input=oe,le.Output=fe,le.Proxy=me,le.Cache=_e,Os.Input=Dr,Os.Output=Cc,e.AABB=f,e.Body=Z,e.Box=oh,e.Chain=Di,e.Circle=Co,e.CollideCircles=Sm,e.CollideEdgeCircle=xh,e.CollideEdgePolygon=vh,e.CollidePolygonCircle=Tm,e.CollidePolygons=yh,e.Contact=We,e.Distance=le,e.DistanceJoint=rh,e.DynamicTree=b,e.Edge=so,e.Fixture=q,e.FrictionJoint=ih,e.GearJoint=uh,e.Joint=Me,e.Manifold=Ct,e.Mat22=lt,e.Mat33=ro,e.Math=d,e.MotorJoint=hh,e.MouseJoint=dh,e.Polygon=oo,e.PrismaticJoint=lh,e.PulleyJoint=ph,e.RevoluteJoint=io,e.RopeJoint=fh,e.Rot=C,e.Serializer=Sc,e.Settings=m,e.Shape=M,e.Sweep=N,e.TimeOfImpact=Os,e.Transform=I,e.Vec2=l,e.Vec3=Zt,e.WeldJoint=mh,e.WheelJoint=gh,e.World=sh,e.internal=ao,Object.defineProperty(e,"__esModule",{value:!0})})})(ce,ce.exports);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw=1e-7,Ow=1e-4;class bx{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Dd{refCount(t){return Yn("refCount")}incRef(t){return Yn("incRef")}timerAvailable(){return!0}time(t){return Yn("time")}read(t){return Yn("read")}readSync(t){return Yn("readSync")}readToGPU(t,e){return Yn("readToGPU")}numDataIds(){return Yn("numDataIds")}disposeData(t,e){return Yn("disposeData")}write(t,e,s){return Yn("write")}move(t,e,s,o,r){return Yn("move")}memory(){return Yn("memory")}floatPrecision(){return Yn("floatPrecision")}epsilon(){return this.floatPrecision()===32?Pw:Ow}dispose(){return Yn("dispose")}}function Yn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ur(n,t,e)}function hr(n,t,e){return Math.max(n,Math.min(t,e))}function wx(n){return n%2===0?n:n+1}function Ur(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function Ww(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function P(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function vs(n,t,e=""){P(ve(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Cx(n){P(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ti(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||Zs(n)&&!e)for(let s=0;s<n.length;++s)ti(n[s],t,e);else t.push(n);return t}function pt(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function ve(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function ei(n){return n%1===0}function Ph(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Xr(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Mm(n,t=s=>0,e){return new Promise((s,o)=>{let r=0;const i=()=>{if(n()){s();return}r++;const c=t(r);if(e!=null&&r>=e){o();return}setTimeout(i,c)};i()})}function Ix(n,t){let e=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)e*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const o=n.slice();return o[s]=t/e,o}function ie(n,t){const e=t.length;return n=n==null?t.map((s,o)=>o):[].concat(n),P(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),P(n.every(s=>ei(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Po(n,t){const e=[],s=[],o=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||o?null:ie(t,n).sort();let i=0;for(let c=0;c<n.length;++c){if(r!=null){if(r[i]===c&&n[c]!==1)throw new Error(`Can't squeeze axis ${c} since its dim '${n[c]}' is not 1`);(r[i]==null||r[i]>c)&&n[c]===1&&(e.push(n[c]),s.push(c)),r[i]<=c&&i++}n[c]!==1&&(e.push(n[c]),s.push(c))}return{newShape:e,keptDims:s}}function gn(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Sn(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Uw(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Gw(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Ax(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Zs(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function Oh(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function qw(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function na(n){return typeof n=="string"||n instanceof String}function Hw(n){return typeof n=="boolean"}function zh(n){return typeof n=="number"}function sa(n){return Array.isArray(n)?sa(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":zh(n)?"float32":na(n)?"string":Hw(n)?"bool":"float32"}function Wh(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Uh(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Ut(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function kx(n,t,e,s=!1){const o=new Array;if(t.length===1){const r=t[0]*(s?2:1);for(let i=0;i<r;i++)o[i]=e[n+i]}else{const r=t[0],i=t.slice(1),c=i.reduce((a,u)=>a*u)*(s?2:1);for(let a=0;a<r;a++)o[a]=kx(n+a*c,i,e,s)}return o}function Es(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((o,r)=>o*r)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return kx(0,n,t,e)}function Bd(n,t){const e=Cn(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Cn(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function $x(n,t){const e=n.reduce((s,o)=>s*o,1);if(t==null||t==="float32")return Es(n,new Float32Array(e));if(t==="int32")return Es(n,new Int32Array(e));if(t==="bool")return Es(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Sx(n){n.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ks(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=e[o]*n[o];return s}function oa(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/e[o]),n-=s[o]*e[o];return s[s.length-1]=n,s}function Nx(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm="tfjsflags";class jw{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Kw,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const o=this.urlFlags[t];dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Nx(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Vm in t&&t[Vm].split(",").forEach(s=>{const[o,r]=s.split(":");this.urlFlags[o]=Yw(o,r)})}}function Kw(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(Xw(t,s[0],s[1]),s.join("="))),t}function Xw(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Yw(n,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}function dt(){return Tx}let Tx=null;function Jw(n){Tx=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _h;function Ex(){if(_h==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");_h=n}return _h}function Zw(){const n=Ex();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Fd(n,t){const e=Zw();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const vl="Abs",ra="Acos",ia="Acosh",xi="Add",Md="AddN",Vd="All",Ld="Any",_l="ArgMax",bl="ArgMin",aa="Asin",ca="Asinh",la="Atan",ua="Atanh",ha="Atan2",wl="AvgPool",Pd="AvgPoolGrad",Cl="AvgPool3D",Od="AvgPool3DGrad",Il="BatchMatMul",Al="BatchToSpaceND",zd="Bincount",Qw="BroadcastTo",Rx="BroadcastArgs",da="Cast",pa="Ceil",fa="ClipByValue",Wd="Complex",kl="ComplexAbs",$l="Concat",Sl="Conv2D",Ud="Conv2DBackpropFilter",Nl="Conv2DBackpropInput",Tl="Conv3D",Gd="Conv3DBackpropFilterV2",qd="Conv3DBackpropInputV2",ma="Cos",ga="Cosh",Hd="Cumprod",El="Cumsum",jd="CropAndResize",Dx="DenseBincount",Kd="DepthToSpace",Rl="DepthwiseConv2dNative",Xd="DepthwiseConv2dNativeBackpropFilter",Yd="DepthwiseConv2dNativeBackpropInput",Bx="Diag",Dl="Dilation2D",Gh="Dilation2DBackpropInput",qh="Dilation2DBackpropFilter",xa="RealDiv",Fx="Einsum",ya="Elu",Jd="EluGrad",va="Erf",Bl="Equal",_a="Exp",Fl="ExpandDims",ba="Expm1",Zd="FFT",Qd="Fill",tp="FlipLeftRight",wa="Floor",Ca="FloorDiv",Ml="FusedBatchNorm",Vl="GatherV2",Mx="GatherNd",Ll="Greater",Ia="GreaterEqual",Aa="Identity",ep="IFFT",np="Imag",ka="IsFinite",$a="IsInf",Sa="IsNan",Pl="LeakyRelu",Ol="Less",zl="LessEqual",Vx="LinSpace",Na="Log",Ta="Log1p",Wl="LogicalAnd",Ul="LogicalNot",Gl="LogicalOr",tC="LogSoftmax",ql="LRN",sp="LRNGrad",Hl="Max",Ea="Maximum",jl="MaxPool",op="MaxPoolGrad",Kl="MaxPool3D",rp="MaxPool3DGrad",Lx="MaxPoolWithArgmax",Xl="Mean",Yl="Min",Ra="Minimum",Jl="MirrorPad",Da="Mod",Px="Multinomial",Ba="Multiply",Zl="Neg",Ql="NotEqual",ip="NonMaxSuppressionV3",ap="NonMaxSuppressionV4",cp="NonMaxSuppressionV5",tu="OnesLike",eu="OneHot",nu="Pack",su="PadV2",Fa="Pow",ou="Prelu",ru="Prod",lp="Range",up="Real",Ma="Reciprocal",Va="Relu",iu="Reshape",au="ResizeNearestNeighbor",hp="ResizeNearestNeighborGrad",cu="ResizeBilinear",dp="ResizeBilinearGrad",La="Relu6",lu="Reverse",Pa="Round",Oa="Rsqrt",Ox="ScatterNd",zx="SearchSorted",uu="Select",za="Selu",hu="Slice",Wa="Sin",Ua="Sinh",Ga="Sign",qa="Sigmoid",Ha="Softplus",ja="Sqrt",du="Sum",pu="SpaceToBatchND",fu="SplitV",mu="Softmax",pp="SparseFillEmptyRows",fp="SparseReshape",mp="SparseSegmentMean",gp="SparseSegmentSum",Wx="SparseToDense",Ka="SquaredDifference",xp="Square",yp="StridedSlice",vp="StringNGrams",_p="StringSplit",bp="StringToHashBucketFast",Xa="Sub",Ya="Tan",Ja="Tanh",Za="Tile",wp="TopK",Cp="Transform",Yr="Transpose",Ip="Unique",gu="Unpack",xu="UnsortedSegmentSum",yu="ZerosLike",Qa="Step",eC="FromPixels",Ap="RotateWithOffset",jc="_FusedMatMul",Kc="FusedConv2D",Ux="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jn(...n){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(...n)}function nC(...n){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xc=Fd("kernelRegistry",()=>new Map),Hh=Fd("gradRegistry",()=>new Map);function Lm(n,t){const e=qx(n,t);return Xc.get(e)}function Pm(n){return Hh.get(n)}function Om(n){const t=Xc.entries(),e=[];for(;;){const{done:s,value:o}=t.next();if(s)break;const[r,i]=o,[c]=r.split("_");c===n&&e.push(i)}return e}function Gx(n){const{kernelName:t,backendName:e}=n,s=qx(t,e);Xc.has(s)&&Jn(`The kernel '${t}' for backend '${e}' is already registered`),Xc.set(s,n)}function sC(n){const{kernelName:t}=n;Hh.has(t)&&dt().getBool("DEBUG")&&Jn(`Overriding the gradient for '${t}'`),Hh.set(t,n)}function qx(n,t){return`${t}_${n}`}var jh=Re,us=null;try{us=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Re(n,t,e){this.low=n|0,this.high=t|0,this.unsigned=!!e}Re.prototype.__isLong__;Object.defineProperty(Re.prototype,"__isLong__",{value:!0});function jn(n){return(n&&n.__isLong__)===!0}Re.isLong=jn;var zm={},Wm={};function Ir(n,t){var e,s,o;return t?(n>>>=0,(o=0<=n&&n<256)&&(s=Wm[n],s)?s:(e=De(n,(n|0)<0?-1:0,!0),o&&(Wm[n]=e),e)):(n|=0,(o=-128<=n&&n<128)&&(s=zm[n],s)?s:(e=De(n,n<0?-1:0,!1),o&&(zm[n]=e),e))}Re.fromInt=Ir;function hs(n,t){if(isNaN(n))return t?or:ds;if(t){if(n<0)return or;if(n>=Hx)return Xx}else{if(n<=-Gm)return zn;if(n+1>=Gm)return Kx}return n<0?hs(-n,t).neg():De(n%ni|0,n/ni|0,t)}Re.fromNumber=hs;function De(n,t,e){return new Re(n,t,e)}Re.fromBits=De;var Yc=Math.pow;function kp(n,t,e){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return ds;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return kp(n.substring(1),t,e).neg();for(var o=hs(Yc(e,8)),r=ds,i=0;i<n.length;i+=8){var c=Math.min(8,n.length-i),a=parseInt(n.substring(i,i+c),e);if(c<8){var u=hs(Yc(e,c));r=r.mul(u).add(hs(a))}else r=r.mul(o),r=r.add(hs(a))}return r.unsigned=t,r}Re.fromString=kp;function Ms(n,t){return typeof n=="number"?hs(n,t):typeof n=="string"?kp(n,t):De(n.low,n.high,typeof t=="boolean"?t:n.unsigned)}Re.fromValue=Ms;var Um=1<<16,oC=1<<24,ni=Um*Um,Hx=ni*ni,Gm=Hx/2,qm=Ir(oC),ds=Ir(0);Re.ZERO=ds;var or=Ir(0,!0);Re.UZERO=or;var jr=Ir(1);Re.ONE=jr;var jx=Ir(1,!0);Re.UONE=jx;var Kh=Ir(-1);Re.NEG_ONE=Kh;var Kx=De(-1,2147483647,!1);Re.MAX_VALUE=Kx;var Xx=De(-1,-1,!0);Re.MAX_UNSIGNED_VALUE=Xx;var zn=De(0,-2147483648,!1);Re.MIN_VALUE=zn;var $t=Re.prototype;$t.toInt=function(){return this.unsigned?this.low>>>0:this.low};$t.toNumber=function(){return this.unsigned?(this.high>>>0)*ni+(this.low>>>0):this.high*ni+(this.low>>>0)};$t.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(zn)){var e=hs(t),s=this.div(e),o=s.mul(e).sub(this);return s.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=hs(Yc(t,6),this.unsigned),i=this,c="";;){var a=i.div(r),u=i.sub(a.mul(r)).toInt()>>>0,d=u.toString(t);if(i=a,i.isZero())return d+c;for(;d.length<6;)d="0"+d;c=""+d+c}};$t.getHighBits=function(){return this.high};$t.getHighBitsUnsigned=function(){return this.high>>>0};$t.getLowBits=function(){return this.low};$t.getLowBitsUnsigned=function(){return this.low>>>0};$t.getNumBitsAbs=function(){if(this.isNegative())return this.eq(zn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};$t.isZero=function(){return this.high===0&&this.low===0};$t.eqz=$t.isZero;$t.isNegative=function(){return!this.unsigned&&this.high<0};$t.isPositive=function(){return this.unsigned||this.high>=0};$t.isOdd=function(){return(this.low&1)===1};$t.isEven=function(){return(this.low&1)===0};$t.equals=function(t){return jn(t)||(t=Ms(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};$t.eq=$t.equals;$t.notEquals=function(t){return!this.eq(t)};$t.neq=$t.notEquals;$t.ne=$t.notEquals;$t.lessThan=function(t){return this.comp(t)<0};$t.lt=$t.lessThan;$t.lessThanOrEqual=function(t){return this.comp(t)<=0};$t.lte=$t.lessThanOrEqual;$t.le=$t.lessThanOrEqual;$t.greaterThan=function(t){return this.comp(t)>0};$t.gt=$t.greaterThan;$t.greaterThanOrEqual=function(t){return this.comp(t)>=0};$t.gte=$t.greaterThanOrEqual;$t.ge=$t.greaterThanOrEqual;$t.compare=function(t){if(jn(t)||(t=Ms(t)),this.eq(t))return 0;var e=this.isNegative(),s=t.isNegative();return e&&!s?-1:!e&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};$t.comp=$t.compare;$t.negate=function(){return!this.unsigned&&this.eq(zn)?zn:this.not().add(jr)};$t.neg=$t.negate;$t.add=function(t){jn(t)||(t=Ms(t));var e=this.high>>>16,s=this.high&65535,o=this.low>>>16,r=this.low&65535,i=t.high>>>16,c=t.high&65535,a=t.low>>>16,u=t.low&65535,d=0,l=0,f=0,m=0;return m+=r+u,f+=m>>>16,m&=65535,f+=o+a,l+=f>>>16,f&=65535,l+=s+c,d+=l>>>16,l&=65535,d+=e+i,d&=65535,De(f<<16|m,d<<16|l,this.unsigned)};$t.subtract=function(t){return jn(t)||(t=Ms(t)),this.add(t.neg())};$t.sub=$t.subtract;$t.multiply=function(t){if(this.isZero())return ds;if(jn(t)||(t=Ms(t)),us){var e=us.mul(this.low,this.high,t.low,t.high);return De(e,us.get_high(),this.unsigned)}if(t.isZero())return ds;if(this.eq(zn))return t.isOdd()?zn:ds;if(t.eq(zn))return this.isOdd()?zn:ds;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(qm)&&t.lt(qm))return hs(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,r=this.low>>>16,i=this.low&65535,c=t.high>>>16,a=t.high&65535,u=t.low>>>16,d=t.low&65535,l=0,f=0,m=0,x=0;return x+=i*d,m+=x>>>16,x&=65535,m+=r*d,f+=m>>>16,m&=65535,m+=i*u,f+=m>>>16,m&=65535,f+=o*d,l+=f>>>16,f&=65535,f+=r*u,l+=f>>>16,f&=65535,f+=i*a,l+=f>>>16,f&=65535,l+=s*d+o*u+r*a+i*c,l&=65535,De(m<<16|x,l<<16|f,this.unsigned)};$t.mul=$t.multiply;$t.divide=function(t){if(jn(t)||(t=Ms(t)),t.isZero())throw Error("division by zero");if(us){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?us.div_u:us.div_s)(this.low,this.high,t.low,t.high);return De(e,us.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?or:ds;var s,o,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return or;if(t.gt(this.shru(1)))return jx;r=or}else{if(this.eq(zn)){if(t.eq(jr)||t.eq(Kh))return zn;if(t.eq(zn))return jr;var i=this.shr(1);return s=i.div(t).shl(1),s.eq(ds)?t.isNegative()?jr:Kh:(o=this.sub(t.mul(s)),r=s.add(o.div(t)),r)}else if(t.eq(zn))return this.unsigned?or:ds;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=ds}for(o=this;o.gte(t);){s=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var c=Math.ceil(Math.log(s)/Math.LN2),a=c<=48?1:Yc(2,c-48),u=hs(s),d=u.mul(t);d.isNegative()||d.gt(o);)s-=a,u=hs(s,this.unsigned),d=u.mul(t);u.isZero()&&(u=jr),r=r.add(u),o=o.sub(d)}return r};$t.div=$t.divide;$t.modulo=function(t){if(jn(t)||(t=Ms(t)),us){var e=(this.unsigned?us.rem_u:us.rem_s)(this.low,this.high,t.low,t.high);return De(e,us.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};$t.mod=$t.modulo;$t.rem=$t.modulo;$t.not=function(){return De(~this.low,~this.high,this.unsigned)};$t.and=function(t){return jn(t)||(t=Ms(t)),De(this.low&t.low,this.high&t.high,this.unsigned)};$t.or=function(t){return jn(t)||(t=Ms(t)),De(this.low|t.low,this.high|t.high,this.unsigned)};$t.xor=function(t){return jn(t)||(t=Ms(t)),De(this.low^t.low,this.high^t.high,this.unsigned)};$t.shiftLeft=function(t){return jn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?De(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):De(0,this.low<<t-32,this.unsigned)};$t.shl=$t.shiftLeft;$t.shiftRight=function(t){return jn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?De(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):De(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};$t.shr=$t.shiftRight;$t.shiftRightUnsigned=function(t){if(jn(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var s=this.low;return De(s>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?De(e,0,this.unsigned):De(e>>>t-32,0,this.unsigned)};$t.shru=$t.shiftRightUnsigned;$t.shr_u=$t.shiftRightUnsigned;$t.toSigned=function(){return this.unsigned?De(this.low,this.high,!1):this};$t.toUnsigned=function(){return this.unsigned?this:De(this.low,this.high,!0)};$t.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};$t.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};$t.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Re.fromBytes=function(t,e,s){return s?Re.fromBytesLE(t,e):Re.fromBytesBE(t,e)};Re.fromBytesLE=function(t,e){return new Re(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Re.fromBytesBE=function(t,e){return new Re(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};var rC=bw({__proto__:null,default:jh},[jh]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er=jh||rC;function vu(n){return er.fromString(n,!0,16)}const Yx=vu("c3a5c85c97cb3127"),Zo=vu("b492b66fbe98f273"),kn=vu("9ae16a3b2f90404f");function Xh(n){return n.xor(n.shru(47))}function Jx(n,t,e){const s=n.slice(t,t+e);return er.fromBytes(Array.from(s),!0,!0)}function Se(n,t){return Jx(n,t,8)}function Hm(n,t){return Jx(n,t,4)}function un(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function No(n,t,e=vu("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let o=t.xor(s).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function iC(n,t,e,s,o,r){o=o.add(n),r=un(r.add(o).add(s),21);const i=o;return o=o.add(t),o=o.add(e),r=r.add(un(o,44)),[o.add(s),r.add(i)]}function Nc(n,t,e,s){return iC(Se(n,t),Se(n,t+8),Se(n,t+16),Se(n,t+24),e,s)}function aC(n,t=n.length){if(t>=8){const e=kn.add(t*2),s=Se(n,0).add(kn),o=Se(n,t-8),r=un(o,37).mul(e).add(s),i=un(s,25).add(o).mul(e);return No(r,i,e)}if(t>=4){const e=kn.add(t*2),s=Hm(n,0);return No(s.shl(3).add(t),Hm(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],o=n[t-1],r=e+(s<<8),i=t+(o<<2);return Xh(kn.mul(r).xor(Yx.mul(i))).mul(kn)}return kn}function cC(n,t=n.length){const e=kn.add(t*2),s=Se(n,0).mul(Zo),o=Se(n,8),r=Se(n,t-8).mul(e),i=Se(n,t-16).mul(kn);return No(un(s.add(o),43).add(un(r,30)).add(i),s.add(un(o.add(kn),18)).add(r),e)}function lC(n,t=n.length){const e=kn.add(t*2),s=Se(n,0).mul(kn),o=Se(n,8),r=Se(n,t-8).mul(e),i=Se(n,t-16).mul(kn),c=un(s.add(o),43).add(un(r,30)).add(i),a=No(c,s.add(un(o.add(kn),18)).add(r),e),u=Se(n,16).mul(e),d=Se(n,24),l=c.add(Se(n,t-32)).mul(e),f=a.add(Se(n,t-24)).mul(e);return No(un(u.add(d),43).add(un(l,30)).add(f),u.add(un(d.add(s),18)).add(l),e)}function uC(n,t=n.length){const e=er.fromNumber(81,!0);if(t<=32)return t<=16?aC(n,t):cC(n,t);if(t<=64)return lC(n,t);let s=e,o=e.mul(Zo).add(113),r=Xh(o.mul(kn).add(113)).mul(kn),i=[er.UZERO,er.UZERO],c=[er.UZERO,er.UZERO];s=s.mul(kn).add(Se(n,0));let a=0;const u=(t-1>>6)*64,d=u+(t-1&63)-63;do s=un(s.add(o).add(i[0]).add(Se(n,a+8)),37).mul(Zo),o=un(o.add(i[1]).add(Se(n,a+48)),42).mul(Zo),s=s.xor(c[1]),o=o.add(i[0]).add(Se(n,a+40)),r=un(r.add(c[0]),33).mul(Zo),i=Nc(n,a,i[1].mul(Zo),s.add(c[0])),c=Nc(n,a+32,r.add(c[1]),o.add(Se(n,a+16))),[r,s]=[s,r],a+=64;while(a!==u);const l=Zo.add(r.and(255).shl(1));return a=d,c[0]=c[0].add(t-1&63),i[0]=i[0].add(c[0]),c[0]=c[0].add(i[0]),s=un(s.add(o).add(i[0]).add(Se(n,a+8)),37).mul(l),o=un(o.add(i[1]).add(Se(n,a+48)),42).mul(l),s=s.xor(c[1].mul(9)),o=o.add(i[0].mul(9).add(Se(n,a+40))),r=un(r.add(c[0]),33).mul(l),i=Nc(n,a,i[1].mul(l),s.add(c[0])),c=Nc(n,a+32,r.add(c[1]),o.add(Se(n,a+16))),[r,s]=[s,r],No(No(i[0],c[0],l).add(Xh(o).mul(Yx)).add(r),No(i[1],c[1],l).add(s),l)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n,t){return t==="string"?To(n):Ar([n],t)}function hC(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Ar(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ti(n)),dt().getBool("DEBUG")&&Uw(n,t),hC(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Rn(){return dt().platform.now()}function To(n,t="utf-8"){return t=t||"utf-8",dt().platform.encode(n,t)}function Do(n,t="utf-8"){return t=t||"utf-8",dt().platform.decode(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dC{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new fC)}profileKernel(t,e,s){let o;const r=()=>{o=s()};let i;const c=Rn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const u of o)u.dataSync();i=Promise.resolve({kernelMs:Rn()-c})}if(dt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){const d=o[u];d.data().then(l=>{pC(l,d.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:o,inputs:r,extraInfo:i}=t;s.forEach(c=>{Promise.all([c.data(),o,i]).then(a=>{this.logger.logKernelProfile(e,c,a[0],a[1],r,a[2])})})}}function pC(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}class fC{logKernelProfile(t,e,s,o,r,i){const c=typeof o=="number"?Xr(`${o}ms`,9):o.error,a=Xr(t,25),u=e.rank,d=e.size,l=Xr(e.shape.toString(),14);let f="";for(const m in r){const x=r[m];if(x!=null){const v=x.shape||e.shape,b=v.length;f+=`${m}: ${b}D ${b>0?v:""} `}}console.log(`%c${a}	%c${c}	%c${u}D ${l}	%c${d}	%c${f}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n,t,e){const s={},o={};for(let a=0;a<t.length;a++)s[t[a].id]=!0;for(let a=0;a<n.length;a++){const u=n[a],d=u.inputs;for(const l in d){const f=d[l];let m=!1;for(let x=0;x<t.length;x++)if(s[f.id]){u.outputs.forEach(v=>s[v.id]=!0),m=!0,o[u.id]=!0;break}if(m)break}}const r={};r[e.id]=!0;const i={};for(let a=n.length-1;a>=0;a--){const u=n[a],d=u.inputs;for(let l=0;l<u.outputs.length;l++)if(r[u.outputs[l].id]){for(const f in d)r[d[f].id]=!0,i[u.id]=!0;break}}const c=[];for(let a=0;a<n.length;a++){const u=n[a];if(o[u.id]&&i[u.id]){const d={};for(const f in u.inputs){const m=u.inputs[f];s[m.id]&&(d[f]=m)}const l=Object.assign({},u);l.inputs=d,l.outputs=u.outputs,c.push(l)}}return c}function gC(n,t,e,s){for(let o=t.length-1;o>=0;o--){const r=t[o],i=[];if(r.outputs.forEach(a=>{const u=n[a.id];u!=null?i.push(u):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const c=r.gradient(i);for(const a in r.inputs){if(!(a in c))throw new Error(`Cannot backprop through input ${a}. Available gradients found: ${Object.keys(c)}.`);const u=e(()=>c[a]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${a} must have 'float32' dtype, but has '${u.dtype}'`);const d=r.inputs[a];if(!ve(u.shape,d.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${a}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=u;else{const l=n[d.id];n[d.id]=s(l,u),l.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jm=20,Fi=3,bh=7;function xC(n,t,e,s){const o=Ut(t),r=yC(n,t,e,o),i=t.length,c=zc(n,t,e,o,r),a=["Tensor"];return s&&(a.push(`  dtype: ${e}`),a.push(`  rank: ${i}`),a.push(`  shape: [${t}]`),a.push("  values:")),a.push(c.map(u=>"    "+u).join(`
`)),a.join(`
`)}function yC(n,t,e,s){const o=pt(t),r=s[s.length-1],i=new Array(r).fill(0),c=t.length,a=e==="complex64"?Li(n):n;if(c>1)for(let u=0;u<o/r;u++){const d=u*r;for(let l=0;l<r;l++)i[l]=Math.max(i[l],Vi(a[d+l],0,e).length)}return i}function Vi(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(bh))} + ${parseFloat(n[1].toFixed(bh))}j`:na(n)?s=`'${n}'`:e==="bool"?s=Zx(n):s=parseFloat(n.toFixed(bh)).toString(),Xr(s,t)}function Zx(n){return n===0?"false":"true"}function zc(n,t,e,s,o,r=!0){const i=e==="complex64"?2:1,c=t[0],a=t.length;if(a===0){if(e==="complex64"){const v=Li(n);return[Vi(v[0],0,e)]}return e==="bool"?[Zx(n[0])]:[n[0].toString()]}if(a===1){if(c>jm){const b=Fi*i;let w=Array.from(n.slice(0,b)),A=Array.from(n.slice((c-Fi)*i,c*i));return e==="complex64"&&(w=Li(w),A=Li(A)),["["+w.map((C,I)=>Vi(C,o[I],e)).join(", ")+", ..., "+A.map((C,I)=>Vi(C,o[c-Fi+I],e)).join(", ")+"]"]}const v=e==="complex64"?Li(n):Array.from(n);return["["+v.map((b,w)=>Vi(b,o[w],e)).join(", ")+"]"]}const u=t.slice(1),d=s.slice(1),l=s[0]*i,f=[];if(c>jm){for(let v=0;v<Fi;v++){const b=v*l,w=b+l;f.push(...zc(n.slice(b,w),u,e,d,o,!1))}f.push("...");for(let v=c-Fi;v<c;v++){const b=v*l,w=b+l;f.push(...zc(n.slice(b,w),u,e,d,o,v===c-1))}}else for(let v=0;v<c;v++){const b=v*l,w=b+l;f.push(...zc(n.slice(b,w),u,e,d,o,v===c-1))}const m=a===2?",":"";f[0]="["+f[0]+m;for(let v=1;v<f.length-1;v++)f[v]=" "+f[v]+m;let x=`,
`;for(let v=2;v<a;v++)x+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(r?"":x),f}function Li(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=pt(t),s!=null){const o=s.length;P(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Sn(e,this.size),this.strides=Ut(t)}set(t,...e){e.length===0&&(e=[0]),P(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const o of t){if(o<0||o>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let s=t[t.length-1];for(let o=0;o<t.length-1;++o)s+=this.strides[o]*t[o];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return $s().makeTensor(this.values,this.shape,this.dtype)}}let $s=null,Gr=null;function vC(n){$s=n}function _C(n){Gr=n}class Je{constructor(t,e,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=pt(t),this.strides=Ut(t),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Gr.buffer(this.shape,this.dtype,t)}bufferSync(){return Gr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Es(this.shape,t,this.dtype==="complex64")}arraySync(){return Es(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=$s().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Do(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),$s().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=$s().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Do(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await $s().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||($s().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Gr.print(this,t)}clone(){return this.throwIfDisposed(),Gr.clone(this)}toString(t=!1){const e=this.dataSync();return xC(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Gr.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),$s().makeVariable(this,t,e,s)}}Object.defineProperty(Je,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ht(){return Fd("Tensor",()=>Je)}ht();class Jc extends Je{constructor(t,e,s,o){super(t.shape,t.dtype,t.dataId,o),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ve(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);$s().disposeTensor(this),this.dataId=t.dataId,$s().incRef(this,null)}dispose(){$s().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Jc,Symbol.hasInstance,{value:n=>n instanceof Je&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Km;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Km||(Km={}));var Yh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Yh||(Yh={}));var Jh;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Jh||(Jh={}));var Zh;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Zh||(Zh={}));var Qh;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Qh||(Qh={}));const bC={float32:Zh,int32:Yh,bool:Jh,complex64:Qh};function Un(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return bC[n][t]}function $p(n){return Un(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(n,t){if(n.dtype===t.dtype)return[n,t];const e=Un(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Qx(n){const t=[];return ty(n,t,new Set),t}function ty(n,t,e){if(n==null)return;if(n instanceof Je){t.push(n);return}if(!wC(n))return;const s=n;for(const o in s){const r=s[o];e.has(r)||(e.add(r),ty(r,t,e))}}function wC(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wh(n){return n.kernelName!=null}class Xm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class si{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Xm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Jn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new dC(this.backendInstance),!0}setupRegisteredKernels(){Om(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Om(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof Dd)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,r=s.then(i=>o<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Jn(`Initialization of backend ${t} failed`),Jn(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Jn(`Initialization of backend ${t} failed`),Jn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:o,asyncInit:r}=this.initializeBackend(s);if(r||o)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),o=s.backend,r=this.readSync(e),i=o.refCount(e);o.disposeData(e,!0),s.backend=t,t.move(e,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,s){t();try{const o=s();return e(),o}catch(o){throw e(),o}}nextTensorId(){return si.nextTensorId++}nextVariableId(){return si.nextVariableId++}clone(t){const e=Y.runKernel(Aa,{x:t}),s={x:t},o=i=>({x:()=>{const c="float32",a={x:i},u={dtype:c};return Y.runKernel(da,a,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[e],o,r,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Lm(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const o=this.backend.numDataIds();let r=0;s.forEach(a=>{r+=a.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],c=o-e-r-i;if(c>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${c} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const o=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let c;this.backendName==null&&this.backend;let a;const u=wh(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(wh(t)){const{kernelName:x,inputs:v,attrs:b}=t;this.backendName==null&&this.backend;const w=Lm(x,this.backendName);P(w!=null,()=>`Cannot find registered kernel '${x}' for backend '${this.backendName}'`),c=()=>{const A=this.backend.numDataIds();a=w.kernelFunc({inputs:v,attrs:b,backend:this.backend});const C=Array.isArray(a)?a:[a];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(x,A,C);const I=C.map(N=>N.rank!=null?N:this.makeTensorFromTensorInfo(N));if(o){const N=this.getTensorsForGradient(x,v,I);s=this.saveTensorsForBackwardMode(N)}return I}}else{const{forwardFunc:x}=t,v=b=>{!o||(s=b.map(w=>this.keep(this.clone(w))))};c=()=>{const b=this.backend.numDataIds();a=this.tidy(()=>x(this.backend,v));const w=Array.isArray(a)?a:[a];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,b,w),w}}const{inputs:d,attrs:l}=t,f=wh(t)?null:t.backwardsFunc;let m;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=c():(m=this.profiler.profileKernel(u,d,()=>c()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),e=m.outputs)}),o&&this.addTapeNode(u,d,e,f,s,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(x=>d[x]!=null?d[x].shape:null),outputShapes:e.map(x=>x.shape),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(a)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const o=Pm(t);if(o!=null){const r=o.inputsToSave||[],i=o.outputsToSave||[];let c;o.saveAllInputs?(P(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),c=Object.keys(e).map(u=>e[u])):c=r.map(u=>e[u]);const a=s.filter((u,d)=>i[d]);return c.concat(a)}return[]}makeTensor(t,e,s,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let r=t;s==="string"&&na(t[0])&&(r=t.map(a=>To(a)));const i=o.write(r,e,s),c=new Je(e,s,i,this.nextTensorId());if(this.trackTensor(c,o),s==="string"){const a=this.state.tensorInfo.get(i),u=qw(r);this.state.numBytes+=u-a.bytes,a.bytes=u}return c}makeTensorFromDataId(t,e,s,o){s=s||"float32";const r={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:o,dtype:r}=t,i=new Je(o,r,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));const r=new Jc(t,e,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Oh(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Jc||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Oh(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,o,r,i){const c={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:r},a=Pm(t);a!=null&&(o=a.gradFunc),o!=null&&(c.gradient=u=>(u=u.map((d,l)=>{if(d==null){const f=s[l],m=Cn(f.size,f.dtype);return this.makeTensor(m,f.shape,f.dtype)}return d}),o(u.length>1?u:u[0],r,i))),this.state.activeTape.push(c)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Qx(t),s=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(t,e,s,o=!1){if(P(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));P(r instanceof Je,()=>"The result y returned by f() must be a tensor.");const i=mC(this.state.activeTape,e,r);if(!o&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const c={};c[r.id]=s??CC(r.shape),gC(c,i,u=>this.tidy(u),IC);const a=e.map(u=>c[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const d of u.saved)d.dispose()}),this.state.activeTape=null),{value:r,grads:a}})}customGrad(t){return P(Wh(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{P(e.every(c=>c instanceof Je),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};e.forEach((c,a)=>{o[a]=c});const r=(c,a)=>(s=t(...e,a),P(s.value instanceof Je,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Wh(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(c,a)=>{const u=s.gradFunc(c,a),d=Array.isArray(u)?u:[u];P(d.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(d.every(f=>f instanceof Je),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const l={};return d.forEach((f,m)=>{l[m]=()=>f}),l};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Rn(),s=await this.backend.time(t);return s.wallMs=Rn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Xm;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}si.nextTensorId=0;si.nextVariableId=0;function CC(n){const t=Bd(pt(n),"float32");return Y.makeTensor(t,n,"float32")}function ey(){const n=Ex();if(n._tfengine==null){const t=new jw(n);n._tfengine=new si(t)}return Jw(n._tfengine.ENV),vC(()=>n._tfengine),n._tfengine}const Y=ey();function IC(n,t){const e={a:n,b:t};return Y.runKernel(xi,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(){return typeof navigator<"u"&&navigator!=null}function ny(n){if(n||AC()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function sy(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms=dt();ms.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ms.registerFlag("IS_BROWSER",()=>sy());ms.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ms.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ms.registerFlag("PROD",()=>!1);ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ms.getBool("DEBUG"));ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ms.registerFlag("IS_TEST",()=>!1);ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ms.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(n,t){let e=n;if(Zs(n))return t==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Zs(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&dt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&oy(n,s,[]),s}function oy(n,t,e){if(e=e||[],!Array.isArray(n)&&!Zs(n)){P(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),P(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let o=0;o<n.length;++o)oy(n[o],s,e.concat(o))}function Ym(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function z(n,t,e,s="numeric"){if(n instanceof Je)return Ym(s,n.dtype,t,e),n;let o=sa(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),Ym(s,o,t,e),n==null||!Zs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const a=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${a}'`)}const r=_u(n,o);!Zs(n)&&!Array.isArray(n)&&(n=[n]);const c=o!=="string"?Ar(n,o):ti(n,[],!0);return Y.makeTensor(c,r,o)}function ry(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>z(r,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC="__op";function J(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+kC;const o=(...r)=>{Y.startScope(e);try{const i=s(...r);return Nx(i)&&console.error("Cannot return a Promise inside of tidy."),Y.endScope(i),i}catch(i){throw Y.endScope(null),i}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(n,t){const e=z(n,"real","complex"),s=z(t,"imag","complex");vs(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:e,imag:s};return Y.runKernel(Wd,o)}const oi=J({complex_:$C});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(n,t,e,s){if(s==null&&(s=sa(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Zs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Sx(t);const o=pt(t),r=pt(e);P(o===r,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${r}`);for(let i=0;i<e.length;++i){const c=e[i],a=i===e.length-1?c!==pt(t.slice(i)):!0;P(e[i]===t[i]||!a,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Zs(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Ar(n,s):ti(n,[],!0),Y.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pi(n,t,e){const s=_u(n,e);return bu(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jm=4;async function Zm(n,t){const e=[],s=[],o=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<o.length;++i){const c=o[i],a=Array.isArray(n)?n[i].tensor:n[c];if(a.dtype!=="float32"&&a.dtype!=="int32"&&a.dtype!=="bool"&&a.dtype!=="string"&&a.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${c}': ${a.dtype}`);const u={name:c,shape:a.shape,dtype:a.dtype};if(a.dtype==="string"){const d=new Promise(async l=>{const f=await a.bytes(),m=f.reduce((b,w)=>b+w.length,0)+Jm*f.length,x=new Uint8Array(m);let v=0;for(let b=0;b<f.length;b++){const w=f[b],A=new Uint8Array(new Uint32Array([w.length]).buffer);x.set(A,v),v+=Jm,x.set(w,v),v+=w.length}l(x)});s.push(d)}else s.push(a.data());t!=null&&(u.group=t),e.push(u)}const r=await Promise.all(s);return{data:SC(r),specs:e}}function SC(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(t);let o=0;return e.forEach(r=>{s.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),s.buffer}const Sp=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Qm(n){return Sp?Buffer.byteLength(n):new Blob([n]).size}function NC(n){if(Sp)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,o=t.length;s<o;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function TC(n){if(Sp){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function iy(n){if(n.length===1)return n[0];let t=0;n.forEach(o=>{t+=o.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(o=>{e.set(new Uint8Array(o),s),s+=o.byteLength}),e.buffer}function ay(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}async function EC(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),n.weightsManifest!=null){const[s,o]=await t(n.weightsManifest);e.weightSpecs=s,e.weightData=o}return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),e}function wu(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Qm(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Qm(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return cn.instance==null&&(cn.instance=new cn),cn.instance}static registerSaveRouter(t){cn.getInstance().saveRouters.push(t)}static registerLoadRouter(t){cn.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return cn.getHandlers(t,"save")}static getLoadHandlers(t,e){return cn.getHandlers(t,"load",e)}static getHandlers(t,e,s){const o=[];return(e==="load"?cn.getInstance().loadRouters:cn.getInstance().saveRouters).forEach(i=>{const c=i(t,s);c!==null&&o.push(c)}),o}}const RC=n=>cn.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const td="tensorflowjs",ed=1,rr="models_store",$o="model_info_store";function cy(){if(!dt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function nd(n){const t=n.result;t.createObjectStore(rr,{keyPath:"modelPath"}),t.createObjectStore($o,{keyPath:"modelPath"})}class dr{constructor(t){if(this.indexedDB=cy(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,o)=>{const r=this.indexedDB.open(td,ed);r.onupgradeneeded=()=>nd(r),r.onsuccess=()=>{const i=r.result;if(e==null){const c=i.transaction(rr,"readonly"),u=c.objectStore(rr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=d=>(i.close(),o(u.error)),c.oncomplete=()=>i.close()}else{const c=wu(e),a=i.transaction($o,"readwrite");let u=a.objectStore($o);const d=u.put({modelPath:this.modelPath,modelArtifactsInfo:c});let l;d.onsuccess=()=>{l=i.transaction(rr,"readwrite");const m=l.objectStore(rr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:c});m.onsuccess=()=>s({modelArtifactsInfo:c}),m.onerror=x=>{u=a.objectStore($o);const v=u.delete(this.modelPath);v.onsuccess=()=>(i.close(),o(m.error)),v.onerror=b=>(i.close(),o(m.error))}},d.onerror=f=>(i.close(),o(d.error)),a.oncomplete=()=>{l==null?i.close():l.oncomplete=()=>i.close()}}},r.onerror=i=>o(r.error)})}}dr.URL_SCHEME="indexeddb://";const ly=n=>dt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(dr.URL_SCHEME)?DC(n.slice(dr.URL_SCHEME.length)):null;cn.registerSaveRouter(ly);cn.registerLoadRouter(ly);function DC(n){return new dr(n)}function BC(n){return n.startsWith(dr.URL_SCHEME)?n.slice(dr.URL_SCHEME.length):n}class FC{constructor(){this.indexedDB=cy()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(td,ed);s.onupgradeneeded=()=>nd(s),s.onsuccess=()=>{const o=s.result,r=o.transaction($o,"readonly"),c=r.objectStore($o).getAll();c.onsuccess=()=>{const a={};for(const u of c.result)a[u.modelPath]=u.modelArtifactsInfo;t(a)},c.onerror=a=>(o.close(),e(c.error)),r.oncomplete=()=>o.close()},s.onerror=o=>e(s.error)})}async removeModel(t){return t=BC(t),new Promise((e,s)=>{const o=this.indexedDB.open(td,ed);o.onupgradeneeded=()=>nd(o),o.onsuccess=()=>{const r=o.result,i=r.transaction($o,"readwrite"),c=i.objectStore($o),a=c.get(t);let u;a.onsuccess=()=>{if(a.result==null)return r.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const d=c.delete(t),l=()=>{u=r.transaction(rr,"readwrite");const m=u.objectStore(rr).delete(t);m.onsuccess=()=>e(a.result.modelArtifactsInfo),m.onerror=x=>s(a.error)};d.onsuccess=l,d.onerror=f=>(l(),r.close(),s(a.error))}},a.onerror=d=>(r.close(),s(a.error)),i.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},o.onerror=r=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ho="/",qr="tensorflowjs_models",uy="info",MC="model_topology",VC="weight_specs",LC="weight_data",PC="model_metadata";function hy(n){return{info:[qr,n,uy].join(ho),topology:[qr,n,MC].join(ho),weightSpecs:[qr,n,VC].join(ho),weightData:[qr,n,LC].join(ho),modelMetadata:[qr,n,PC].join(ho)}}function dy(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function OC(n){const t=n.split(ho);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(ho)}function zC(n){return n.startsWith(pr.URL_SCHEME)?n.slice(pr.URL_SCHEME.length):n}class pr{constructor(t){if(!dt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=hy(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),o=wu(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,NC(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:o}}catch{throw dy(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const c=JSON.parse(r);e.format=c.format,e.generatedBy=c.generatedBy,e.convertedBy=c.convertedBy,c.signature!=null&&(e.signature=c.signature),c.userDefinedMetadata!=null&&(e.userDefinedMetadata=c.userDefinedMetadata),c.modelInitializer!=null&&(e.modelInitializer=c.modelInitializer),c.trainingConfig!=null&&(e.trainingConfig=c.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=TC(i),e}}pr.URL_SCHEME="localstorage://";const py=n=>dt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(pr.URL_SCHEME)?WC(n.slice(pr.URL_SCHEME.length)):null;cn.registerSaveRouter(py);cn.registerLoadRouter(py);function WC(n){return new pr(n)}class UC{constructor(){P(dt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=qr+ho,s=ho+uy;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(e)&&r.endsWith(s)){const i=OC(r);t[i]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=zC(t);const e=hy(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return dy(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg="://";class ko{constructor(){this.managers={}}static getInstance(){return ko.instance==null&&(ko.instance=new ko),ko.instance}static registerManager(t,e){P(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(tg)&&(t=t.slice(0,t.indexOf(tg))),P(t.length>0,()=>"scheme must not be an empty string.");const s=ko.getInstance();P(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GC{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(dt().get("IS_BROWSER")){dt().setPlatform("browser",new GC);try{ko.registerManager(pr.URL_SCHEME,new UC)}catch{}try{ko.registerManager(dr.URL_SCHEME,new FC)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC={importFetch:()=>require("node-fetch")};let Ch;class HC{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return dt().global.fetch!=null?dt().global.fetch(t,e):(Ch==null&&(Ch=qC.importFetch()),Ch(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}dt().get("IS_NODE")&&!dt().get("IS_BROWSER")&&dt().setPlatform("node",new HC);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(n,t="float32",e){return t=t||"float32",Sx(n),new bn(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,t){const e=z(n,"x","cast");if(!Gw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},o={dtype:t};return Y.runKernel(da,s,o)}const Tt=J({cast_:jC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n){const e={x:z(n,"x","clone","string_or_numeric")};return Y.runKernel(Aa,e)}const ar=J({clone_:KC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ey();const YC={buffer:re,cast:Tt,clone:ar,print:XC};_C(YC);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC="model",ZC=".json",QC=".weights.bin";function eg(n){return new Promise(t=>setTimeout(t)).then(n)}class fr{constructor(t){if(!dt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(fr.URL_SCHEME)&&(t=t.slice(fr.URL_SCHEME.length)),(t==null||t.length===0)&&(t=JC),this.modelJsonFileName=t+ZC,this.weightDataFileName=t+QC}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=ay(t,s),r=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await eg(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=e,await eg(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:wu(t)}}}}fr.URL_SCHEME="downloads://";const tI=n=>dt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(fr.URL_SCHEME)?eI(n.slice(fr.URL_SCHEME.length)):null;cn.registerSaveRouter(tI);function eI(n="model"){return new fr(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(n,t,e,s){i(n),e=e??0,s=s??1,c(e,s);let o=0;const r=a=>(a.then(u=>{const d=e+ ++o/n.length*(s-e);return t(d),u}),a);function i(a){P(a!=null&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array")}function c(a,u){P(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${u}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nI(n,t){t==null&&(t={});const e=t.fetchFunc==null?dt().platform.fetch:t.fetchFunc,s=n.map(l=>e(l,t.requestInit,{isBinary:!0})),o=0,r=.5,c=(t.onProgress==null?await Promise.all(s):await ng(s,t.onProgress,o,r)).map(l=>l.arrayBuffer()),a=.5,u=1;return t.onProgress==null?await Promise.all(c):await ng(c,t.onProgress,a,u)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI="application/octet-stream",oI="application/json";class Np{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(P(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=dt().platform.fetch,P(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&P(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=ay(t,s);e.body.append("model.json",new Blob([JSON.stringify(o)],{type:oI}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:sI}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:wu(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,o=e.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return EC(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=rI(e),r=this.weightPathPrefix||s,i=[];for(const d of t)i.push(...d.weights);const c=[],a=[];for(const d of t)for(const l of d.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(l)):c.push(r+l+o);this.weightUrlConverter&&c.push(...await Promise.all(a));const u=await nI(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,iy(u)]}}Np.URL_SCHEME_REGEX=/^https?:\/\//;function rI(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),o=e>t?n.substring(e):"";return[s+"/",o]}function sg(n){return n.match(Np.URL_SCHEME_REGEX)!=null}const fy=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>sg(s)):e=sg(n),e)return iI(n,t)}return null};cn.registerSaveRouter(fy);cn.registerLoadRouter(fy);function iI(n,t){return new Np(n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n,t,e=!1,s=!1){let o=z(n,"a","matMul"),r=z(t,"b","matMul");[o,r]=qe(o,r);const i={a:o,b:r},c={transposeA:e,transposeB:s};return Y.runKernel(Il,i,c)}const ye=J({matMul_:aI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n,t,e=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:z(n,"indices","oneHot","int32")},i={depth:t,onValue:e,offValue:s};return Y.runKernel(eu,r,i)}const my=J({oneHot_:cI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(){return Y}function sd(){return Y.memory()}function at(n,t){return Y.tidy(n,t)}function ae(n){Qx(n).forEach(e=>e.dispose())}function Qs(n){return Y.keep(n)}function gy(n,t,e=1){return Y.registerBackend(n,t,e)}function lI(){return Y.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n){const e={input:z(n,"input","imag")};return Y.runKernel(np,e)}const Tp=J({imag_:uI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n){const e={x:z(n,"x","neg")};return Y.runKernel(Zl,e)}const Oe=J({neg_:hI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(n){const e={input:z(n,"input","real")};return Y.runKernel(up,e)}const Zc=J({real_:dI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(n,t,e){const s=z(n,"x","transpose");if(t==null&&(t=s.shape.map((i,c)=>c).reverse()),P(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{P(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const o={x:s},r={perm:t};return s.dtype==="complex64"?at(()=>{let i=Zc(s),c=Tp(s);return i=Y.runKernel(Yr,{x:i},r),c=Y.runKernel(Yr,{x:c},r),e&&(c=Oe(c)),oi(i,c)}):Y.runKernel(Yr,o,r)}const ue=J({transpose_:pI});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(n,t){const e=n.length,s=[];for(let o=0;o<e;o++){const r=e-1-o,i=n[r]||1;(t[t.length-1-o]||1)>1&&i===1&&s.unshift(r)}return s}function rn(n,t){const e=[];for(let s=0;s<t.length;s++){const o=n[n.length-s-1],r=t.length-s-1,i=t[r];(o==null||o===1&&i>1)&&e.unshift(r)}return e}function te(n,t){const e=[],s=Math.max(n.length,t.length);for(let o=0;o<s;o++){let r=n[n.length-o-1];r==null&&(r=1);let i=t[t.length-o-1];if(i==null&&(i=1),r===1)e.unshift(i);else if(i===1)e.unshift(r);else if(r!==i){const c=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(c)}else e.unshift(r)}return e}function Ep(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(pt(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=t.shape,r=o[o.length-1];let i=1;for(let l=0;l<o.length-1;++l)i*=o[l];const c=n.shape,a=o.slice();a.pop();let u=1;for(let l=r;l<e;++l)u*=c[l],a.push(c[l]);const d=[...Ut(n.shape).map(l=>l/u),1].slice(0,r);return[a,i,u,d]}function xy(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(r+` update.rank < ${o}. `);if(n.length<s+(e.rank-o))throw new Error(r+` Output shape length < ${s+(e.rank-o)}`);if(e.rank!==o+n.length-s)throw new Error(r+` update.rank != ${o+n.length-s}`);for(let i=0;i<o;++i)if(e.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-o;++i)if(e.shape[i+o]!==n[i+s])throw new Error(r+` updates.shape[${i+o}] (${e.shape[i+o]}) != shape[${i+o}] (${n[i+o]})`)}function fI(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}xy(e,t,n)}function tc(n,t,e){const s=t.shape.length,o=s>1?t.shape[s-1]:1,r=e.length;let i=1;for(let l=o;l<r;++l)i*=e[l];const c=o<1?1:o,a=pt(t.shape)/c,u=[...Ut(e.slice(0,o)),1],d=pt(e);return{sliceRank:o,numUpdates:a,sliceSize:i,strides:u,outputSize:d}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const od=-2,mI=-1;function Rp(n,t,e){const s=n.shape.length;P(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),P(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)P(t[o]+e[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function gI(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Dp(n,t,e){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((t[o]-n[o])/e[o]);return s}function yy(n,t,e,s){const o=[...n];for(let r=o.length;r<s.length;r++)o.push(1);for(let r=0;r<e;r++)r===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function vy(n,t,e){return e<=n?e:e-(t-1)}function _y(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function xI(n,t,e,s,o,r,i,c,a){const u=n.length;let d=new Array(u),l=new Array(u),f=new Array(u);if(t.length&&e>0){const m=t[0],x=e+1;d=by(i,m,x,s,n),l=wy(c,m,x,o,n),f=yy(r,m,x,n)}else for(let m=0;m<u;m++)d[m]=Iy(i,s,r,n,m,a),l[m]=Ay(c,o,r,n,m,a),f[m]=Cy(r,m,a);return{begin:d,end:l,strides:f}}function by(n,t,e,s,o){const r=[...o],i=_y(e,t);for(let c=0;c<r.length;c++)if(i.indexOf(c)>-1)r[c]=0;else{const a=vy(t,e,c);let u=s[a];n&1<<a&&(u=0),r[c]=u}return r}function wy(n,t,e,s,o){const r=[...o],i=_y(e,t);for(let c=0;c<r.length;c++)if(i.indexOf(c)>-1)r[c]=Number.MAX_SAFE_INTEGER;else{const a=vy(t,e,c);let u=s[a];n&1<<a&&(u=Number.MAX_SAFE_INTEGER),r[c]=u}for(let c=0;c<r.length;c++){const a=o[c];r[c]<0&&(r[c]+=a),r[c]=hr(0,r[c],o[c])}return r}function Cy(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Iy(n,t,e,s,o,r){let i=t[o];const c=e[o]||1;(n&1<<o||r&1<<o||i==null)&&(c>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const a=s[o];return i<0&&(i+=a),i=hr(0,i,a-1),i}function Ay(n,t,e,s,o,r){let i=t[o];const c=e[o]||1;(n&1<<o||r&1<<o||i==null)&&(c>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const a=s[o];return i<0&&(i+=a),c>0?i=hr(0,i,a):i=hr(-1,i,a-1),i}function Bp(n,t,e){let s=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){s=o;break}for(let o=s+1;o<e.length;o++)if(t[o]>0||e[o]!==n[o])return!1;return!0}function Fp(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Cu(n,t,e){let s;const o=n.shape.length;typeof t=="number"?s=[t,...new Array(o-1).fill(0)]:t.length<o?s=t.concat(new Array(o-t.length).fill(0)):s=t.slice(),s.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(o).fill(-1):typeof e=="number"?r=[e,...new Array(o-1).fill(-1)]:e.length<o?r=e.concat(new Array(o-e.length).fill(-1)):r=e,r=r.map((i,c)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${c}.`),n.shape[c]-s[c])),[s,r]}function Mp(n,t,e,s,o,r,i,c,a){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const l={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:a};for(let C=0;C<l.dims;C++)d&&(1<<C&c)!==0&&l.numAddAxisAfterEllipsis++,1<<C&i&&(d=!0);d||(l.ellipsisMask|=1<<l.dims,l.dims++);const f={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};yI(l,f);let m=!0,x=!0,v=!0;const b=[],w=[];for(let C=0;C<n.length;++C){if(f.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);const I=!!(f.shrinkAxisMask&1<<C),N=n[C];if(N===-1){b.push(I?1:-1);continue}const E=[f.beginMask&1<<C,f.endMask&1<<C],B=[f.strides[C]>0?0:-1,f.strides[C]>0?N:N-1];if(I&&f.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&f.strides[C]===1;const M=!!(f.beginMask&1<<C&&f.endMask&1<<C);if(f.beginValid&&f.endValid){if(I){const tt=f.begin[C]<0?N+f.begin[C]:f.begin[C];if(f.begin[C]=tt,f.end[C]=f.begin[C]+1,tt<0||tt>=N)throw Error(`slice index ${f.begin[C]} of dimension ${C} out of bounds.`)}else f.begin[C]=og(f.begin[C],0,f.strides[C],N,E,B),f.end[C]=og(f.end[C],1,f.strides[C],N,E,B);const q=f.strides[C]===1&&f.begin[C]===0&&f.end[C]===N;m=m&&q,x=x&&(C===0&&f.strides[C]===1||q)}else m=m&&f.strides[C]===1&&M,x=x&&(C===0&&f.strides[C]===1||M);let U,G=!1;if(f.beginValid&&f.endValid?(U=f.end[C]-f.begin[C],G=!0):I?(U=1,G=!0):M&&N>=0&&(f.strides[C]<0?U=-N:U=N,G=!0),G){let q;U===0||U<0!=f.strides[C]<0?q=0:q=Math.trunc(U/f.strides[C])+(U%f.strides[C]!==0?1:0),b.push(q)}else b.push(-1)}for(let C=0;C<f.finalShapeGatherIndices.length;++C){const I=f.finalShapeGatherIndices[C];I>=0?w.push(b[I]):I===od&&w.push(1)}return{finalShapeSparse:w.filter((C,I)=>f.finalShapeGatherIndices[I]!==od),finalShape:w,isIdentity:m,sliceDim0:x,isSimpleSlice:v,begin:f.begin,end:f.end,strides:f.strides}}function yI(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(od),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(mI),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function og(n,t,e,s,o,r){if(o[t])return e>0?r[t]:r[t+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}var vI=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Rp,maskToAxes:gI,computeOutShape:Dp,stridesWithElidedDims:yy,getNormalizedAxes:xI,startIndicesWithElidedDims:by,stopIndicesWithElidedDims:wy,stridesForAxis:Cy,startForAxis:Iy,stopForAxis:Ay,isSliceContinous:Bp,computeFlatOffset:Fp,parseSliceParams:Cu,sliceInfo:Mp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ls{constructor(){this.classNameMap={}}static getMap(){return ls.instance==null&&(ls.instance=new ls),ls.instance}static register(t){ls.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function yt(n){P(n.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),P(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ls.register(n)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(n,t){let e=z(n,"a","add"),s=z(t,"b","add");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(xi,o)}const bt=J({add_:_I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n,t){let e=z(n,"a","floorDiv"),s=z(t,"b","floorDiv");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(Ca,o)}const ky=J({floorDiv_:bI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n,t){let e=z(n,"a","div"),s=z(t,"b","div");if([e,s]=qe(e,s),e.dtype==="int32"&&s.dtype==="int32")return ky(e,s);const o={a:e,b:s},r={};return Y.runKernel(xa,o,r)}const zt=J({div_:wI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CI(n,t){let e=z(n,"a","mul"),s=z(t,"b","mul");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(Ba,o)}const K=J({mul_:CI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function II(n){const t=z(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return Y.runKernel(kl,e)}else{const e={x:t};return Y.runKernel(vl,e)}}const ln=J({abs_:II});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n){const e={x:z(n,"x","acos")};return Y.runKernel(ra,e)}const kI=J({acos_:AI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n){const e={x:z(n,"x","acosh")};return Y.runKernel(ia,e)}const SI=J({acosh_:$I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n,t=null,e=!1){const o={x:z(n,"x","all","bool")},r={axis:t,keepDims:e};return Y.runKernel(Vd,o,r)}const $y=J({all_:NI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n,t=null,e=!1){const o={x:z(n,"x","any","bool")},r={axis:t,keepDims:e};return Y.runKernel(Ld,o,r)}const rd=J({any_:TI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(n,t=0){const s={x:z(n,"x","argMax")},o={axis:t};return Y.runKernel(_l,s,o)}const Ki=J({argMax_:EI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(n,t=0){const s={x:z(n,"x","argMin")},o={axis:t};return Y.runKernel(bl,s,o)}const DI=J({argMin_:RI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(n){const e={x:z(n,"x","asin")};return Y.runKernel(aa,e)}const FI=J({asin_:BI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n){const e={x:z(n,"x","asinh")};return Y.runKernel(ca,e)}const VI=J({asinh_:MI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(n){const e={x:z(n,"x","atan")};return Y.runKernel(la,e)}const PI=J({atan_:LI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(n,t){let e=z(n,"a","atan2"),s=z(t,"b","atan2");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(ha,o)}const zI=J({atan2_:OI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n){const e={x:z(n,"x","atanh")};return Y.runKernel(ua,e)}const UI=J({atanh_:WI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ec(n,t,e,s,o="NHWC",r){const i=n[3],c=[...t,i],a=yo(o);return xn(n,c,e,r,s,null,null,a)}function _s(n,t,e,s,o,r,i="channelsLast"){const[c,a]=Qc(t);let u;if(i==="channelsLast")u=[c,a,n[3],n[3]];else if(i==="channelsFirst")u=[c,a,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return xn(n,u,e,s,o,r,!1,i)}function xo(n,t,e,s,o,r,i="NDHWC"){const[c,a,u]=id(t);let d,l;if(i==="NDHWC")l="channelsLast",d=[c,a,u,n[4],n[4]];else if(i==="NCDHW")l="channelsFirst",d=[c,a,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return zo(n,d,e,s,o,!1,l,r)}function xn(n,t,e,s,o,r,i=!1,c="channelsLast"){let[a,u,d,l]=[-1,-1,-1,-1];if(c==="channelsLast")[a,u,d,l]=n;else if(c==="channelsFirst")[a,l,u,d]=n;else throw new Error(`Unknown dataFormat ${c}`);const[f,m,,x]=t,[v,b]=Qc(e),[w,A]=Qc(s),C=Jr(f,w),I=Jr(m,A),{padInfo:N,outHeight:E,outWidth:B}=HI(o,u,d,v,b,C,I,r,c),M=i?x*l:x;let U;return c==="channelsFirst"?U=[a,M,E,B]:c==="channelsLast"&&(U=[a,E,B,M]),{batchSize:a,dataFormat:c,inHeight:u,inWidth:d,inChannels:l,outHeight:E,outWidth:B,outChannels:M,padInfo:N,strideHeight:v,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationHeight:w,dilationWidth:A,inShape:n,outShape:U,filterShape:t}}function zo(n,t,e,s,o,r=!1,i="channelsLast",c){let[a,u,d,l,f]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[a,u,d,l,f]=n;else if(i==="channelsFirst")[a,f,u,d,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[m,x,v,,b]=t,[w,A,C]=id(e),[I,N,E]=id(s),B=Jr(m,I),M=Jr(x,N),U=Jr(v,E),{padInfo:G,outDepth:q,outHeight:tt,outWidth:et}=jI(o,u,d,l,w,A,C,B,M,U,c),Q=r?b*f:b;let it;return i==="channelsFirst"?it=[a,Q,q,tt,et]:i==="channelsLast"&&(it=[a,q,tt,et,Q]),{batchSize:a,dataFormat:i,inDepth:u,inHeight:d,inWidth:l,inChannels:f,outDepth:q,outHeight:tt,outWidth:et,outChannels:Q,padInfo:G,strideDepth:w,strideHeight:A,strideWidth:C,filterDepth:m,filterHeight:x,filterWidth:v,effectiveFilterDepth:B,effectiveFilterHeight:M,effectiveFilterWidth:U,dilationDepth:I,dilationHeight:N,dilationWidth:E,inShape:n,outShape:it,filterShape:t}}function GI(n,t,e,s,o){s==null&&(s=Vp(n,t,e));const r=n[0],i=n[1],c=cr((r-t+2*s)/e+1,o),a=cr((i-t+2*s)/e+1,o);return[c,a]}function qI(n,t,e,s,o,r){o==null&&(o=Vp(n,t,s));const i=n[0],c=n[1],a=n[2],u=cr((i-t+2*o)/s+1,r),d=cr((c-t+2*o)/s+1,r),l=cr((a-t+2*o)/s+1,r);return[u,d,l,e]}function Vp(n,t,e,s=1){const o=Jr(t,s);return Math.floor((n[0]*(e-1)-e+o)/2)}function Qc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function id(n){return typeof n=="number"?[n,n,n]:n}function Jr(n,t){return t<=1?n:n+(n-1)*(t-1)}function HI(n,t,e,s,o,r,i,c,a){let u,d,l;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const m=GI([t,e],r,s,n,c);d=m[0],l=m[1]}else if(n==="same"){d=Math.ceil(t/s),l=Math.ceil(e/o);const f=Math.max(0,(d-1)*s+r-t),m=Math.max(0,(l-1)*o+i-e),x=Math.floor(f/2),v=f-x,b=Math.floor(m/2),w=m-b;u={top:x,bottom:v,left:b,right:w,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-r+1)/s),l=Math.ceil((e-i+1)/o);else if(typeof n=="object"){const f=a==="channelsLast"?n[1][0]:n[2][0],m=a==="channelsLast"?n[1][1]:n[2][1],x=a==="channelsLast"?n[2][0]:n[3][0],v=a==="channelsLast"?n[2][1]:n[3][1];u={top:f,bottom:m,left:x,right:v,type:f===0&&m===0&&x===0&&v===0?"VALID":"EXPLICIT"},d=cr((t-r+f+m)/s+1,c),l=cr((e-i+x+v)/o+1,c)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:d,outWidth:l}}function jI(n,t,e,s,o,r,i,c,a,u,d){let l,f,m,x;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const b=qI([t,e,s,1],c,1,o,n,d);f=b[0],m=b[1],x=b[2]}else if(n==="same"){f=Math.ceil(t/o),m=Math.ceil(e/r),x=Math.ceil(s/i);const v=(f-1)*o+c-t,b=(m-1)*r+a-e,w=(x-1)*i+u-s,A=Math.floor(v/2),C=v-A,I=Math.floor(b/2),N=b-I,E=Math.floor(w/2),B=w-E;l={top:I,bottom:N,left:E,right:B,front:A,back:C,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-c+1)/o),m=Math.ceil((e-a+1)/r),x=Math.ceil((s-u+1)/i);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outDepth:f,outHeight:m,outWidth:x}}function cr(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function mr(n){const[t,e,s]=Qc(n);return t===1&&e===1&&s===1}function In(n,t){return mr(n)||mr(t)}function yo(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Mn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")P(ei(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(o=>{P(ei(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,t){const s={x:z(n,"x","reshape","string_or_numeric")},o={shape:t};return Y.runKernel(iu,s,o)}const st=J({reshape_:KI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,t,e,s,o){const r=z(n,"x","avgPool","float32"),i=1;P(In(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let c=r,a=!1;r.rank===3&&(a=!0,c=st(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(c.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),Mn("avgPool",s,o);const u={x:c},d={filterSize:t,strides:e,pad:s,dimRoundingMode:o};let l=Y.runKernel(wl,u,d);return l=Tt(l,r.dtype),a?st(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Lp=J({avgPool_:XI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n,t,e,s,o,r="NDHWC"){const i=z(n,"x","avgPool3d","float32");let c=i,a=!1;i.rank===4&&(a=!0,c=st(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(c.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`),P(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Mn("avgPool3d",s,o);const u={x:c},d={filterSize:t,strides:e,pad:s,dimRoundingMode:o,dataFormat:r};let l=Y.runKernel(Cl,u,d);return l=Tt(l,c.dtype),a?st(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}const JI=J({avgPool3d_:YI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,t=0){P(n.length>=1,()=>"Pass at least one tensor to concat");const e=ry(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return ar(e[0]);const s=e,o={axis:t};return Y.runKernel($l,s,o)}const wn=J({concat_:ZI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n){const e={x:z(n,"x","sigmoid","float32")};return Y.runKernel(qa,e)}const vi=J({sigmoid_:QI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(n,t,e){const s=z(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},r={begin:t,size:e};return Y.runKernel(hu,o,r)}const Ie=J({slice_:t2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n){const e={x:z(n,"x","tanh","float32")};return Y.runKernel(Ja,e)}const Pp=J({tanh_:e2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,t,e){const s=z(n,"x","batchToSpaceND"),o=t.reduce((c,a)=>c*a);P(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),P(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),P(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const r={x:s},i={blockShape:t,crops:e};return Y.runKernel(Al,r,i)}const Op=J({batchToSpaceND_:n2});function s2(n){let t;return n.rank===0||n.rank===1?t=st(n,[1,1,1,n.size]):n.rank===2?t=st(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=st(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n,t,e,s,o,r){r==null&&(r=.001);const i=z(n,"x","batchNorm"),c=z(t,"mean","batchNorm"),a=z(e,"variance","batchNorm");let u;o!=null&&(u=z(o,"scale","batchNorm"));let d;s!=null&&(d=z(s,"offset","batchNorm")),P(c.rank===a.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(d==null||c.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||c.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f={x:s2(i),scale:u,offset:d,mean:c,variance:a},m={varianceEpsilon:r},x=Y.runKernel(Ml,f,m);return st(x,i.shape)}const Iu=J({batchNorm_:o2});function r2(n,t,e,s,o,r){const i=z(n,"x","batchNorm"),c=z(t,"mean","batchNorm"),a=z(e,"variance","batchNorm");let u;o!=null&&(u=z(o,"scale","batchNorm"));let d;return s!=null&&(d=z(s,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),P(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${a.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),Iu(i,c,a,d,u,r)}const i2=J({batchNorm2d_:r2});function a2(n,t,e,s,o,r){const i=z(n,"x","batchNorm"),c=z(t,"mean","batchNorm"),a=z(e,"variance","batchNorm");let u;o!=null&&(u=z(o,"scale","batchNorm"));let d;return s!=null&&(d=z(s,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),P(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${a.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),Iu(i,c,a,d,u,r)}const c2=J({batchNorm3d_:a2});function l2(n,t,e,s,o,r){const i=z(n,"x","batchNorm"),c=z(t,"mean","batchNorm"),a=z(e,"variance","batchNorm");let u;o!=null&&(u=z(o,"scale","batchNorm"));let d;return s!=null&&(d=z(s,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),P(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${a.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),Iu(i,c,a,d,u,r)}const u2=J({batchNorm4d_:l2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(n,t,e){const s=z(n,"x","bincount"),o=z(t,"weights","bincount");P(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),P(e>=0,()=>`size must be non-negative, but got ${e}.`),P(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const r={x:s,weights:o},i={size:e};return Y.runKernel(zd,r,i)}const d2=J({bincount_:h2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,t){let e=z(n,"broadcastTo","x");const s=e.shape;if(t.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=st(e,u)}const o=e.shape,r=Array.from(t);for(let u=t.length-1;u>=0;u--)if(o[u]===t[u])r[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(r.map((u,d)=>u>1?d:-1).filter(u=>u>=0).length===0)return ar(e);const c={x:e},a={reps:r};return Y.runKernel(Za,c,a)}const Wc=J({broadcastTo_:p2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n){const e={x:z(n,"x","ceil","float32")};return Y.runKernel(pa,e)}const m2=J({ceil_:f2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,t,e){const s=z(n,"x","clipByValue");P(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`);const o={x:s},r={clipValueMin:t,clipValueMax:e};return Y.runKernel(fa,o,r)}const es=J({clipByValue_:g2});function x2(n){return wn(n,0)}const y2=J({concat1d_:x2});function v2(n,t){return wn(n,t)}const _2=J({concat2d_:v2});function b2(n,t){return wn(n,t)}const w2=J({concat3d_:b2});function C2(n,t){return wn(n,t)}const I2=J({concat4d_:C2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n,t,e,s,o="NHWC",r=[1,1],i){const c=z(n,"x","conv2d","float32"),a=z(t,"filter","conv2d","float32");let u=c,d=!1;c.rank===3&&(d=!0,u=st(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(a.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${a.rank}.`),Mn("conv2d",s,i);const l=o==="NHWC"?u.shape[3]:u.shape[1];P(l===a.shape[2],()=>`Error in conv2d: depth of input (${l}) must match input depth for filter ${a.shape[2]}.`),P(In(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const f={x:u,filter:a},m={strides:e,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},x=Y.runKernel(Sl,f,m);return d?st(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const gr=J({conv2d_:A2});function k2(n,t,e,s,o="NWC",r=1,i){const c=z(n,"x","conv1d"),a=z(t,"filter","conv1d");let u=c,d=!1;c.rank===2&&(d=!0,u=st(c,[1,c.shape[0],c.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(a.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${a.rank}.`),Mn("conv1d",s,i),P(u.shape[2]===a.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${a.shape[1]}.`),P(In(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),P(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const l=st(a,[1,a.shape[0],a.shape[1],a.shape[2]]),f=st(u,[u.shape[0],1,u.shape[1],u.shape[2]]),b=gr(f,l,[1,e],s,"NHWC",[1,r],i);return d?st(b,[b.shape[2],b.shape[3]]):st(b,[b.shape[0],b.shape[2],b.shape[3]])}const Sy=J({conv1d_:k2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,t,e,s,o,r="NHWC",i){P(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let c=n,a=t,u=!1;t.rank===3&&(u=!0,a=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]),c=[1,n[0],n[1],n[2]]),P(c.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),P(a.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${a.rank}`),P(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const d=r==="NHWC"?c[3]:c[1],l=r==="NHWC"?a.shape[3]:a.shape[1];P(d===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${e.shape[2]}.`),P(l===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${l}) must match output depth for filter ${e.shape[3]}.`),Mn("conv2dDerInput",o,i);const f={dy:a,filter:e},m={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,inputShape:c},x=Y.runKernel(Nl,f,m);return u?st(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const zp=J({conv2DBackpropInput_:$2});function S2(n,t,e,s,o,r){const i=z(n,"x","conv2dTranspose"),c=z(t,"filter","conv2dTranspose");return zp(e,i,c,s,o,"NHWC",r)}const Ny=J({conv2dTranspose_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n,t,e,s,o="NDHWC",r=[1,1,1]){const i=z(n,"x","conv3d"),c=z(t,"filter","conv3d");let a=i,u=!1;i.rank===4&&(u=!0,a=st(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(a.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${a.rank}.`),P(c.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`),P(a.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${a.shape[4]}) must match input depth for filter ${c.shape[3]}.`),P(In(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),P(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const d={x:a,filter:c},l={strides:e,pad:s,dataFormat:o,dilations:r},f=Y.runKernel(Tl,d,l);return u?st(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const T2=J({conv3d_:N2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,t,e,s,o){P(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let r=n,i=t,c=!1;t.rank===4&&(c=!0,i=st(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const a=r[4],u=i.shape[4];P(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),P(a===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${a}) must match input depth for filter ${e.shape[3]}.`),P(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const d={dy:i,filter:e},l={pad:o,strides:s,inputShape:r},f=Y.runKernel(qd,d,l);return c?st(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const Ty=J({conv3DBackpropInput_:E2});function R2(n,t,e,s,o){const r=z(n,"x","conv3dTranspose"),i=z(t,"filter","conv3dTranspose");return Ty(e,r,i,s,o)}const D2=J({conv3dTranspose_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(n){const e={x:z(n,"x","cos","float32")};return Y.runKernel(ma,e)}const Wp=J({cos_:B2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n){const e={x:z(n,"x","cosh","float32")};return Y.runKernel(ga,e)}const Ey=J({cosh_:F2});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(n,t=0,e=!1,s=!1){const r={x:z(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return Y.runKernel(Hd,r,i)}const ad=J({cumprod_:M2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n,t=0,e=!1,s=!1){const r={x:z(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return Y.runKernel(El,r,i)}const Ry=J({cumsum_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n,t,e="NHWC"){const s=z(n,"x","depthToSpace","float32"),o=e==="NHWC"?s.shape[1]:s.shape[2],r=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${s.shape}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${s.shape}`),P(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const c={x:s},a={blockSize:t,dataFormat:e};return Y.runKernel(Kd,c,a)}const P2=J({depthToSpace_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n,t,e,s,o="NHWC",r=[1,1],i){const c=z(n,"x","depthwiseConv2d","float32"),a=z(t,"filter","depthwiseConv2d","float32");let u=c,d=!1;c.rank===3&&(d=!0,u=st(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(a.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${a.rank}.`),P(u.shape[3]===a.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${a.shape[2]}.`),Mn("depthwiseConv2d",s,i);const l={x:u,filter:a},f={strides:e,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},m=Y.runKernel(Rl,l,f);return d?st(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Up=J({depthwiseConv2d_:O2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(n,t,e,s,o=[1,1],r="NHWC"){const i=z(n,"x","dilation2d"),c=z(t,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(c.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),P(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let a=i,u=!1;i.rank===3&&(a=st(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const d={x:a,filter:c},l={strides:e,pad:s,dilations:o},f=Y.runKernel(Dl,d,l);return u?st(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const W2=J({dilation2d_:z2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,t){let e=z(n,"a","equal","string_or_numeric"),s=z(t,"b","equal","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Bl,o)}const to=J({equal_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n,t,e){const s=z(t,"a","where"),o=z(e,"b","where"),r=z(n,"condition","where","bool"),i=te(te(r.shape,s.shape),o.shape),c=Wc(r,i),a=Wc(s,i),u=Wc(o,i),d={condition:c,t:a,e:u};return Y.runKernel(uu,d)}const Gn=J({where_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n){const e={x:z(n,"x","zerosLike")};return Y.runKernel(yu,e)}const he=J({zerosLike_:q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,t){let e=z(n,"a","div"),s=z(t,"b","div");[e,s]=qe(e,s);const o=zt(e,s),r=he(o),i=to(s,r);return Gn(i,r,o)}const j2=J({divNoNan_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,t){const e=z(n,"t1","dot"),s=z(t,"t2","dot");P((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const o=e.rank===1?e.size:e.shape[1],r=s.rank===1?s.size:s.shape[0];if(P(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),e.rank===1&&s.rank===1){const i=st(e,[1,-1]),c=st(s,[-1,1]),a=ye(i,c);return st(a,[])}else if(e.rank===1&&s.rank===2){const i=st(e,[1,-1]),c=st(s,[s.shape[0],s.shape[1]]),a=ye(i,c);return st(a,[a.size])}else if(e.rank===2&&s.rank===1){const i=st(s,[-1,1]),c=ye(e,i);return st(c,[c.size])}else{const i=st(s,[s.shape[0],s.shape[1]]);return ye(e,i)}}const X2=J({dot_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n){const e={x:z(n,"x","elu","float32")};return Y.runKernel(ya,e)}const Au=J({elu_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n){let t=z(n,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Tt(t,"float32"));const e={x:t};return Y.runKernel(va,e)}const Z2=J({erf_:J2});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gp(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Dy(n,t,e){const s=n.length+t.length,o=[];let r=0,i=0;for(let c=0;c<s;c++)e.indexOf(c)===-1?o.push(n[r++]):o.push(t[i++]);return o}function pn(n,t){const e=[],s=n.length;for(let r=0;r<s;r++)t.indexOf(r)===-1&&e.push(n[r]);const o=t.map(r=>n[r]);return[e,o]}function He(n,t){const e=t.map(s=>1);return Dy(n,e,t)}function yn(n,t,e){P(Gp(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ze(n,t){if(Gp(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Wo(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function je(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(n,t=null,e=!1){const o={x:z(n,"x","max")},r={reductionIndices:t,keepDims:e};return Y.runKernel(Hl,o,r)}const Xs=J({max_:Q2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,t=null,e=!1){const o={x:z(n,"x","min")},r={axis:t,keepDims:e};return Y.runKernel(Yl,o,r)}const cd=J({min_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n,t){let e=z(n,"base","pow"),s=z(t,"exp","pow");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(Fa,o)}const ii=J({pow_:eA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n,t){if((Zs(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Zs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return bu(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n){const e={x:z(n,"x","sqrt","float32")};return Y.runKernel(ja,e)}const Nn=J({sqrt_:nA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n){const t=z(n,"x","square"),e={};return Y.runKernel("Square",{x:t},e)}const Ne=J({square_:sA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,t=null,e=!1){let s=z(n,"x","sum");s.dtype==="bool"&&(s=Tt(s,"int32"));const o={x:s},r={axis:t,keepDims:e};return Y.runKernel(du,o,r)}const Mt=J({sum_:oA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,t="euclidean",e=null,s=!1){n=z(n,"x","norm");const o=By(n,t,e);let r=o.shape;if(s){const i=ie(e,n.shape);r=He(o.shape,i)}return st(o,r)}function By(n,t,e=null){if(n.rank===0)return ln(n);if(n.rank!==1&&e===null)return By(st(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Mt(ln(n),e);if(t===1/0)return Xs(ln(n),e);if(t===-1/0)return cd(ln(n),e);if(t==="euclidean"||t===2)return Nn(Mt(ii(ln(n),Yt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Xs(Mt(ln(n),e[0]),e[1]-1);if(t===1/0)return Xs(Mt(ln(n),e[1]),e[0]);if(t===-1/0)return cd(Mt(ln(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Nn(Mt(Ne(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const ku=J({norm_:rA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n,t=null,e=!1){return ku(n,"euclidean",t,e)}const aA=J({euclideanNorm_:iA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){const e={x:z(n,"x","exp")};return Y.runKernel(_a,e)}const gs=J({exp_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,t=0){const e=z(n,"x","expandDims","string_or_numeric");P(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},o={dim:t};return Y.runKernel(Fl,s,o)}const cs=J({expandDims_:lA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n){const e={x:z(n,"x","expm1")};return Y.runKernel(ba,e)}const hA=J({expm1_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n,t){const e=z(n,"x","tile","string_or_numeric");P(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},o={reps:t};return Y.runKernel(Za,s,o)}const Ts=J({tile_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n,t,e,s="float32"){t==null&&(t=n);const o=re([n,t],s),r=n<=t?n:t;for(let c=0;c<r;++c)o.set(1,c,c);const i=st(o.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return Ts(cs(i,0),[e[0],1,1]);if(e.length===2)return Ts(cs(cs(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Ts(cs(cs(cs(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const Fy=J({eye_:pA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $u(n,t,e){const s={shape:n,value:t,dtype:e};return Y.runKernel(Qd,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n){const e={x:z(n,"x","floor","float32")};return Y.runKernel(wa,e)}const Su=J({floor_:fA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,t,e=0,s=0){const o=z(n,"x","gather"),r=z(t,"indices","gather","int32"),i={x:o,indices:r},c={axis:e,batchDims:s};return Y.runKernel(Vl,i,c)}const qp=J({gather_:mA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,t){let e=z(n,"a","greater","string_or_numeric"),s=z(t,"b","greater","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ll,o)}const bs=J({greater_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,t){let e=z(n,"a","greaterEqual","string_or_numeric"),s=z(t,"b","greaterEqual","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ia,o)}const _i=J({greaterEqual_:xA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n){const e={x:z(n,"x","isFinite")};return Y.runKernel(ka,e)}const vA=J({isFinite_:yA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n){const e={x:z(n,"x","isInf")};return Y.runKernel($a,e)}const bA=J({isInf_:_A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n){const e={x:z(n,"x","isNaN")};return Y.runKernel(Sa,e)}const CA=J({isNaN_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,t=.2){const s={x:z(n,"x","leakyRelu")},o={alpha:t};return Y.runKernel(Pl,s,o)}const Hp=J({leakyRelu_:IA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,t){let e=z(n,"a","less","string_or_numeric"),s=z(t,"b","less","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ol,o)}const My=J({less_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,t){let e=z(n,"a","lessEqual","string_or_numeric"),s=z(t,"b","lessEqual","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(zl,o)}const bi=J({lessEqual_:kA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,t=5,e=1,s=1,o=.5){const r=z(n,"x","localResponseNormalization");P(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),P(ei(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=r,c=!1;r.rank===3&&(c=!0,i=st(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={x:i},u={depthRadius:t,bias:e,alpha:s,beta:o},d=Y.runKernel(ql,a,u);return c?st(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const SA=J({localResponseNormalization_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const e={x:z(n,"x","log","float32")};return Y.runKernel(Na,e)}const xs=J({log_:NA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n){const e={x:z(n,"x","log1p")};return Y.runKernel(Ta,e)}const jp=J({log1p_:TA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n,t){P(Wh(n),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(u=>u instanceof Jc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const u in Y.registeredVariables)t.push(Y.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,o=t.length;t=t.filter(u=>u.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:i,grads:c}=Y.gradients(n,t,null,r);P(c.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const a={};return t.forEach((u,d)=>{c[d]!=null&&(a[u.name]=c[d])}),s?.forEach(u=>a[u.name]=null),{value:i,grads:a}}function xr(n){return Y.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const e={x:z(n,"x","softplus")};return Y.runKernel(Ha,e)}const nc=J({softplus_:RA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n){const t=z(n,"x","logSigmoid");return xr(s=>({value:Oe(nc(Oe(s))),gradFunc:i=>K(i,vi(Oe(s)))}))(t)}const BA=J({logSigmoid_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,t){let e=z(n,"a","sub"),s=z(t,"b","sub");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(Xa,o)}const Vt=J({sub_:FA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,t=-1){const e=z(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return xr((o,r)=>{const c=Xs(o,t,!0),a=Vt(o,c),u=Vt(Tt(a,"float32"),xs(Mt(gs(a),t,!0)));return r([u]),{value:u,gradFunc:(l,f)=>{const[m]=f,x=!0,v=gs(m);return Vt(l,K(Mt(l,t,x),v))}}})(e)}const Vy=J({logSoftmax_:MA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,t=null,e=!1){const s=z(n,"x","logSumExp"),o=ie(t,s.shape),r=Xs(s,o,!0),i=Vt(s,r),c=gs(i),a=Mt(c,o),u=xs(a),d=bt(st(r,u.shape),u);if(e){const l=He(d.shape,o);return st(d,l)}return d}const Ly=J({logSumExp_:VA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n,t){const e=z(n,"a","logicalAnd","bool"),s=z(t,"b","logicalAnd","bool");te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Wl,o)}const mo=J({logicalAnd_:LA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n){const e={x:z(n,"x","logicalNot","bool")};return Y.runKernel(Ul,e)}const Kp=J({logicalNot_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,t){const e=z(n,"a","logicalOr","bool"),s=z(t,"b","logicalOr","bool");te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Gl,o)}const Py=J({logicalOr_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,t){const e=z(n,"a","logicalXor","bool"),s=z(t,"b","logicalXor","bool");return te(e.shape,s.shape),mo(Py(n,t),Kp(mo(n,t)))}const WA=J({logicalXor_:zA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,t,e,s,o){const r=z(n,"x","maxPool"),i=1;let c=r,a=!1;r.rank===3&&(a=!0,c=st(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(c.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),P(In(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Mn("maxPool",s,o);const u={x:c},d={filterSize:t,strides:e,pad:s,dimRoundingMode:o},l=Y.runKernel(jl,u,d);return a?st(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Xp=J({maxPool_:UA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n,t=[1,1,1],e,s,o,r="NDHWC"){const i=z(n,"x","maxPool3d");let c=i,a=!1;i.rank===4&&(a=!0,c=st(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(c.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`),P(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Mn("maxPool3d",s,o);const u={x:c},d={filterSize:t,strides:e,pad:s,dimRoundingMode:o,dataFormat:r},l=Y.runKernel(Kl,u,d);return a?st(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}const qA=J({maxPool3d_:GA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,t){let e=z(n,"a","maximum"),s=z(t,"b","maximum");[e,s]=qe(e,s),e.dtype==="bool"&&(e=Tt(e,"int32"),s=Tt(s,"int32")),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ea,o)}const Uo=J({maximum_:HA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n,t=null,e=!1){const o={x:z(n,"x","mean")},r={axis:t,keepDims:e};return Y.runKernel(Xl,o,r)}const Ue=J({mean_:jA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(n,t="float32"){if(t==="complex64"){const s=Ge(n,"float32"),o=Ge(n,"float32");return oi(s,o)}const e=Cn(pt(n),t);return Y.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(n,t="float32"){if(t==="complex64"){const s=Go(n,"float32"),o=Ge(n,"float32");return oi(s,o)}const e=Bd(pt(n),t);return Y.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,t){let e=z(n,"a","minimum"),s=z(t,"b","minimum");[e,s]=qe(e,s),e.dtype==="bool"&&(e=Tt(e,"int32"),s=Tt(s,"int32")),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ra,o)}const Nu=J({minimum_:KA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,t,e){P(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=z(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const o=e==="reflect"?1:0;for(let c=0;c<s.rank;c++)P(t[c].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[c][0]>=0&&t[c][0]<=s.shape[c]-o&&t[c][1]>=0&&t[c][1]<=s.shape[c]-o,()=>`Padding in dimension ${c} cannot be greater than or equal to ${s.shape[c]-o} or less than 0 for input of shape ${s.shape}`);const r={paddings:t,mode:e},i={x:s};return Y.runKernel(Jl,i,r)}const YA=J({mirrorPad_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,t){let e=z(n,"a","mod"),s=z(t,"b","mod");[e,s]=qe(e,s);const o={a:e,b:s};return Y.runKernel(Da,o)}const ZA=J({mod_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(n,t=null,e=!1){n=z(n,"x","moments");const s=ie(t,n.shape),o=Ue(n,s,e);let r=o.shape;e||(r=He(o.shape,s));const i=Ne(Vt(Tt(n,"float32"),st(o,r))),c=Ue(i,s,e);return{mean:o,variance:c}}const Yp=J({moments_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,t){let e=z(n,"a","notEqual","string_or_numeric"),s=z(t,"b","notEqual","string_or_numeric");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s};return Y.runKernel(Ql,o)}const Xi=J({notEqual_:tk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n){const e={x:z(n,"x","onesLike")};return Y.runKernel(tu,e)}const ys=J({onesLike_:ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,t,e=0){const s=z(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:e},r={x:s};return Y.runKernel(su,r,o)}const Jp=J({pad_:nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n,t,e){const s=z(n,"x","spaceToBatchND");P(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),P(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),P(s.shape.reduce((i,c,a)=>a>0&&a<=t.length?i&&(c+e[a-1][0]+e[a-1][1])%t[a-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:s},r={blockShape:t,paddings:e};return Y.runKernel(pu,o,r)}const Zp=J({spaceToBatchND_:sk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n,t,e,s,o,r,i){o==null&&(o=[1,1]),r==null&&(r=1),s===0&&(s="valid");const c=z(n,"x","maxPool");let a=c,u=!1;c.rank===3&&(u=!0,a=st(c,[1,c.shape[0],c.shape[1],c.shape[2]])),P(In(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const d=_s(a.shape,t,r,o,s),l=[d.dilationHeight,d.dilationWidth];let f;s==="same"?f=ik([d.filterHeight,d.filterWidth],l):f=[[0,0],[0,0]];const m=l[0]===1&&l[1]===1,[x,v]=rk([d.inHeight,d.inWidth],l,f),b=m?s:"valid",w=m?a:Zp(a,l,x),C=(e==="avg"?()=>Lp(w,t,r,b,i):()=>Xp(w,t,r,b,i))(),I=m?C:Op(C,l,v);return u?st(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function rk(n,t,e){const s=e.map(d=>d[0]),o=e.map(d=>d[1]),r=n.concat(s,o),i=t.map((d,l)=>(d-r[l]%d)%d),c=o.map((d,l)=>d+i[l]),a=t.map((d,l)=>[s[l],c[l]]),u=t.map((d,l)=>[0,i[l]]);return[a,u]}function ik(n,t){const s=n.map((i,c)=>i+(i-1)*(t[c]-1)).map(i=>i-1),o=s.map(i=>Math.floor(i/2)),r=s.map((i,c)=>i-o[c]);return s.map((i,c)=>[o[c],r[c]])}const ak=J({pool_:ok});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n,t){const e=z(n,"x","prelu"),s=z(t,"alpha","prelu"),o={x:e,alpha:s};return Y.runKernel(ou,o)}const Qp=J({prelu_:ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n,t=null,e=!1){let s=z(n,"x","prod");s.dtype==="bool"&&(s=Tt(s,"int32"));const o={x:s},r={axis:t,keepDims:e};return Y.runKernel(ru,o,r)}const uk=J({prod_:lk});var Oy={exports:{}};(function(n){(function(t,e,s){function o(a){var u=this,d=c();u.next=function(){var l=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=l-(u.c=l|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(a),u.s0<0&&(u.s0+=1),u.s1-=d(a),u.s1<0&&(u.s1+=1),u.s2-=d(a),u.s2<0&&(u.s2+=1),d=null}function r(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function i(a,u){var d=new o(a),l=u&&u.state,f=d.next;return f.int32=function(){return d.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,l&&(typeof l=="object"&&r(l,d),f.state=function(){return r(d,{})}),f}function c(){var a=4022871197,u=function(d){d=d.toString();for(var l=0;l<d.length;l++){a+=d.charCodeAt(l);var f=.02519603282416938*a;a=f>>>0,f-=a,f*=a,a=f>>>0,f-=a,a+=f*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(dn,n,!1)})(Oy);var zy={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var l=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^l^l>>>8},c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(dn,n,!1)})(zy);var Wy={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(l^l<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,d==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(dn,n,!1)})(Wy);var Uy={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.x,l=a.i,f,m;return f=d[l],f^=f>>>7,m=f^f<<24,f=d[l+1&7],m^=f^f>>>10,f=d[l+3&7],m^=f^f>>>3,f=d[l+4&7],m^=f^f<<7,f=d[l+7&7],f=f^f<<13,m^=f^f<<9,d[l]=m,a.i=l+1&7,m};function u(d,l){var f,m=[];if(l===(l|0))m[0]=l;else for(l=""+l,f=0;f<l.length;++f)m[f&7]=m[f&7]<<15^l.charCodeAt(f)+m[f+1&7]<<13;for(;m.length<8;)m.push(0);for(f=0;f<8&&m[f]===0;++f);for(f==8?m[7]=-1:m[f],d.x=m,d.i=0,f=256;f>0;--f)d.next()}u(a,c)}function r(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.x&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(dn,n,!1)})(Uy);var Gy={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.w,l=a.X,f=a.i,m,x;return a.w=d=d+1640531527|0,x=l[f+34&127],m=l[f=f+1&127],x^=x<<13,m^=m<<17,x^=x>>>15,m^=m>>>12,x=l[f]=x^m,a.i=f,x+(d^d>>>16)|0};function u(d,l){var f,m,x,v,b,w=[],A=128;for(l===(l|0)?(m=l,l=null):(l=l+"\0",m=0,A=Math.max(A,l.length)),x=0,v=-32;v<A;++v)l&&(m^=l.charCodeAt((v+32)%l.length)),v===0&&(b=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,v>=0&&(b=b+1640531527|0,f=w[v&127]^=m+b,x=f==0?x+1:0);for(x>=128&&(w[(l&&l.length||0)&127]=-1),x=127,v=4*128;v>0;--v)m=w[x+34&127],f=w[x=x+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,w[x]=m^f;d.w=b,d.X=w,d.i=x}u(a,c)}function r(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.X&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(dn,n,!1)})(Gy);var qy={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.b,f=a.c,m=a.d,x=a.a;return l=l<<25^l>>>7^f,f=f-m|0,m=m<<24^m>>>8^x,x=x-l|0,a.b=l=l<<20^l>>>12^f,a.c=f=f-m|0,a.d=m<<16^f>>>16^x,a.a=x-l|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):u+=c;for(var d=0;d<u.length+20;d++)a.b^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(dn,n,!1)})(qy);var Hy={exports:{}};(function(n){(function(t,e){var s=this,o=256,r=6,i=52,c="random",a=e.pow(o,r),u=e.pow(2,i),d=u*2,l=o-1,f;function m(I,N,E){var B=[];N=N==!0?{entropy:!0}:N||{};var M=w(b(N.entropy?[I,C(t)]:I??A(),3),B),U=new x(B),G=function(){for(var q=U.g(r),tt=a,et=0;q<u;)q=(q+et)*o,tt*=o,et=U.g(1);for(;q>=d;)q/=2,tt/=2,et>>>=1;return(q+et)/tt};return G.int32=function(){return U.g(4)|0},G.quick=function(){return U.g(4)/4294967296},G.double=G,w(C(U.S),t),(N.pass||E||function(q,tt,et,Q){return Q&&(Q.S&&v(Q,U),q.state=function(){return v(U,{})}),et?(e[c]=q,tt):q})(G,M,"global"in N?N.global:this==e,N.state)}e["seed"+c]=m;function x(I){var N,E=I.length,B=this,M=0,U=B.i=B.j=0,G=B.S=[];for(E||(I=[E++]);M<o;)G[M]=M++;for(M=0;M<o;M++)G[M]=G[U=l&U+I[M%E]+(N=G[M])],G[U]=N;(B.g=function(q){for(var tt,et=0,Q=B.i,it=B.j,nt=B.S;q--;)tt=nt[Q=l&Q+1],et=et*o+nt[l&(nt[Q]=nt[it=l&it+tt])+(nt[it]=tt)];return B.i=Q,B.j=it,et})(o)}function v(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function b(I,N){var E=[],B=typeof I,M;if(N&&B=="object")for(M in I)try{E.push(b(I[M],N-1))}catch{}return E.length?E:B=="string"?I:I+"\0"}function w(I,N){for(var E=I+"",B,M=0;M<E.length;)N[l&M]=l&(B^=N[l&M]*19)+E.charCodeAt(M++);return C(N)}function A(){try{var I;return f&&(I=f.randomBytes)?I=I(o):(I=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(I)),C(I)}catch{var N=s.navigator,E=N&&N.plugins;return[+new Date,s,E,s.screen,C(t)]}}function C(I){return String.fromCharCode.apply(0,I)}if(w(e.random(),t),n.exports){n.exports=m;try{f=require("crypto")}catch{}}})([],Math)})(Hy);var hk=Oy.exports,dk=zy.exports,pk=Wy.exports,fk=Uy.exports,mk=Gy.exports,gk=qy.exports,kr=Hy.exports;kr.alea=hk;kr.xor128=dk;kr.xorwow=pk;kr.xorshift7=fk;kr.xor4096=mk;kr.tychei=gk;var jy=kr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ky{constructor(t,e,s,o,r){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=jy.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let t,e,s=!1;for(;!s;){let o,r,i;do o=2*this.random()-1,r=2*this.random()-1,i=o*o+r*r;while(i>=1||i===0);const c=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*c,e=this.mean+this.stdDev*r*c,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class xk{constructor(t=0,e=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=jy.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n,t=0,e=1,s,o){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Ky(t,e,s,!1,o),i=re(n,s);for(let c=0;c<i.values.length;c++)i.values[c]=r.nextValue();return i.toTensor()}const vk=J({randomNormal_:yk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n,t=0,e=1,s="float32",o){const r=re(n,s),i=new xk(t,e,null,o);for(let c=0;c<r.values.length;c++)r.values[c]=i.nextValue();return r.toTensor()}const Tu=J({randomUniform_:_k});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tl(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:t,step:e,dtype:s};return Y.runKernel(lp,{},o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n){const e={x:z(n,"x","reciprocal")};return Y.runKernel(Ma,e)}const wk=J({reciprocal_:bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(n){const e={x:z(n,"x","relu")};return Y.runKernel(Va,e)}const vo=J({relu_:Ck});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const e={x:z(n,"x","relu6")};return Y.runKernel(La,e)}const Xy=J({relu6_:Ik});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,t){const s={x:z(n,"x","reverse")},o={dims:t};return Y.runKernel(lu,s,o)}const yr=J({reverse_:Ak});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(n){const e={x:z(n,"x","round")};return Y.runKernel(Pa,e)}const Yy=J({round_:kk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(n){const e={x:z(n,"x","rsqrt","float32")};return Y.runKernel(Oa,e)}const Jy=J({rsqrt_:$k});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n){const e={x:z(n,"x","selu")};return Y.runKernel(za,e)}const Zy=J({selu_:Sk});function Nk(n,t,e,s,o,r=[1,1],i="NHWC"){const c=z(n,"x","separableConv2d"),a=z(t,"depthwiseFilter","separableConv2d"),u=z(e,"pointwiseFilter","separableConv2d");let d=c,l=!1;if(c.rank===3&&(l=!0,d=st(c,[1,c.shape[0],c.shape[1],c.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),P(a.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${a.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${a.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const f=a.shape[2],m=a.shape[3];P(u.shape[2]===f*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*m}, but got ${u.shape[2]}.`);const x=Up(d,a,s,o,i,r),b=gr(x,u,1,"valid",i);return l?st(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Qy=J({separableConv2d_:Nk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n){const e={x:z(n,"x","sign")};return Y.runKernel(Ga,e)}const Ek=J({sign_:Tk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n){const e={x:z(n,"x","sin","float32")};return Y.runKernel(Wa,e)}const tv=J({sin_:Rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n){const e={x:z(n,"x","sinh")};return Y.runKernel(Ua,e)}const ev=J({sinh_:Dk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,t,e){const s=z(n,"x","slice1d");return P(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ie(s,[t],[e])}const tf=J({slice1d_:Bk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,t,e){const s=z(n,"x","slice2d");return P(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ie(s,t,e)}const nv=J({slice2d_:Fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n,t,e){const s=z(n,"x","slice3d");return P(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ie(s,t,e)}const ef=J({slice3d_:Mk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,t,e){const s=z(n,"x","slice4d");return P(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ie(s,t,e)}const el=J({slice4d_:Vk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n,t=-1){const e=z(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},o={dim:t};return Y.runKernel(mu,s,o)}const nf=J({softmax_:Lk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return Y.runKernel(Zd,t)}const sv=J({fft_:Pk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return Y.runKernel(ep,t)}const ld=J({ifft_:Ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const o=st(n,[e,t]);s=ld(o)}else{const o=[e,2*(t-1)],r=st(Zc(n),[e,t]),i=st(Tp(n),[e,t]),c=yr(Ie(r,[0,1],[e,t-2]),1),a=K(yr(Ie(i,[0,1],[e,t-2]),1),Yt(-1)),u=wn([r,c],1),d=wn([i,a],1),l=st(oi(u,d),[o[0],o[1]]);s=ld(l)}if(s=Zc(s),n.rank===3&&n.shape[0]!==0){const o=s,r=n.shape[0];s=st(s,[r,s.shape[0]/r,s.shape[1]]),o.dispose()}return s}const Wk=J({irfft_:zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n,t,e=0){const o={x:z(n,"x","split")},r={numOrSizeSplits:t,axis:e};return Y.runKernel(fu,o,r)}const ts=J({split_:Uk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,t){P(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let o;if(t!=null&&t<e){const x=n.shape.map(b=>0),v=n.shape.map(b=>b);v[n.shape.length-1]=t,o=Ie(n,x,v),e=t}else if(t!=null&&t>e){const x=n.shape.map(v=>v);x[n.shape.length-1]=t-e,o=wn([n,Ge(x)],n.shape.length-1),e=t}else o=n;const r=he(o),i=st(oi(o,r),[s,e]),c=sv(i),a=Math.floor(e/2)+1,u=Zc(c),d=Tp(c),l=ts(u,[a,e-a],u.shape.length-1),f=ts(d,[a,e-a],d.shape.length-1),m=o.shape.slice();return m[o.shape.length-1]=a,st(oi(l[0],f[0]),m)}const ov=J({rfft_:Gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n,t){let e=z(n,"a","squaredDifference"),s=z(t,"b","squaredDifference");[e,s]=qe(e,s),te(e.shape,s.shape);const o={a:e,b:s},r={};return Y.runKernel(Ka,o,r)}const rv=J({squaredDifference_:qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(n,t){const e=z(n,"x","squeeze");return st(e,Po(e.shape,t).newShape)}const sc=J({squeeze_:Hk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n,t=0){const e=ry(n,"tensors","stack","string_or_numeric");P(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&P(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,o={axis:t};return Y.runKernel(nu,s,o)}const vr=J({stack_:jk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n,t=0){const s={x:z(n,"x","step")},o={alpha:t};return Y.runKernel(Qa,s,o)}const oc=J({step_:Kk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n,t,e,s,o=0,r=0,i=0,c=0,a=0){const d={x:z(n,"x","stridedSlice","string_or_numeric")},l={begin:t,end:e,strides:s,beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:a};return Y.runKernel(yp,d,l)}const Yk=J({stridedSlice_:Xk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const e={x:z(n,"x","tan","float32")};return Y.runKernel(Ya,e)}const Zk=J({tan_:Jk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n,t){Cx(n);const e=_u(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return bu(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hi(n,t,e){if(Cx(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=_u(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return bu(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,t=1,e=!0){const s=z(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const r={x:s},i={k:t,sorted:e},[c,a]=Y.runKernel(wp,r,i);return{values:c,indices:a}}const t$=J({topk_:Qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,t=0,e=1,s,o){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Ky(t,e,s,!0,o),i=re(n,s);for(let c=0;c<i.values.length;c++)i.values[c]=r.nextValue();return i.toTensor()}const iv=J({truncatedNormal_:e$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,t=0){const e=z(n,"x","unique","string_or_numeric");P(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},o={axis:t},[r,i]=Y.runKernel(Ip,s,o);return{values:r,indices:i}}const s$=J({unique_:n$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,t,e){const s=z(n,"x","unsortedSegmentSum"),o=z(t,"segmentIds","unsortedSegmentSum","int32");P(ei(e),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:o},i={numSegments:e};return Y.runKernel(xu,r,i)}const av=J({unsortedSegmentSum_:o$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(n,t=0){const e=z(n,"x","unstack","string_or_numeric");P(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},o={axis:t};return Y.runKernel(gu,s,o)}const ai=J({unstack_:r$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n,t=!0,e,s){return Y.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cv(n,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const s=re(n,"int32"),o=re([e.length,n.length],"int32");for(let r=0;r<e.length;r++){const i=s.indexToLoc(e[r]),c=r*n.length;o.values.set(i,c)}return o.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,t){if(t==null)return n.shape.slice();if(ve(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,t,e,s){const o=z(n,"x","dropout");if(P(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Je?o.clone():o;const r=a$(o,e),i=1-t,c=zt(Su(bt(Tu(r,0,1,"float32",s),i)),i);return K(o,c)}const l$=J({dropout_:c$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function lv(n,t,e){const s=1-n%2,o=new Float32Array(n);for(let r=0;r<n;++r){const i=2*Math.PI*r/(n+s-1);o[r]=t-e*Math.cos(i)}return Wn(o,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n,t,e,s,o,r="NHWC",i){let c=n;n.rank===3&&(c=st(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let a=t;a.rank===3&&(a=st(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(c.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),P(a.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${a.shape}.`),P(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u=r==="NHWC"?c.shape[3]:c.shape[1],d=r==="NHWC"?a.shape[3]:a.shape[1];P(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),P(d===e[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${e[3]}).`),Mn("conv2dDerFilter",o,i);const l={x:c,dy:a},f={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,filterShape:e};return Y.runKernel(Ud,l,f)}const sf=J({conv2DBackpropFilter_:h$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function of(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return K(n,oc(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function rf(n,t){let e=t;const s=rn(n.shape,t.shape);return s.length>0&&(e=Mt(e,s)),st(e,n.shape)}function af(n,t,e,s){if(t==="linear")return n;if(t==="relu")return vo(n);if(t==="elu")return Au(n);if(t==="relu6")return Xy(n);if(t==="prelu")return Qp(n,e);if(t==="leakyrelu")return Hp(n,s);if(t==="sigmoid")return vi(n);throw new Error(`Unknown fused activation ${t}.`)}const cf=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$({x:n,filter:t,strides:e,pad:s,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:c,activation:a="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(a=a||"linear",cf(Y.state.gradientDepth,a)===!1){P(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=gr(n,t,e,s,o,r,i);return c!=null&&(E=bt(E,c)),af(E,a,u,d)}const l=z(n,"x","conv2d","float32"),f=z(t,"filter","conv2d","float32");let m=l,x=!1;l.rank===3&&(x=!0,m=st(l,[1,l.shape[0],l.shape[1],l.shape[2]])),P(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),P(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),Mn("fused conv2d",s,i);const v=o==="NHWC"?m.shape[3]:m.shape[1];P(f.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${f.shape[2]}.`),P(In(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const b=xn(m.shape,f.shape,e,r,s,i);let w;c!=null&&(w=z(c,"bias","fused conv2d"),[w]=qe(w,l),o==="NHWC"?te(b.outShape,w.shape):(P(w.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${w.shape.length}.`),P(w.shape.length===0||w.shape[0]===b.outChannels||w.shape[0]===1,()=>`Error in fused conv2d: bias shape (${w.shape}) is not compatible with the number of output channels (${b.outChannels})`)));let A;if(u!=null){const E=u.shape;if(P(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)P(E[0]===1||E[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${b.outChannels}).`);else if(E.length===3)try{te(E,b.outShape)}catch{const M=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(M)}A=z(u,"prelu weights","fused conv2d")}const C=(E,B)=>{P(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[M,U,G,q]=B,tt=of(E,G,a);P(mr(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const et=zp(U.shape,tt,M,e,s),Q=sf(U,tt,M.shape,e,s),it=[et,Q];if(q!=null){const nt=rf(q,tt);it.push(nt)}return it},I={x:m,filter:f,bias:w,preluActivationWeights:A},N={strides:e,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i,activation:a,leakyreluAlpha:d};return c==null?xr((B,M,U)=>{let G=Y.runKernel(Kc,I,N);return U([M,B,G]),x&&(G=st(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:C}})(m,f):xr((B,M,U,G)=>{let q=Y.runKernel(Kc,I,N);return G([M,B,q,U]),x&&(q=st(q,[q.shape[1],q.shape[2],q.shape[3]])),{value:q,gradFunc:C}})(m,f,w)}const p$=J({fusedConv2d_:d$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,t,e,s,o,r=[1,1],i){let c=n;n.rank===3&&(c=st(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let a=t;a.rank===3&&(a=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:c,dy:a},d={strides:s,pad:o,dimRoundingMode:i,dilations:r,filterShape:e};return Y.runKernel(Xd,u,d)}const m$=J({depthwiseConv2dNativeBackpropFilter_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,t,e,s,o,r=[1,1],i){let c=t,a=!1;t.rank===3&&(a=!0,c=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:c,filter:e},d={strides:s,pad:o,dimRoundingMode:i,dilations:r,inputShape:n},l=Y.runKernel(Yd,u,d);return a?st(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const x$=J({depthwiseConv2dNativeBackpropInput_:g$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:o,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:c}){if(cf(Y.state.gradientDepth,r)===!1){let q=ye(n,t,e,s);return o!=null&&(q=bt(q,o)),af(q,r,i,c)}let a=z(n,"a","fused matMul"),u=z(t,"b","fused matMul");[a,u]=qe(a,u);const d=e?a.shape[a.rank-2]:a.shape[a.rank-1],l=s?u.shape[u.rank-1]:u.shape[u.rank-2],f=e?a.shape[a.rank-1]:a.shape[a.rank-2],m=s?u.shape[u.rank-2]:u.shape[u.rank-1],x=a.shape.slice(0,-2),v=u.shape.slice(0,-2),b=pt(x),w=pt(v);P(d===l,()=>`Error in fused matMul: inner shapes (${d}) and (${l}) of Tensors with shapes ${a.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const C=te(a.shape.slice(0,-2),u.shape.slice(0,-2)).concat([f,m]),I=e?st(a,[b,d,f]):st(a,[b,f,d]),N=s?st(u,[w,m,l]):st(u,[w,l,m]);let E;o!=null&&(E=z(o,"bias","fused matMul"),[E]=qe(E,a),te(C,E.shape));let B;i!=null&&(B=z(i,"prelu weights","fused matMul"));const M=(q,tt)=>{const[et,Q,it,nt]=tt,Z=of(st(q,it.shape),it,r);let lt,ct;if(!e&&!s?(lt=ye(Z,Q,!1,!0),ct=ye(et,Z,!0,!1)):!e&&s?(lt=ye(Z,Q,!1,!1),ct=ye(Z,et,!0,!1)):e&&!s?(lt=ye(Q,Z,!1,!0),ct=ye(et,Z,!1,!1)):(lt=ye(Q,Z,!0,!0),ct=ye(Z,et,!0,!0)),o!=null){const ut=rf(nt,Z);return[lt,ct,ut]}else return[lt,ct]},U={a:I,b:N,bias:E,preluActivationWeights:B},G={transposeA:e,transposeB:s,activation:r,leakyreluAlpha:c};return o==null?xr((tt,et,Q)=>{const it=Y.runKernel(jc,U,G);return Q([tt,et,it]),{value:st(it,C),gradFunc:M}})(I,N):xr((tt,et,Q,it)=>{const nt=Y.runKernel(jc,U,G);return it([tt,et,nt,Q]),{value:st(nt,C),gradFunc:M}})(I,N,E)}const rg=J({fusedMatMul_:y$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n){return lv(n,.54,.46)}const Bj=J({hammingWindow_:v$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n){return lv(n,.5,.5)}const b$=J({hannWindow_:_$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n,t,e,s=!1,o=0){let r=0;const i=[];for(;r+t<=n.size;)i.push(Ie(n,r,t)),r+=e;if(s)for(;r<n.size;){const c=r+t-n.size,a=wn([Ie(n,r,t-c),$u([c],o)]);i.push(a),r+=e}return i.length===0?Hi([],[0,t]):st(wn(i),[i.length,t])}const C$=J({frame_:w$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,t,e,s,o=b$){s==null&&(s=u$(t));const r=C$(n,t,e),i=K(r,o(t));return ov(i,s)}const Fj=J({stft_:I$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(n,t,e,s,o="bilinear",r=0){const i=z(n,"image","cropAndResize"),c=z(t,"boxes","cropAndResize","float32"),a=z(e,"boxInd","cropAndResize","int32"),u=c.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(c.rank===2&&c.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${c.shape}.`),P(a.rank===1&&a.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${c.shape}.`),P(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),P(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),P(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const d={image:i,boxes:c,boxInd:a},l={method:o,extrapolationValue:r,cropSize:s};return Y.runKernel(jd,d,l)}const k$=J({cropAndResize_:A$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n){const t=z(n,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return Y.runKernel(tp,e,{})}const S$=J({flipLeftRight_:$$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(n){const t=z(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Ts(t,o)}const T$=J({grayscaleToRGB_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,t,e=0,s=.5){const o=z(n,"image","rotateWithOffset","float32");P(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},i={radians:t,fillValue:e,center:s};return Y.runKernel(Ap,r,i)}const R$=J({rotateWithOffset_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wi(n,t,e,s,o,r){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return e=Math.min(e,i),P(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),P(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),P(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),P(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY){const r=z(n,"boxes","nonMaxSuppression","float32"),i=z(t,"scores","nonMaxSuppression","float32"),c=wi(r,i,e,s,o);e=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold;const a={maxOutputSize:e,iouThreshold:s,scoreThreshold:o};return Y.runKernel(ip,{boxes:r,scores:i},a)}const B$=J({nonMaxSuppression_:D$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,t,e){const s=M$(n,t,e),o=s<0?-(s+1):s;n.splice(o,0,t)}function M$(n,t,e){return L$(n,t,e||V$)}function V$(n,t){return n>t?1:n<t?-1:0}function L$(n,t,e){let s=0,o=n.length,r=0,i=!1;for(;s<o;){r=s+(o-s>>>1);const c=e(t,n[r]);c>0?s=r+1:(o=r,i=!c)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lf(n,t,e,s,o){return df(n,t,e,s,o,0)}function uf(n,t,e,s,o,r){return df(n,t,e,s,o,0,!1,r,!0)}function hf(n,t,e,s,o,r){return df(n,t,e,s,o,r,!0)}function df(n,t,e,s,o,r,i=!1,c=!1,a=!1){const u=[];for(let b=0;b<t.length;b++)t[b]>o&&u.push({score:t[b],boxIndex:b,suppressBeginIndex:0});u.sort(ig);const d=r>0?-.5/r:0,l=[],f=[];for(;l.length<e&&u.length>0;){const b=u.pop(),{score:w,boxIndex:A,suppressBeginIndex:C}=b;if(w<o)break;let I=!1;for(let N=l.length-1;N>=C;--N){const E=P$(n,A,l[N]);if(E>=s){I=!0;break}if(b.score=b.score*O$(s,d,E),b.score<=o)break}b.suppressBeginIndex=l.length,I||(b.score===w?(l.push(A),f.push(b.score)):b.score>o&&F$(u,b,ig))}const m=l.length,x=e-m;c&&x>0&&(l.push(...new Array(x).fill(0)),f.push(...new Array(x).fill(0)));const v={selectedIndices:l};return i&&(v.selectedScores=f),a&&(v.validOutputs=m),v}function P$(n,t,e){const s=n.subarray(t*4,t*4+4),o=n.subarray(e*4,e*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),a=Math.max(s[1],s[3]),u=Math.min(o[0],o[2]),d=Math.min(o[1],o[3]),l=Math.max(o[0],o[2]),f=Math.max(o[1],o[3]),m=(c-r)*(a-i),x=(l-u)*(f-d);if(m<=0||x<=0)return 0;const v=Math.max(r,u),b=Math.max(i,d),w=Math.min(c,l),A=Math.min(a,f),C=Math.max(w-v,0)*Math.max(A-b,0);return C/(m+x-C)}function O$(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function ig(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function z$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY){const r=z(n,"boxes","nonMaxSuppressionAsync"),i=z(t,"scores","nonMaxSuppressionAsync"),c=wi(r,i,e,s,o);e=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold;const a=await Promise.all([r.data(),i.data()]),u=a[0],d=a[1],{selectedIndices:l}=lf(u,d,e,s,o);return r!==n&&r.dispose(),i!==t&&i.dispose(),Wn(l,"int32")}const W$=z$;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=z(n,"boxes","nonMaxSuppression"),c=z(t,"scores","nonMaxSuppression"),a=wi(i,c,e,s,o,r);e=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold,r=a.softNmsSigma;const u={boxes:i,scores:c},d={maxOutputSize:e,iouThreshold:s,scoreThreshold:o,softNmsSigma:r},l=Y.runKernel(cp,u,d);return{selectedIndices:l[0],selectedScores:l[1]}}const G$=J({nonMaxSuppressionWithScore_:U$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function q$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=z(n,"boxes","nonMaxSuppressionAsync"),c=z(t,"scores","nonMaxSuppressionAsync"),a=wi(i,c,e,s,o,r);e=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold,r=a.softNmsSigma;const u=await Promise.all([i.data(),c.data()]),d=u[0],l=u[1],{selectedIndices:f,selectedScores:m}=hf(d,l,e,s,o,r);return i!==n&&i.dispose(),c!==t&&c.dispose(),{selectedIndices:Wn(f,"int32"),selectedScores:Wn(m)}}const H$=q$;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=z(n,"boxes","nonMaxSuppression"),c=z(t,"scores","nonMaxSuppression"),a=wi(i,c,e,s,o,null),u=a.maxOutputSize,d=a.iouThreshold,l=a.scoreThreshold,f={boxes:i,scores:c},m={maxOutputSize:u,iouThreshold:d,scoreThreshold:l,padToMaxOutputSize:r},x=Y.runKernel(ap,f,m);return{selectedIndices:x[0],validOutputs:x[1]}}const K$=J({nonMaxSuppressionPadded_:j$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function X$(n,t,e,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=z(n,"boxes","nonMaxSuppressionAsync"),c=z(t,"scores","nonMaxSuppressionAsync"),a=wi(i,c,e,s,o,null),u=a.maxOutputSize,d=a.iouThreshold,l=a.scoreThreshold,[f,m]=await Promise.all([i.data(),c.data()]),{selectedIndices:x,validOutputs:v}=uf(f,m,u,d,l,r);return i!==n&&i.dispose(),c!==t&&c.dispose(),{selectedIndices:Wn(x,"int32"),validOutputs:Yt(v,"int32")}}const Y$=X$;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n,t,e=!1,s=!1){const o=z(n,"images","resizeBilinear");P(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=st(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={images:r},a={alignCorners:e,halfPixelCenters:s,size:t},u=Y.runKernel(cu,c,a);return i?st(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const uv=J({resizeBilinear_:J$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,t,e=!1,s=!1){const o=z(n,"images","resizeNearestNeighbor");P(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=st(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={images:r},a={alignCorners:e,halfPixelCenters:s,size:t},u=Y.runKernel(au,c,a);return i?st(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const hv=J({resizeNearestNeighbor_:Z$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,t="binary",e=!1,s=.5){const o=z(n,"image","threshold"),r=.2989,i=.587,c=.114,a=o.shape[0]*o.shape[1];let u=K(Wn([s]),255),d,l,f,m;if(P(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),P(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),P(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[d,l,f]=ts(o,[1,1,1],-1);const b=K(d,r),w=K(l,i),A=K(f,c);m=bt(bt(b,w),A)}else m=n;if(t==="otsu"){const b=d2(Tt(Yy(m),"int32"),Pi([]),256);u=tS(b,a)}const x=e?bi(m,u):bs(m,u);return Tt(K(x,255),"int32")}function tS(n,t){let e=Wn([-1]),s=Wn([0]),o=Wn([0]),r,i,c,a,u,d;for(let l=0;l<n.size-1;l++){r=Ie(n,0,l+1),i=Ie(n,l+1),u=zt(Mt(r),t),d=zt(Mt(i),t);const f=Mt(K(r,tl(0,r.size)));c=zt(f,Mt(r));const m=$u(i.shape,r.size),x=bt(tl(0,i.size),m),v=K(i,x);a=zt(Mt(v),Mt(i));const b=Vt(c,a),w=Vt(c,a),A=K(u,d);o=K(K(A,b),w);const C=bs(o,s);s=Gn(C,o,s),e=Gn(C,Wn([l]),e)}return e}const eS=J({threshold_:Q$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,t,e="nearest",s="constant",o=0,r){const i=z(n,"image","transform","float32"),c=z(t,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(c.rank===2&&(c.shape[0]===i.shape[0]||c.shape[0]===1)&&c.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const a={image:i,transforms:c},u={interpolation:e,fillMode:s,fillValue:o,outputShape:r};return Y.runKernel(Cp,a,u)}const sS=J({transform_:nS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,t,e){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const s=z(n,"a","bandPart");P(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[r,i]=s.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=i))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`);t<0&&(t=r),e<0&&(e=i);const c=st(tl(0,r,1,"int32"),[-1,1]),a=tl(0,i,1,"int32"),u=Vt(c,a),d=mo(bi(u,Yt(+t,"int32")),_i(u,Yt(-e,"int32"))),l=Ge([r,i],s.dtype);return st(vr(ai(st(s,[-1,r,i])).map(f=>Gn(d,f,l))),o)}const rS=J({bandPart_:oS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n){let t;if(Array.isArray(n)){t=!1,P(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let r=1;r<n.length;++r)P(n[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${o})`)}else t=!0,n=ts(n,n.shape[0],0).map(o=>sc(o,[0]));P(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let o=0;o<n.length;++o)e.push(Y.tidy(()=>{let r=s[o];if(o>0)for(let i=0;i<o;++i){const c=K(Mt(K(e[i],r)),e[i]);r=Vt(r,c)}return zt(r,ku(r,"euclidean"))}));return t?vr(e,0):e}const aS=J({gramSchmidt_:iS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,t=!1){if(P(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return ag(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((a,u)=>a*u),s=ai(st(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],r=[];s.forEach(a=>{const[u,d]=ag(a,t);o.push(u),r.push(d)});const i=st(vr(o,0),n.shape),c=st(vr(r,0),n.shape);return[i,c]}}function ag(n,t=!1){return Y.tidy(()=>{P(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let o=Fy(e),r=ar(n);const i=Hi([[1]],[1,1]);let c=ar(i);const a=e>=s?s:e;for(let u=0;u<a;++u){const d=r,l=c,f=o;[c,r,o]=Y.tidy(()=>{const m=Ie(r,[u,u],[e-u,1]),x=ku(m),v=Ie(r,[u,u],[1,1]),b=Gn(bs(v,0),Hi([[-1]]),Hi([[1]])),w=Vt(v,K(b,x)),A=zt(m,w);A.shape[0]===1?c=ar(i):c=wn([i,Ie(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);const C=Oe(zt(ye(b,w),x)),I=Ie(r,[u,0],[e-u,s]),N=K(C,c),E=ue(c);if(u===0)r=Vt(I,ye(N,ye(E,I)));else{const U=Vt(I,ye(N,ye(E,I)));r=wn([Ie(r,[0,0],[u,s]),U],0)}const B=ue(N),M=Ie(o,[0,u],[e,o.shape[1]-u]);if(u===0)o=Vt(M,ye(ye(M,c),B));else{const U=Vt(M,ye(ye(M,c),B));o=wn([Ie(o,[0,0],[e,u]),U],1)}return[c,r,o]}),ae([d,l,f])}return!t&&e>s&&(o=Ie(o,[0,0],[e,s]),r=Ie(r,[0,0],[s,s])),[o,r]})}const lS=J({qr_:cS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Bn||(Bn={}));function uS(n,t,e=Bn.SUM_BY_NONZERO_WEIGHTS){const s=z(n,"losses","computeWeightedLoss");let o=null;t!=null&&(o=z(t,"weights","computeWeightedLoss"));const r=o==null?s:K(s,o);if(e===Bn.NONE)return r;if(e===Bn.SUM)return Mt(r);if(e===Bn.MEAN){if(o==null)return Ue(r);{const i=s.size/o.size,c=zt(Mt(r),Mt(o));return i>1?zt(c,Yt(i)):c}}if(e===Bn.SUM_BY_NONZERO_WEIGHTS){if(o==null)return zt(Mt(r),Yt(s.size));{const i=K(o,Go(s.shape)),c=Tt(Mt(Xi(i,Yt(0))),"float32");return zt(Mt(r),c)}}throw Error(`Unknown reduction: ${e}`)}const _o=J({computeWeightedLoss_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,t,e,s=Bn.SUM_BY_NONZERO_WEIGHTS){const o=z(n,"labels","absoluteDifference"),r=z(t,"predictions","absoluteDifference");let i=null;e!=null&&(i=z(e,"weights","absoluteDifference")),vs(o.shape,r.shape,"Error in absoluteDifference: ");const c=ln(Vt(o,r));return _o(c,i,s)}const dS=J({absoluteDifference_:hS});function pS(n,t,e,s,o=Bn.SUM_BY_NONZERO_WEIGHTS){const r=z(n,"labels","cosineDistance"),i=z(t,"predictions","cosineDistance");let c=null;s!=null&&(c=z(s,"weights","cosineDistance")),vs(r.shape,i.shape,"Error in cosineDistance: ");const a=Yt(1),u=Vt(a,Mt(K(r,i),e,!0));return _o(u,c,o)}const fS=J({cosineDistance_:pS});function mS(n,t,e,s=Bn.SUM_BY_NONZERO_WEIGHTS){let o=z(n,"labels","hingeLoss");const r=z(t,"predictions","hingeLoss");let i=null;e!=null&&(i=z(e,"weights","hingeLoss")),vs(o.shape,r.shape,"Error in hingeLoss: ");const c=Yt(1);o=Vt(K(Yt(2),o),c);const a=vo(Vt(c,K(o,r)));return _o(a,i,s)}const gS=J({hingeLoss_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,t,e,s=1,o=Bn.SUM_BY_NONZERO_WEIGHTS){const r=z(n,"labels","huberLoss"),i=z(t,"predictions","huberLoss");let c=null;e!=null&&(c=z(e,"weights","huberLoss")),vs(r.shape,i.shape,"Error in huberLoss: ");const a=Yt(s),u=ln(Vt(i,r)),d=Nu(u,a),l=Vt(u,d),f=bt(K(Yt(.5),Ne(d)),K(a,l));return _o(f,c,o)}const yS=J({huberLoss_:xS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,t,e,s=1e-7,o=Bn.SUM_BY_NONZERO_WEIGHTS){const r=z(n,"labels","logLoss"),i=z(t,"predictions","logLoss");let c=null;e!=null&&(c=z(e,"weights","logLoss")),vs(r.shape,i.shape,"Error in logLoss: ");const a=Yt(1),u=Yt(s),d=Oe(K(r,xs(bt(i,u)))),l=K(Vt(a,r),xs(bt(Vt(a,i),u))),f=Vt(d,l);return _o(f,c,o)}const _S=J({logLoss_:vS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n,t,e,s=Bn.SUM_BY_NONZERO_WEIGHTS){const o=z(n,"labels","meanSquaredError"),r=z(t,"predictions","meanSquaredError");let i=null;e!=null&&(i=z(e,"weights","meanSquaredError")),vs(o.shape,r.shape,"Error in meanSquaredError: ");const c=rv(o,r);return _o(c,i,s)}const wS=J({meanSquaredError_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n,t){const e=z(n,"labels","sigmoidCrossEntropyWithLogits"),s=z(t,"logits","sigmoidCrossEntropyWithLogits");vs(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=vo(s),r=K(s,e),i=jp(gs(Oe(ln(s))));return bt(Vt(o,r),i)}function IS(n,t,e,s=0,o=Bn.SUM_BY_NONZERO_WEIGHTS){let r=z(n,"multiClassLabels","sigmoidCrossEntropy");const i=z(t,"logits","sigmoidCrossEntropy");let c=null;if(e!=null&&(c=z(e,"weights","sigmoidCrossEntropy")),vs(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Yt(s),d=Yt(1),l=Yt(.5);r=bt(K(r,Vt(d,u)),K(l,u))}const a=CS(r,i);return _o(a,c,o)}const AS=J({sigmoidCrossEntropy_:IS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return xr((o,r,i)=>{const a=Ly(r,[e],!0),u=Vt(Tt(r,"float32"),a);i([o,u]);const d=Oe(K(u,o));return{value:Mt(d,[e]),gradFunc:(m,x)=>{const[v,b]=x,w=He(m.shape,[e]);return[K(st(m,w),Vt(Tt(v,"float32"),gs(b))),K(st(m,w),Vt(gs(b),Tt(v,"float32")))]}}})(n,t)}function $S(n,t,e,s=0,o=Bn.SUM_BY_NONZERO_WEIGHTS){let r=z(n,"onehotLabels","softmaxCrossEntropy");const i=z(t,"logits","softmaxCrossEntropy");let c=null;if(e!=null&&(c=z(e,"weights","softmaxCrossEntropy")),vs(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Yt(s),d=Yt(1),l=Yt(r.shape[1]);r=bt(K(r,Vt(d,u)),zt(u,l))}const a=kS(r,i);return _o(a,c,o)}const SS=J({softmaxCrossEntropy_:$S});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,t,e,s){const o=z(n,"indices","sparseFillEmptyRows","int32"),r=z(t,"values","sparseFillEmptyRows"),i=z(e,"denseShape","sparseFillEmptyRows","int32"),c=z(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(c.rank!==0)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const a={indices:o,values:r,denseShape:i,defaultValue:c},u=Y.runKernel(pp,a);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const Mj=J({sparseFillEmptyRows_:NS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,t,e){const s=z(n,"inputIndices","sparseReshape","int32"),o=z(t,"inputShape","sparseReshape","int32"),r=z(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:o,newShape:r},c=Y.runKernel(fp,i);return{outputIndices:c[0],outputShape:c[1]}}const Vj=J({sparseReshape_:TS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,t,e){const s=z(n,"data","sparseSegmentMean"),o=z(t,"indices","sparseSegmentMean","int32"),r=z(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:o,segmentIds:r};return Y.runKernel(mp,i)}const Lj=J({sparseSegmentMean_:ES});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,t,e){const s=z(n,"data","sparseSegmentSum"),o=z(t,"indices","sparseSegmentSum","int32"),r=z(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:o,segmentIds:r};return Y.runKernel(gp,i)}const Pj=J({sparseSegmentSum_:RS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,t,e,s,o,r,i,c){const a=z(n,"data","stringNGrams","string");if(a.dtype!=="string")throw new Error("Data must be of datatype string");if(a.shape.length!==1)throw new Error(`Data must be a vector, saw: ${a.shape}`);const u=z(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const d={separator:e,nGramWidths:s,leftPad:o,rightPad:r,padWidth:i,preserveShortSequences:c},l={data:a,dataSplits:u},f=Y.runKernel(vp,l,d);return{nGrams:f[0],nGramsSplits:f[1]}}const Oj=J({stringNGrams_:DS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,t,e=!0){const s=z(n,"input","stringSplit","string"),o=z(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const r={skipEmpty:e},i={input:s,delimiter:o},c=Y.runKernel(_p,i,r);return{indices:c[0],values:c[1],shape:c[2]}}const zj=J({stringSplit_:BS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n,t){const e=z(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const o={input:e};return Y.runKernel(bp,o,s)}const Wj=J({stringToHashBucketFast_:FS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tc={flipLeftRight:S$,grayscaleToRGB:T$,resizeNearestNeighbor:hv,resizeBilinear:uv,rotateWithOffset:R$,cropAndResize:k$,nonMaxSuppression:B$,nonMaxSuppressionAsync:W$,nonMaxSuppressionWithScore:G$,nonMaxSuppressionWithScoreAsync:H$,nonMaxSuppressionPadded:K$,nonMaxSuppressionPaddedAsync:Y$,threshold:eS,transform:sS},MS={bandPart:rS,gramSchmidt:aS,qr:lS},VS={absoluteDifference:dS,computeWeightedLoss:_o,cosineDistance:fS,hingeLoss:gS,huberLoss:yS,logLoss:_S,meanSquaredError:wS,sigmoidCrossEntropy:AS,softmaxCrossEntropy:SS};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo extends yi{minimize(t,e=!1,s){const{value:o,grads:r}=this.computeGradients(t,s);if(s!=null){const i=s.map(c=>({name:c.name,tensor:r[c.name]}));this.applyGradients(i)}else this.applyGradients(r);return ae(r),e?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return EA(t,e)}dispose(){this.iterations_!=null&&ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Yt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(qo,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pf extends qo{constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const r=Y.registeredVariables[s],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:at(()=>he(r).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:at(()=>he(r).variable(i))});const c=Array.isArray(t)?t[o].tensor:t[s];if(c==null)return;const a=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;at(()=>{const d=bt(K(a,this.rho),K(Ne(c),1-this.rho)),l=K(zt(Nn(bt(u,this.epsilon)),Nn(bt(a,this.epsilon))),c),f=bt(K(u,this.rho),K(Ne(l),1-this.rho));a.assign(d),u.assign(f);const m=bt(K(l,-this.learningRate),r);r.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ae(this.accumulatedGrads.map(t=>t.variable)),ae(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}pf.className="Adadelta";yt(pf);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ff extends qo{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const r=Y.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:at(()=>$u(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[o].tensor:t[s];if(i==null)return;const c=this.accumulatedGrads[o].variable;at(()=>{const a=bt(c,Ne(i));c.assign(a);const u=bt(K(zt(i,Nn(bt(a,Y.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ae(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}ff.className="Adagrad";yt(ff);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mf extends qo{constructor(t,e,s,o=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],at(()=>{this.accBeta1=Yt(e).variable(),this.accBeta2=Yt(s).variable()}),o==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);at(()=>{const s=Vt(1,this.accBeta1),o=Vt(1,this.accBeta2);e.forEach((r,i)=>{const c=Y.registeredVariables[r],a=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:at(()=>he(c).variable(a))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:at(()=>he(c).variable(a))});const u=Array.isArray(t)?t[i].tensor:t[r];if(u==null)return;const d=this.accumulatedFirstMoment[i].variable,l=this.accumulatedSecondMoment[i].variable,f=bt(K(d,this.beta1),K(u,1-this.beta1)),m=bt(K(l,this.beta2),K(Ne(u),1-this.beta2)),x=zt(f,s),v=zt(m,o);d.assign(f),l.assign(m);const b=bt(K(zt(x,bt(Nn(v),this.epsilon)),-this.learningRate),c);c.assign(b)}),this.accBeta1.assign(K(this.accBeta1,this.beta1)),this.accBeta2.assign(K(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&ae(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),at(()=>{this.accBeta1.assign(ii(this.beta1,this.iterations_+1)),this.accBeta2.assign(ii(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}mf.className="Adam";yt(mf);/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/class gf extends qo{constructor(t,e,s,o=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],at(()=>{this.iteration=Yt(0).variable(),this.accBeta1=Yt(e).variable()}),o==null&&(this.epsilon=Y.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);at(()=>{const s=Vt(1,this.accBeta1),o=zt(-this.learningRate,bt(K(this.iteration,this.decay),1));e.forEach((r,i)=>{const c=Y.registeredVariables[r],a=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:he(c).variable(a)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:he(c).variable(a)});const u=Array.isArray(t)?t[i].tensor:t[r];if(u==null)return;const d=this.accumulatedFirstMoment[i].variable,l=this.accumulatedWeightedInfNorm[i].variable,f=bt(K(d,this.beta1),K(u,1-this.beta1)),m=K(l,this.beta2),x=ln(u),v=Uo(m,x);d.assign(f),l.assign(v);const b=bt(K(zt(o,s),zt(f,bt(v,this.epsilon))),c);c.assign(b)}),this.iteration.assign(bt(this.iteration,1)),this.accBeta1.assign(K(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&ae(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}gf.className="Adamax";yt(gf);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eu extends qo{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const r=Array.isArray(t)?t[o].tensor:t[s];if(r==null)return;const i=Y.registeredVariables[s];at(()=>{const c=bt(K(this.c,r),i);i.assign(c)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Qs(Yt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Eu.className="SGD";yt(Eu);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xf extends Eu{constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Yt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const r=Y.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:at(()=>he(r).variable(!1))});const i=this.accumulations[o].variable,c=Array.isArray(t)?t[o].tensor:t[s];c!=null&&at(()=>{let a;const u=bt(K(this.m,i),c);this.useNesterov?a=bt(K(this.c,bt(c,K(u,this.m))),r):a=bt(K(this.c,u),r),i.assign(u),r.assign(a)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ae(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}xf.className="Momentum";yt(xf);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yf extends qo{constructor(t,e=.9,s=0,o=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=Y.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,o)=>{const r=Y.registeredVariables[s],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:at(()=>he(r).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:at(()=>he(r).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:at(()=>he(r).variable(i))});const c=Array.isArray(t)?t[o].tensor:t[s];if(c==null)return;const a=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;at(()=>{const d=bt(K(a,this.decay),K(Ne(c),1-this.decay));if(this.centered){const l=this.accumulatedMeanGrads[o].variable,f=bt(K(l,this.decay),K(c,1-this.decay)),m=zt(K(c,this.learningRate),Nn(Vt(d,bt(Ne(f),this.epsilon)))),x=bt(K(u,this.momentum),m);a.assign(d),l.assign(f),u.assign(x);const v=Vt(r,x);r.assign(v)}else{const l=bt(K(a,this.decay),K(Ne(c),1-this.decay)),f=bt(K(u,this.momentum),zt(K(c,this.learningRate),Nn(bt(l,this.epsilon))));a.assign(l),u.assign(f);const m=Vt(r,f);r.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ae(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ae(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&ae(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}yf.className="RMSProp";yt(yf);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xo{static sgd(t){return new Eu(t)}static momentum(t,e,s=!1){return new xf(t,e,s)}static rmsprop(t,e=.9,s=0,o=null,r=!1){return new yf(t,e,s,o,r)}static adam(t=.001,e=.9,s=.999,o=null){return new mf(t,e,s,o)}static adadelta(t=.001,e=.95,s=null){return new pf(t,e,s)}static adamax(t=.002,e=.9,s=.999,o=null,r=0){return new gf(t,e,s,o,r)}static adagrad(t,e=.1){return new ff(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qo={sgd:Xo.sgd,momentum:Xo.momentum,adadelta:Xo.adadelta,adagrad:Xo.adagrad,rmsprop:Xo.rmsprop,adamax:Xo.adamax,adam:Xo.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function dv(){return new Promise(n=>LS(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vf(n,t){const e=n[0].length;n.forEach((o,r)=>{P(o.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),P(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((o,r)=>{for(let i=0;i<e;i++)P(i===t||o[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Ys(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _f=30;function Ru(n){return n<=_f?n:Uh(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(n,t,e){const s=e*(typeof n=="number"?n:n[0]),o=t*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rc(n,t,e,s=!0){let o=[];if(s)o=o.concat(t.slice(0)),o.push(n[0]/e),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const r=t.length;for(let i=0;i<r;++i)o=o.concat([n[i+1]/t[i],t[i]]);o=o.concat(n.slice(r+1))}return o}function ic(n,t,e=!0){const s=[];if(e){s.push(t);for(let o=t+1;o<n;++o)o<=2*t?(s.push(o),s.push(o-(t+1))):s.push(o)}else{const o=[],r=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?r.push(i):o.push(i);s.push(...o),s.push(0),s.push(...r)}return s}function ac(n,t,e,s=!0){const o=[];s?o.push(n[0]/e):o.push(n[0]*e);for(let r=1;r<n.length;++r)r<=t.length?s?o.push(t[r-1]*n[r]):o.push(n[r]/t[r-1]):o.push(n[r]);return o}function wf(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function Cf(n,t,e){const s=n.slice(0,1);for(let o=0;o<e;++o)s.push(n[o+1]-t[o][0]-t[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Du=1.7580993408473768,Bu=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const If=.3275911,Af=.254829592,kf=-.284496736,$f=1.421413741,Sf=-1.453152027,Nf=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function pv(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function fv(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let o=0;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:e,imag:s}}function mv(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let o=2;o<n.length;o+=4)e[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:e,imag:s}}function Tf(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function gv(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function xv(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const r=(t?2:-2)*Math.PI*(o/n);e[o]=Math.cos(r),s[o]=Math.sin(r)}return{real:e,imag:s}}function yv(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),o=Math.cos(s),r=Math.sin(s);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ih="->",PS=/->/g,cg=",",lg="...";function Ef(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(PS,"").length)/Ih.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Ih}").`);const[s,o]=n.split(Ih);P(s.indexOf(lg)===-1,()=>`The ellipsis notation ("${lg}") is not supported yet.`);const r=s.split(cg),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const c=[];for(let f=0;f<o.length;++f){const m=o[f];if(!r.some(x=>x.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);c.indexOf(m)===-1&&c.push(m)}for(let f=0;f<s.length;++f){const m=s[f];c.indexOf(m)===-1&&m!==cg&&c.push(m)}const a=new Array(r.length);for(let f=0;f<i;++f){if(new Set(r[f].split("")).size!==r[f].length)throw new Error(`Found duplicate axes in input component ${r[f]}. Support for duplicate axes in input is not implemented yet.`);a[f]=[];for(let m=0;m<r[f].length;++m)a[f].push(c.indexOf(r[f][m]))}const u=c.length,d=o.length,l=[];for(let f=d;f<u;++f)l.push(f);return{allDims:c,summedDims:l,idDims:a}}function Rf(n,t){let e=new Array(n);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;const s=[];for(let o=0;o<n;++o)e[o]===-1&&s.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:s}}function Df(n,t,e){const s=new Array(n);for(let o=0;o<e.length;++o){const r=e[o].shape;for(let i=0;i<t[o].length;++i)s[t[o][i]]===void 0?s[t[o][i]]=r[i]:P(s[t[o][i]]===r[i],()=>`Expected dimension ${s[t[o][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function Bf(n,t){const e=n,s=[];let o=0;n.length===0&&e.push(-1),o=n.length+1;for(let i=0;i<o;++i)s.push([]);const r=[];for(let i=0;i<e.length;++i){const c=e[i],a=OS(t,c);for(const u of a)r.indexOf(u)===-1&&(s[i].push(u),r.push(u))}return{path:e,steps:s}}function Ff(n){return n.every((t,e)=>t===e)}function OS(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Mf(n,t,e=0){let s=[];if(typeof t=="number")P(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const o=t.reduce((i,c)=>(c===-1&&(i+=1),i),0);P(o<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const i=t.reduce((c,a)=>a>0?c+a:c);t[r]=n.shape[e]-i}P(n.shape[e]===t.reduce((i,c)=>i+c),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function _v(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function bv(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function Cv(n,t){return`size ${n} must be non-negative, not ${t}`}function Iv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Av(n,t){const e=pt(n),s=pt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function kv(n,t){const e=pt(n),s=pt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(){return"segment ids must be >= 0"}function $v(){return"segment ids are not increasing"}function Sv(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Nv(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(n,t){let e=!1,s;for(n<=_f?(s=n,e=!0):s=Uh(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Uh(n,s+1);return s}function Ev(n,t,e){const s=[],o=n.length;for(let r=0;r<o;r++)r!==t?s.push(n[r]):s.push(e);return s}function Vf(n,t,e,s){const o=t.shape.length,r=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let l=0;l<s;++l)if(n.shape[l]!==t.shape[l])throw new Error(`x.shape[${l}]: ${n.shape[l]} should be equal to indices.shape[${l}]: ${t.shape[l]}.`);const i=n.shape[e],c=[];let a=1,u=1,d=1;for(let l=0;l<s;++l)c.push(n.shape[l]),a*=n.shape[l];for(let l=s;l<e;l++)c.push(n.shape[l]),u*=n.shape[l];for(let l=s;l<o;l++)c.push(t.shape[l]);for(let l=e+1;l<r;l++)c.push(n.shape[l]),d*=n.shape[l];return{batchSize:a,sliceSize:d,outerSize:u,dimSize:i,outputShape:c}}var zS=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:Tv,computeOutShape:Ev,collectGatherOpShapeInfo:Vf},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n){try{return n.map(t=>Do(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Rv(n){return n.map(t=>To(t))}var WS=Object.freeze(Object.defineProperty({__proto__:null,slice_util:vI,segment_util:zS,fromUint8ToStringArray:_r,fromStringArrayToUint8:Rv,upcastType:Un,axesAreInnerMostDims:Gp,combineLocations:Dy,computeOutAndReduceShapes:pn,expandShapeToKeepDim:He,assertAxesAreInnerMostDims:yn,getAxesPermutation:ze,getUndoAxesPermutation:Wo,getInnerMostAxes:je,getBroadcastDims:ri,getReductionAxes:rn,assertAndGetBroadcastShape:te,assertParamsConsistent:vf,computeOutShape:Ys,computeDilation2DInfo:ec,computePool2DInfo:_s,computePool3DInfo:xo,computeConv2DInfo:xn,computeConv3DInfo:zo,computeDefaultPad:Vp,tupleValuesAreOne:mr,eitherStridesOrDilationsAreOne:In,convertConv2DDataFormat:yo,checkPadOnDimRoundingMode:Mn,getFusedDyActivation:of,getFusedBiasGradient:rf,applyActivation:af,shouldFuse:cf,PARALLELIZE_THRESHOLD:_f,computeOptimalWindowSize:Ru,getImageCenter:bf,getReshaped:rc,getPermuted:ic,getReshapedPermuted:ac,getSliceBeginCoords:wf,getSliceSize:Cf,prepareAndValidate:Ep,validateUpdateShape:xy,validateInput:fI,calculateShapes:tc,SELU_SCALEALPHA:Du,SELU_SCALE:Bu,ERF_P:If,ERF_A1:Af,ERF_A2:kf,ERF_A3:$f,ERF_A4:Sf,ERF_A5:Nf,warn:Jn,log:nC,mergeRealAndImagArrays:go,splitRealAndImagArrays:pv,complexWithEvenIndex:fv,complexWithOddIndex:mv,getComplexWithIndex:Tf,assignToTypedArray:gv,exponents:xv,exponent:yv,decodeEinsumEquation:Ef,getEinsumPermutation:Rf,checkEinsumDimSizes:Df,getEinsumComputePath:Bf,isIdentityPermutation:Ff,prepareSplitSize:Mf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:vv,getSparseFillEmptyRowsNegativeIndexErrorMessage:_v,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:bv,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:wv,getSparseReshapeNegativeOutputDimErrorMessage:Cv,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Iv,getSparseReshapeInputOutputMultipleErrorMessage:Av,getSparseReshapeInputOutputMismatchErrorMessage:kv,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ud,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:$v,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Sv,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Nv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dv={kernelName:vl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,oc(Tt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US={kernelName:ra,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Ne(Tt(e,"float32")),o=Nn(Vt(Yt(1),s));return Oe(zt(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GS={kernelName:ia,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Nn(Vt(Ne(Tt(e,"float32")),1));return zt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS={kernelName:xi,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{let c=n;const a=rn(e.shape,o);return a.length>0&&(c=Mt(c,a)),st(c,e.shape)},b:()=>{let c=n;const a=rn(s.shape,o);return a.length>0&&(c=Mt(c,a)),st(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS={kernelName:Md,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,o)=>{e[o]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS={kernelName:_l,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>he(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS={kernelName:bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>he(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS={kernelName:aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,Nn(Vt(Yt(1),Ne(Tt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS={kernelName:ca,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Nn(bt(Yt(1),Ne(Tt(e,"float32"))));return zt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS={kernelName:ha,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{const c=bt(Ne(e),Ne(s));let a=K(n,zt(s,c));const u=rn(e.shape,o);return u.length>0&&(a=Mt(a,u)),st(a,e.shape)},b:()=>{const c=bt(Ne(e),Ne(s));let a=Oe(K(n,zt(e,c)));const u=rn(s.shape,o);return u.length>0&&(a=Mt(a,u)),st(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS={kernelName:la,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,bt(Ne(Tt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS={kernelName:ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,Vt(Yt(1),Ne(Tt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,t,e,s,o,r){const i=z(n,"dy","avgPool3dGrad"),c=z(t,"input","avgPool3dGrad");let a=i,u=c,d=!1;c.rank===4&&(d=!0,a=st(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=st(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),P(a.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${a.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Mn("avgPool3dGrad",o,r);const l={dy:a,input:u},f={filterSize:e,strides:s,pad:o,dimRoundingMode:r},m=Y.runKernel(Od,l,f);return d?st(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const eN=J({avgPool3dGrad_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:o,strides:r,pad:i,dimRoundingMode:c}=e;return{x:()=>eN(n,s,o,r,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,t,e,s,o){const r=z(n,"dy","avgPoolGrad"),i=z(t,"input","avgPoolGrad");P(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let c=i,a=r,u=!1;i.rank===3&&(u=!0,c=st(i,[1,i.shape[0],i.shape[1],i.shape[2]]),a=st(r,[1,r.shape[0],r.shape[1],r.shape[2]])),P(a.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),P(c.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${c.rank}.`);const d={dy:a,input:c},l={filterSize:e,strides:s,pad:o},f=Y.runKernel(Pd,d,l);return u?st(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const oN=J({avgPoolGrad_:sN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN={kernelName:wl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:o,strides:r,pad:i}=e;return{x:()=>oN(n,s,o,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iN={kernelName:Il,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,o]=t,{transposeA:r,transposeB:i}=e;return!r&&!i?{a:()=>ye(n,o,!1,!0),b:()=>ye(s,n,!0,!1)}:!r&&i?{a:()=>ye(n,o,!1,!1),b:()=>ye(n,s,!0,!1)}:r&&!i?{a:()=>ye(o,n,!1,!0),b:()=>ye(s,n,!1,!1)}:{a:()=>ye(o,n,!0,!0),b:()=>ye(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN={kernelName:Al,gradFunc:(n,t,e)=>{const{blockShape:s,crops:o}=e;return{x:()=>Zp(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN={kernelName:Qw,gradFunc:(n,t,e)=>{const s=e,o=s.inputShape,r=s.shape,i=Array.from(r);for(let a=o.length-1;a>=0;a--)if(o[a]===r[a])i[a]=1;else if(o[a]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const c=[];for(let a=0;a<i.length;a++)i[a]>1&&c.push(a);return{x:()=>Mt(n,c,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN={kernelName:da,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uN={kernelName:pa,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hN={kernelName:fa,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:o,clipValueMax:r}=e;return{x:()=>Gn(mo(_i(s,o),bi(s,r)),n,he(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dN={kernelName:kl,inputsToSave:["x"],gradFunc:Dv.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN={kernelName:$l,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(a=>a.shape),{axis:o}=e,r=ie(o,t[0].shape)[0],i=s.map(a=>a[r]);return ts(n,i,r).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN={kernelName:Sl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,{dilations:r,strides:i,pad:c,dataFormat:a}=e;return P(mr(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>zp(s.shape,n,o,i,c,a),filter:()=>sf(s,n,o.shape,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN={kernelName:Nl,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,{strides:r,pad:i,dataFormat:c,dimRoundingMode:a}=e;return{dy:()=>gr(n,o,r,i,c,1,a),filter:()=>sf(n,s,o.shape,r,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,t,e,s,o){let r=n;n.rank===4&&(r=st(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=st(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),P(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),P(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const c={x:r,dy:i},a={strides:s,pad:o,filterShape:e};return Y.runKernel(Gd,c,a)}const xN=J({conv3DBackpropFilter_:gN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN={kernelName:Tl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:o,pad:r}=e;P(mr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,c]=t;return{x:()=>Ty(i.shape,n,c,o,r),filter:()=>xN(i,n,c.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN={kernelName:ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(Oe(tv(Tt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N={kernelName:ga,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(ev(Tt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN={kernelName:El,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o,exclusive:r,reverse:i}=e;return{x:()=>{const c=ze([o],s.rank);let a=Ry(n,o,r,!i);return c!=null&&(a=ue(a,c)),a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN={kernelName:Rl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:o,pad:r,dimRoundingMode:i}=e,c=s??[1,1];P(mr(c),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${c}'`);const[a,u]=t;return P(a.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${a.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(a.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${a.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(In(o,c),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${c}'.`),Mn("depthwiseConv2d",r,i),{x:()=>x$(a.shape,n,u,o,r,c,i),filter:()=>m$(a,n,u.shape,o,r,c,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN={kernelName:Dl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,o]=t,r={x:s,filter:o,dy:n},i={x:s,filter:o,dy:n};return{x:()=>Y.runKernel(Gh,r,e),filter:()=>Y.runKernel(qh,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IN={kernelName:ya,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>Y.runKernel(Jd,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN={kernelName:va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=K(gs(Oe(Ne(e))),2/Math.sqrt(Math.PI));return{x:()=>K(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN={kernelName:_a,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N={kernelName:Fl,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>st(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SN={kernelName:ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,gs(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN={kernelName:wa,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN={kernelName:Ca,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{const c=zt(n,Tt(s,"float32")),a=rn(e.shape,o);return a.length>0?st(Mt(c,a),e.shape):c},b:()=>{let c=K(n,Tt(e,"float32"));const a=rn(s.shape,o);a.length>0&&(c=st(Mt(c,a),s.shape));const u=Ne(s);return Oe(zt(c,Tt(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:Ml,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[o,r,i,c]=t,a=c??Yt(1),u=rn(r.shape,o.shape),d=[];if(r.rank===1){for(let I=0;I<o.shape.length-1;++I)d.push(o.shape[I]);d.push(1)}const l=Vt(o,r),f=K(n,a),m=Jy(bt(i,Yt(s))),x=K(K(K(m,m),m),Yt(-.5));return{x:()=>r.rank===1?st(K(K(n,Ts(st(m,[1,1,1,r.shape[0]]),d)),a),o.shape):st(K(K(n,m),a),o.shape),mean:()=>{let I=K(K(m,Yt(-1)),f);return r.rank===1&&(I=Mt(I,u)),st(I,r.shape)},variance:()=>{let I=K(K(x,l),f);return r.rank===1&&(I=Mt(I,u)),st(I,r.shape)},scale:()=>{const I=K(l,m);let N=K(n,I);return r.rank===1&&(N=Mt(N,u)),st(N,r.shape)},offset:()=>{let I=n;return r.rank===1&&(I=Mt(I,u)),st(I,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN={kernelName:Vl,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,o]=t,{axis:r}=e,i=ie(r,s.shape)[0];return{x:()=>{const a=s.shape,u=o.size,d=a.slice(0,i),l=d.length,f=a.slice(r,a.length).slice(1),m=f.length,x=ug(0,l),v=ug(l+1,l+1+m),b=hg([d,[u],f]),w=st(n,b),A=st(o,[u]),C=hg([[l],x,v]),I=ue(w,C);let N=av(I,A,s.shape[i]);const E=Wo(C);return N=ue(N,E),N},indices:()=>o}}};function ug(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function hg(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN={kernelName:Ia,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>he(e),b:()=>he(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN={kernelName:Aa,gradFunc:n=>({x:()=>Tt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN={kernelName:ka,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN={kernelName:$a,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN={kernelName:Sa,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN={kernelName:Pl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:o}=e,r=bs(s,0);return{x:()=>Gn(r,n,K(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN={kernelName:Ta,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,bt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ON={kernelName:Na,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,Tt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN={kernelName:tC,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e;return{logits:()=>{const i=gs(s);return Vt(n,K(Mt(n,o,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n,t,e,s=5,o=1,r=1,i=.5){const c={x:n,y:t,dy:e},a={depthRadius:s,bias:o,alpha:r,beta:i};return Y.runKernel(sp,c,a)}const UN=J({localResponseNormalizationBackprop_:WN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN={kernelName:ql,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{depthRadius:r,bias:i,alpha:c,beta:a}=e;return{x:()=>UN(s,o,n,r,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n,t,e,s){return t.rank<e.rank&&(t=st(t,He(t.shape,s))),n.rank<e.rank&&(n=st(n,He(n.shape,s))),{x:()=>K(n,Tt(to(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dg={kernelName:Hl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:o}=s,r=t[0],i=t[1],c=ie(o,r.shape),a=Bv(n,i,r,c);return{x:()=>a.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN={kernelName:Ea,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>K(n,Tt(_i(e,s),"float32")),b:()=>K(n,Tt(My(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,t,e,s,o,r,i){const c=z(n,"dy","maxPool3dGrad"),a=z(t,"input","maxPool3dGrad"),u=z(e,"output","maxPool3dGrad");let d=c,l=a,f=u,m=!1;a.rank===4&&(m=!0,d=st(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),l=st(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),f=st(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),P(l.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),P(f.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),Mn("maxPool3dGrad",r,i);const x={dy:d,input:l,output:f},v={filterSize:s,strides:o,pad:r,dimRoundingMode:i},b=Y.runKernel(rp,x,v);return m?st(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const jN=J({maxPool3dGrad_:HN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN={kernelName:Kl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{filterSize:r,strides:i,pad:c,dimRoundingMode:a}=e;return{x:()=>jN(n,s,o,r,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,t,e,s,o,r,i){const c=z(n,"dy","maxPoolGrad"),a=z(t,"input","maxPoolGrad"),u=z(e,"output","maxPoolGrad");P(a.rank===c.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${c.rank})`),P(c.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),P(a.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${a.rank}.`),Mn("maxPoolGrad",r,i);const d={dy:c,input:a,output:u},l={filterSize:s,strides:o,pad:r,dimRoundingMode:i};return Y.runKernel(op,d,l)}const YN=J({maxPoolGrad_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN={kernelName:jl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,o]=t,{filterSize:r,strides:i,pad:c}=e;return{x:()=>YN(n,s,o,r,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN={kernelName:Xl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e,r=ie(o,s.shape),c=pn(s.shape,r)[1],a=pt(c);return{x:()=>{const d=s.shape.slice();r.forEach(m=>{d[m]=1});const l=st(n,d);return zt(K(l,Go(s.shape,"float32")),a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN={kernelName:Yl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:o}=s,[r,i]=t,c=ie(o,r.shape),a=Bv(n,i,r,c);return{x:()=>a.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT={kernelName:Ra,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>K(n,Tt(bi(e,s),"float32")),b:()=>K(n,Tt(bs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eT={kernelName:Jl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:o}=e,r=o.map(i=>i[0]);return{x:()=>Ie(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT={kernelName:Da,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{const c=rn(e.shape,o);return c.length>0?st(Mt(n,c),e.shape):n},b:()=>{const c=K(n,Oe(Su(zt(e,s)))),a=rn(s.shape,o);return a.length>0?st(Mt(c,a),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT={kernelName:Ba,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{const c=K(n,Tt(s,"float32")),a=rn(e.shape,o);return a.length>0?st(Mt(c,a),e.shape):c},b:()=>{const c=K(n,Tt(e,"float32")),a=rn(s.shape,o);return a.length>0?st(Mt(c,a),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oT={kernelName:Zl,gradFunc:n=>({x:()=>Oe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rT={kernelName:eu,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Ge(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iT={kernelName:tu,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT={kernelName:nu,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return ai(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pg={kernelName:su,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:o}=e,r=o.map(i=>i[0]);return{x:()=>Ie(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT={kernelName:Fa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,o]=t,r=e,i=s,c=te(r.shape,i.shape);return{a:()=>{const d=Tt(i,"float32");let l=K(n,K(d,ii(r,Vt(d,Yt(1)))));const f=rn(r.shape,c);return f.length>0&&(l=Mt(l,f)),st(l,r.shape)},b:()=>{const d=bs(r,0),l=Gn(d,xs(r),he(r));let f=K(n,K(o,l));const m=rn(i.shape,c);return m.length>0&&(f=Mt(f,m)),st(f,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT={kernelName:ou,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,o=bs(e,0);return{x:()=>Gn(o,n,K(n,s)),alpha:()=>{let r=Gn(o,he(n),K(n,e));const i=rn(s.shape,n.shape);return i.length>0&&(r=Mt(r,i)),st(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,t,e){const s=n.shape.slice();s[e]=1;const o=st(t,s),r=ad(n,e,!0,!1),i=ad(n,e,!0,!0),c=K(r,i);return K(o,c)}function hT(n,t,e){const s=n.shape.length,o=s-e.length,r=ze(e,s);let i=n;r!=null&&(i=ue(n,r));const c=i.shape.slice(),u=c.splice(s-e.length,e.length).reduce((f,m)=>f*m,1);c.push(u);const d=i.reshape(c);let l=uT(d,t,o);if(l=l.reshape(i.shape),r!=null){const f=Wo(r);l=ue(l,f)}return l}const dT={kernelName:ru,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:o}=e;let r=[];return o==null?r=s.shape.map((i,c)=>c):typeof o=="number"?r=[o]:r=o,{x:()=>hT(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT={kernelName:xa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{const c=zt(n,Tt(s,"float32")),a=rn(e.shape,o);return a.length>0?st(Mt(c,a),e.shape):c},b:()=>{let c=K(n,Tt(e,"float32"));const a=rn(s.shape,o);a.length>0&&(c=st(Mt(c,a),s.shape));const u=Ne(s);return Oe(zt(c,Tt(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,Oe(Ne(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT={kernelName:La,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=K(bi(e,6),oc(e));return{x:()=>K(n,Tt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,Tt(oc(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT={kernelName:iu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>st(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT={kernelName:cu,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,o={dy:n,images:s};return{images:()=>Y.runKernel(dp,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT={kernelName:au,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,o={dy:n,images:s};return{images:()=>Y.runKernel(hp,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T={kernelName:lu,gradFunc:(n,t,e)=>{const{dims:s}=e,o=ie(s,n.shape);return{x:()=>yr(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT={kernelName:Pa,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wT={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Oe(zt(n,K(ii(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT={kernelName:uu,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Tt(he(e),"float32"),t:()=>K(n,Tt(e,n.dtype)),e:()=>K(n,Tt(Kp(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT={kernelName:za,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=bs(e,Yt(0)),o=Yt(Du),r=Yt(Bu),i=K(n,r),c=K(K(n,o),gs(Tt(e,"float32")));return Gn(s,i,c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT={kernelName:qa,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,K(e,Vt(Yt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kT={kernelName:Ga,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(Wp(Tt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ST={kernelName:Ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(Ey(Tt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT={kernelName:hu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:o,size:r}=e,i=s.shape,[c,a]=Cu(s,o,r),u=[];for(let d=0;d<n.rank;d++)u.push([c[d],i[d]-c[d]-a[d]]);return{x:()=>Jp(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TT={kernelName:mu,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:o}=e,r=!0,i=K(n,s);return{logits:()=>Vt(i,K(Mt(i,[o],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET={kernelName:Ha,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,vi(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fg={kernelName:pu,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:o}=e;return{x:()=>Op(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mg={kernelName:fu,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>wn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RT={kernelName:ja,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,K(Nn(Tt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT={kernelName:xp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(n,K(Tt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=Yt(2);return{a:()=>K(n,K(o,Vt(e,s))),b:()=>K(n,K(o,Vt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FT={kernelName:Qa,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,o=te(e.shape,s.shape);return{a:()=>{let c=n;const a=rn(e.shape,o);return a.length>0&&(c=Mt(c,a)),st(c,e.shape)},b:()=>{let c=n;const a=rn(s.shape,o);return a.length>0&&(c=Mt(c,a)),st(Oe(c),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VT={kernelName:du,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,o=s.shape.slice(),{axis:r}=e;ie(r,s.shape).forEach(u=>{o[u]=1});const c=st(n,o),a=K(c,Go(s.shape,"float32"));return{x:()=>a}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>zt(n,Ne(Wp(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT={kernelName:Ja,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>K(Vt(Yt(1),Ne(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OT={kernelName:Za,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:o}=e;return{x:()=>{let i=he(s);if(s.rank===1)for(let c=0;c<o[0];++c)i=bt(i,Ie(n,[c*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let c=0;c<o[0];++c)for(let a=0;a<o[1];++a)i=bt(i,Ie(n,[c*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let c=0;c<o[0];++c)for(let a=0;a<o[1];++a)for(let u=0;u<o[2];++u)i=bt(i,Ie(n,[c*s.shape[0],a*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let c=0;c<o[0];++c)for(let a=0;a<o[1];++a)for(let u=0;u<o[2];++u)for(let d=0;d<o[3];++d)i=bt(i,Ie(n,[c*s.shape[0],a*s.shape[1],u*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT={kernelName:Yr,gradFunc:(n,t,e)=>{const s=e,{perm:o}=s,r=Wo(o);return{x:()=>ue(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WT={kernelName:gu,gradFunc:(n,t,e)=>{const s=e,{axis:o}=s;return{value:()=>vr(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UT={kernelName:xu,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>GT(n,e)}}};function GT(n,t){const e=Uo(t,he(t)),s=qp(n,e);let o=_i(t,Yt(0,"int32"));const r=s.rank-o.rank;for(let c=0;c<r;++c)o=cs(o,c+1);o=mo(o,Go(s.shape,"bool"));const i=he(s);return Gn(o,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qT={kernelName:yu,gradFunc:n=>({x:()=>he(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT=[Dv,US,GS,qS,HS,jS,KS,XS,YS,JS,ZS,QS,nN,rN,iN,aN,cN,lN,uN,hN,dN,pN,mN,fN,yN,vN,_N,bN,wN,CN,pT,IN,AN,kN,$N,SN,TN,NN,EN,RN,DN,BN,FN,MN,VN,LN,PN,ON,zN,GN,dg,dg,qN,KN,JN,ZN,QN,tT,eT,nT,sT,oT,rT,iT,aT,pg,pg,cT,lT,dT,fT,mT,gT,xT,yT,vT,_T,bT,wT,CT,IT,AT,kT,$T,ST,NT,TT,ET,fg,fg,mg,mg,RT,BT,DT,FT,MT,VT,LT,PT,OT,zT,WT,UT,qT];for(const n of HT)sC(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.abs=function(){return this.throwIfDisposed(),ln(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.acos=function(){return this.throwIfDisposed(),kI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.acosh=function(){return this.throwIfDisposed(),SI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.add=function(n){return this.throwIfDisposed(),bt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.all=function(n,t){return this.throwIfDisposed(),$y(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.any=function(n,t){return this.throwIfDisposed(),rd(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.argMax=function(n){return this.throwIfDisposed(),Ki(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.argMin=function(n){return this.throwIfDisposed(),DI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),st(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.asType=function(n){return this.throwIfDisposed(),Tt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.as1D=function(){return this.throwIfDisposed(),st(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.as2D=function(n,t){return this.throwIfDisposed(),st(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),st(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),st(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.as5D=function(n,t,e,s,o){return this.throwIfDisposed(),st(this,[n,t,e,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.asin=function(){return this.throwIfDisposed(),FI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.asinh=function(){return this.throwIfDisposed(),VI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.atan=function(){return this.throwIfDisposed(),PI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.atan2=function(n){return this.throwIfDisposed(),zI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.atanh=function(){return this.throwIfDisposed(),UI(this)};ht().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Lp(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Op(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.batchNorm=function(n,t,e,s,o){return this.throwIfDisposed(),Iu(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Wc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.cast=function(n){return this.throwIfDisposed(),Tt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.ceil=function(){return this.throwIfDisposed(),m2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),es(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Je&&(n=[n]),wn([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.conv1d=function(n,t,e,s,o,r){return this.throwIfDisposed(),Sy(this,n,t,e,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.conv2dTranspose=function(n,t,e,s,o){return this.throwIfDisposed(),Ny(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.conv2d=function(n,t,e,s,o,r){return this.throwIfDisposed(),gr(this,n,t,e,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.cos=function(){return this.throwIfDisposed(),Wp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.cosh=function(){return this.throwIfDisposed(),Ey(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),ad(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Ry(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),P2(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.depthwiseConv2d=function(n,t,e,s,o,r){return this.throwIfDisposed(),Up(this,n,t,e,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.dilation2d=function(n,t,e,s,o){return this.throwIfDisposed(),W2(this,n,t,e,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.divNoNan=function(n){return this.throwIfDisposed(),j2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.div=function(n){return this.throwIfDisposed(),zt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.dot=function(n){return this.throwIfDisposed(),X2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.elu=function(){return this.throwIfDisposed(),Au(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.equal=function(n){return this.throwIfDisposed(),to(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.erf=function(){return this.throwIfDisposed(),Z2(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),aA(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.exp=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.expandDims=function(n){return this.throwIfDisposed(),cs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.expm1=function(){return this.throwIfDisposed(),hA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.fft=function(){return this.throwIfDisposed(),sv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.flatten=function(){return this.throwIfDisposed(),st(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.floor=function(){return this.throwIfDisposed(),Su(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.floorDiv=function(n){return this.throwIfDisposed(),ky(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.gather=function(n,t){return this.throwIfDisposed(),qp(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.greaterEqual=function(n){return this.throwIfDisposed(),_i(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.greater=function(n){return this.throwIfDisposed(),bs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.ifft=function(){return this.throwIfDisposed(),ld(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.irfft=function(){return this.throwIfDisposed(),Wk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.isFinite=function(){return this.throwIfDisposed(),vA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.isInf=function(){return this.throwIfDisposed(),bA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.isNaN=function(){return this.throwIfDisposed(),CA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Hp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.lessEqual=function(n){return this.throwIfDisposed(),bi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.less=function(n){return this.throwIfDisposed(),My(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),SA(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logSigmoid=function(){return this.throwIfDisposed(),BA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Vy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Ly(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.log=function(){return this.throwIfDisposed(),xs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.log1p=function(){return this.throwIfDisposed(),jp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logicalAnd=function(n){return this.throwIfDisposed(),mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logicalNot=function(){return this.throwIfDisposed(),Kp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logicalOr=function(n){return this.throwIfDisposed(),Py(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.logicalXor=function(n){return this.throwIfDisposed(),WA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),ye(this,n,t,e)};ht().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Xp(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.max=function(n,t){return this.throwIfDisposed(),Xs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.maximum=function(n){return this.throwIfDisposed(),Uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.mean=function(n,t){return this.throwIfDisposed(),Ue(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.min=function(n,t){return this.throwIfDisposed(),cd(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.minimum=function(n){return this.throwIfDisposed(),Nu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),YA(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.mod=function(n){return this.throwIfDisposed(),ZA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.mul=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.neg=function(){return this.throwIfDisposed(),Oe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.norm=function(n,t,e){return this.throwIfDisposed(),ku(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.notEqual=function(n){return this.throwIfDisposed(),Xi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),my(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.onesLike=function(){return this.throwIfDisposed(),ys(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.pad=function(n,t){return this.throwIfDisposed(),Jp(this,n,t)};ht().prototype.pool=function(n,t,e,s,o,r){return this.throwIfDisposed(),ak(this,n,t,e,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.pow=function(n){return this.throwIfDisposed(),ii(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.prelu=function(n){return this.throwIfDisposed(),Qp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.prod=function(n,t){return this.throwIfDisposed(),uk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.reciprocal=function(){return this.throwIfDisposed(),wk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.relu=function(){return this.throwIfDisposed(),vo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.relu6=function(){return this.throwIfDisposed(),Xy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.reshapeAs=function(n){return this.throwIfDisposed(),st(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.reshape=function(n){return this.throwIfDisposed(),st(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),uv(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),hv(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.reverse=function(n){return this.throwIfDisposed(),yr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.rfft=function(){return this.throwIfDisposed(),ov(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.round=function(){return this.throwIfDisposed(),Yy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.rsqrt=function(){return this.throwIfDisposed(),Jy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.selu=function(){return this.throwIfDisposed(),Zy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.separableConv2d=function(n,t,e,s,o,r){return this.throwIfDisposed(),Qy(this,n,t,e,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sigmoid=function(){return this.throwIfDisposed(),vi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sign=function(){return this.throwIfDisposed(),Ek(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sin=function(){return this.throwIfDisposed(),tv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sinh=function(){return this.throwIfDisposed(),ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.slice=function(n,t){return this.throwIfDisposed(),Ie(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.softmax=function(n){return this.throwIfDisposed(),nf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.softplus=function(){return this.throwIfDisposed(),nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Zp(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.split=function(n,t){return this.throwIfDisposed(),ts(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sqrt=function(){return this.throwIfDisposed(),Nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.square=function(){return this.throwIfDisposed(),Ne(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.squaredDifference=function(n){return this.throwIfDisposed(),rv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.squeeze=function(n){return this.throwIfDisposed(),sc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Je?[this,n]:[this,...n];return vr(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.step=function(n){return this.throwIfDisposed(),oc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.stridedSlice=function(n,t,e,s,o,r,i,c){return this.throwIfDisposed(),Yk(this,n,t,e,s,o,r,i,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sub=function(n){return this.throwIfDisposed(),Vt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.sum=function(n,t){return this.throwIfDisposed(),Mt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.tan=function(){return this.throwIfDisposed(),Zk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.tanh=function(){return this.throwIfDisposed(),Pp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.tile=function(n){return this.throwIfDisposed(),Ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.toBool=function(){return this.throwIfDisposed(),Tt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.toFloat=function(){return this.throwIfDisposed(),Tt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.toInt=function(){return this.throwIfDisposed(),Tt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.topk=function(n,t){return this.throwIfDisposed(),t$(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.transpose=function(n){return this.throwIfDisposed(),ue(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.unique=function(n){return this.throwIfDisposed(),s$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),av(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.unstack=function(n){return this.throwIfDisposed(),ai(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.where=function(n,t){return this.throwIfDisposed(),Gn(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ht().prototype.zerosLike=function(){return this.throwIfDisposed(),he(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Us extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Us.prototype)}}class ps extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ps.prototype)}}class X extends Error{constructor(t){super(t),Object.setPrototypeOf(this,X.prototype)}}class ee extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ee.prototype)}}class Lf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Lf.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fv{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function br(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Gs(n,t){if(!n)throw new Lf(t)}function gg(n,t){let e=0;for(const s of n)s===t&&e++;return e}function Dn(n){return n.length===1?n[0]:n}function Ee(n){return Array.isArray(n)?n:[n]}function uo(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function nr(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let is={};function Pf(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function hd(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>hd(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:hd(s))}}}function cc(n,t={},e={},s="object",o=!1){if(typeof n=="string"){const r=n;let i;if(r in e)i=e[r];else if(r in is)i=is[r];else if(i=t[r],i==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let c,a;if(i in e?[c,a]=e[i]:i in is?[c,a]=is.className:i in t&&([c,a]=t[i]),c==null)throw new X(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(a!=null){const u={};for(const m of Object.keys(is))u[m]=is[m];for(const m of Object.keys(e))u[m]=e[m];const d=r.config;d.customObjects=u;const l=Object.assign({},is);for(const m of Object.keys(e))is[m]=e[m];hd(r.config);const f=a(c,r.config,e,o);return is=Object.assign({},l),f}else{const u=Object.assign({},is);for(const l of Object.keys(e))is[l]=e[l];const d=new c(r.config);return is=Object.assign({},u),d}}}function jT(n,t){return n<t?-1:n>t?1:0}function Ec(n,t){return-1*jT(n,t)}function Eo(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function KT(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function $r(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new X(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Of(n,t,e=0,s=1/0){return Gs(e>=0),Gs(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(o=>typeof o===t)}function hn(n,t){Array.isArray(n)?(P(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>hn(e,`element ${s+1} of ${t}`))):P(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Mv(n)}.`)}function Mv(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>Mv(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function XT(n,t,e){let s=e!=null?e():Rn(),o;return(...i)=>{const c=e!=null?e():Rn();return c-s<t||(s=c,o=n(...i)),o}}function Vv(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let YT=0;function Lv(){return YT++}const Rc={};function Fu(n=""){return n in Rc||(Rc[n]=0),Rc[n]+=1,n+Rc[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JT=["channelsFirst","channelsLast"],ZT=["nearest","bilinear"],QT=["valid","same","causal"],tE=["max","avg"],eE=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Or=new Map;function Ke(n){$r(JT,"DataFormat",n)}function nE(n){$r(ZT,"InterpolationFormat",n)}function ns(n){$r(QT,"PaddingMode",n)}function Pv(n){$r(tE,"PoolMode",n)}const ji=[],xg="/";function lr(n,t){ji.push(n);try{const e=t();return ji.pop(),e}catch(e){throw ji.pop(),e}}function sE(){return ji.length===0?"":ji.join(xg)+xg}function Ov(n){if(!Wv(n))throw new Error("Not a valid tensor name: '"+n+"'");return sE()+n}function zv(n){if(!Wv(n))throw new Error("Not a valid tensor name: '"+n+"'");Or.has(n)||Or.set(n,0);const t=Or.get(n);if(Or.set(n,Or.get(n)+1),t>0){const e=`${n}_${t}`;return Or.set(e,1),e}else return n}const oE=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wv(n){return!!n.match(oE)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rE(n){return n===parseInt(n.toString(),10)}function Ro(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let o=t;o<e;++o)s*=n[o];return s}function ci(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Bo(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Ds(n,t){if(t<n)throw new X(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ah;function en(){return Ah==null&&(Ah=lI().epsilon()),Ah}function Bs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mu(n,t){return Tt(n,t)}function lc(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),st(n,e)}function iE(n,t){return at(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=lc(n,1);return dd(e,[1,t,1])})}function aE(n){const t=[Ro(n.shape)];return st(n,t)}function cE(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Ro(n.shape,1)];return st(n,t)}function ur(n,t,e){return at(()=>{switch(n.rank){case 1:return tf(n,t,e);case 2:return nv(n,[t,0],[e,n.shape[1]]);case 3:return ef(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return el(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Ie(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Ie(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function kh(n,t,e){return at(()=>{switch(n.rank){case 1:return tf(n,t,e);case 2:return nv(n,[0,t],[n.shape[0],e]);case 3:return ef(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return el(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Dc(n,t,e,s){return at(()=>{switch(n.rank){case 1:return tf(n,t,e);case 2:switch(s){case 1:return ur(n,t,e);case 2:return kh(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ur(n,t,e);case 2:return ef(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return kh(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ur(n,t,e);case 2:return el(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return el(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return kh(n,t,e);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function zf(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),wn(n,t)}function yg(n,t){switch(n.rank){case 1:return y2([n,t]);case 2:return _2([n,t],0);case 3:return w2([n,t],0);case 4:return I2([n,t],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function dd(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new X(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Ts(n,t)}function Vu(n,t=0,e=1,s,o){return vk(n,t,e,s,o)}function Js(n,t,e,s){if(n.rank<2||t.rank<2)throw new ee(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const o=n.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(o!==r)throw new ee(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return rg({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?pd(n.rank,s,Bs()):null,activation:e});{const o=n.shape.slice(),r=o.pop();n=st(n,[-1,r]);const i=t.shape.slice(),c=i.pop(),a=i.pop(),u=[...i,c],d=Array.from({length:t.rank},(x,v)=>v===0?t.rank-2:v<=t.rank-2?v-1:v);t=st(ue(t,d),[a,-1]);const l=[...o,...u];return st(rg({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?pd(n.rank,s,Bs()):null,activation:e}),l)}}function Uv(n,t,e){return at(()=>(Array.isArray(t)?t=Wn(t,"int32"):t=Tt(t,"int32"),qp(n,t,e)))}function uc(n){return K(n,n)}function pd(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new X(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?st(t,[1,s[0],1,1,1]):st(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?st(t,[1,1,1,1,s[0]]):st(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?st(t,[1,s[0],1,1]):st(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?st(t,[1,1,1,s[0]]):st(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?st(t,[1,s[0],1]):st(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?st(t,[1,1,s[0]]):st(t,[1].concat(s))}else if(n<3)return t;throw new X(`Unsupported input rank by biasAdd: ${t.rank}`)}function Vs(n,t,e){return at(()=>(e==null&&(e=Bs()),Ke(e),bt(n,pd(n.rank,t,e))))}function lE(n,t=1){if(t!==1)throw new ee(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Au(n)}function uE(n){return at(()=>zt(n,bt(ln(n),1)))}function Gv(n,t,e,s){return at(()=>l$(n,t,e,s))}function hE(n){return at(()=>{const t=bt(.5,K(.2,n));return es(t,0,1)})}function hc(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dE=["fanIn","fanOut","fanAvg"],pE=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fE(n){$r(dE,"FanMode",n)}function mE(n){$r(pE,"Distribution",n)}class ws extends yi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qv extends ws{apply(t,e){return Ge(t,e)}}qv.className="Zeros";yt(qv);class Wf extends ws{apply(t,e){return Go(t,e)}}Wf.className="Ones";yt(Wf);class Hv extends ws{constructor(t){if(super(),typeof t!="object")throw new X(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new X(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return at(()=>K(Yt(this.value),Go(t,e)))}getConfig(){return{value:this.value}}}Hv.className="Constant";yt(Hv);class jv extends ws{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Tu(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}jv.className="RandomUniform";yt(jv);class Kv extends ws{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ee(`randomNormal does not support dType ${e}.`);return Vu(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Kv.className="RandomNormal";yt(Kv);class Xv extends ws{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ee(`truncatedNormal does not support dType ${e}.`);return iv(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Xv.className="TruncatedNormal";yt(Xv);class Yv extends ws{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return at(()=>{if(t.length!==2||t[0]!==t[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return K(this.gain,Fy(t[0]))})}getConfig(){return{gain:this.gain}}}Yv.className="Identity";yt(Yv);function gE(n,t="channelsLast"){let e,s;if(Ke(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const o=Ro(n,2);e=n[1]*o,s=n[0]*o}else if(t==="channelsLast"){const o=Ro(n,0,n.length-2);e=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=Ro(n);e=Math.sqrt(o),s=Math.sqrt(o)}return[e,s]}class qn extends ws{constructor(t){if(super(),t.scale<0)throw new X(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,fE(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,mE(this.distribution),this.seed=t.seed}apply(t,e){const s=gE(t),o=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(o+r)/2),this.distribution==="normal"){const c=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new ee(`${this.getClassName()} does not support dType ${e}.`);return iv(t,0,c,e,this.seed)}else{const c=Math.sqrt(3*i);return Tu(t,-c,c,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}qn.className="VarianceScaling";yt(qn);class Uf extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}}Uf.className="GlorotUniform";yt(Uf);class Gf extends qn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}}Gf.className="GlorotNormal";yt(Gf);class qf extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}}qf.className="HeNormal";yt(qf);class Hf extends qn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}}Hf.className="HeUniform";yt(Hf);class jf extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return qn.className}}jf.className="LeCunNormal";yt(jf);class Kf extends qn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return qn.className}}Kf.className="LeCunNormal";yt(Kf);class Jv extends ws{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new ee("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return at(()=>{if(t.length<2)throw new ee("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const s=t[0]>t[1]?[t[1],t[0]]:t,o=Vu(s,0,1,"float32");let r=MS.gramSchmidt(o);return t[0]>t[1]&&(r=ue(r)),K(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Jv.className="Orthogonal";yt(Jv);const vg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _g(n,t={}){return cc(n,ls.getMap().classNameMap,t,"initializer")}function Pe(n){return Pf(n)}function Ve(n){if(typeof n=="string"){const t=n in vg?vg[n]:n;if(t==="GlorotNormal")return new Gf;if(t==="GlorotUniform")return new Uf;if(t==="HeNormal")return new qf;if(t==="HeUniform")return new Hf;if(t==="LeCunNormal")return new jf;if(t==="LeCunUniform")return new Kf;{const e={};return e.className=t,e.config={},_g(e)}}else return n instanceof ws?n:_g(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fd(n){return Array.isArray(n)&&Array.isArray(n[0])}function nl(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function se(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function we(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sl(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,o)=>s*o);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bg="Variable";class xE{constructor(t,e="float32",s=bg,o=!0,r=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Lv(),s=s??bg,this.originalName=Ov(s),this.name=zv(this.originalName),this.trainable_=o,this.constraint=r,this.val=i$(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),yE(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function yE(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function md(n){return n.map(t=>t.read())}function Xf(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class js{constructor(t,e,s,o,r,i,c){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=o,this.callArgs=r,this.outputTensorIndex=c,this.id=Lv(),i!=null&&(this.originalName=Ov(i),this.name=zv(this.originalName)),this.rank=e.length}}let vE=0;class Lu{constructor(t,e){this.callArgs=e,this.id=vE++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _E=0;class de extends yi{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_E++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=uo(s)+"_"+Fu(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),s=[r].concat(t.inputShape)}this.batchInputShape=s;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new ps(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new X(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Dn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Dn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Us(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Us(`Layer ${this.name} is not connected, no input to return.`);return Dn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Us(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Us(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Dn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Ee(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=Ee(this.inputSpec);if(t.length!==e.length)throw new X(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const o=t[s],r=e[s];if(r==null)continue;const i=o.rank;if(r.ndim!=null&&i!==r.ndim)throw new X(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(r.maxNDim!=null&&i>r.maxNDim)throw new X(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(r.minNDim!=null&&i<r.minNDim)throw new X(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(r.dtype!=null&&o.dtype!==r.dtype)throw new X(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${o.dtype}.`);if(r.axes){const c=o.shape;for(const a in r.axes){const u=Number(a),d=r.axes[a],l=u>=0?c[u]:c[c.length+u];if(d!=null&&[d,null].indexOf(l)===-1)throw new X(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${d} but got shape ${c}.`)}}if(r.shape!=null)for(let c=0;c<r.shape.length;++c){const a=r.shape[c],u=o.shape[c];if(a!=null&&u!=null&&a!==u)throw new X(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Ee(t);let o=!0;for(const i of s)if(!(i instanceof js)){o=!1;break}let r=!0;for(const i of s)if(i instanceof js){r=!1;break}if(o===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return lr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const c of Ee(t))i.push(c.shape);this.build(Dn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let i=this.call(t,e);const c=Ee(i),a=[];for(let u of c)s.indexOf(u)!==-1&&(u=u.clone()),a.push(u);if(i=Dn(a),this.activityRegularizer!=null)throw new ee("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=bE(t),c=this.computeOutputShape(i);let a;const u=wE(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),c!=null&&c.length>0&&Array.isArray(c[0])?a=c.map((d,l)=>new js(u,d,this,Ee(t),e,this.name,l)):a=new js(u,c,this,Ee(t),e,this.name),this.addInboundNode(t,a,null,null,i,c,e),this._refCount++,this.activityRegularizer!=null)throw new ee("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&t[o]!=null&&t[o]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Us(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Us(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ps(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return sl(this.weights)}build(t){this.built=!0}getWeights(t=!1){return md(t?this.trainableWeights:this.weights)}setWeights(t){at(()=>{const e=this.weights;if(e.length!==t.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],o=md(e);for(let r=0;r<o.length;++r){const i=o[r],c=e[r],a=t[r];if(!ve(i.shape,a.shape))throw new X(`Layer weight shape ${i.shape} not compatible with provided weight shape ${a.shape}`);s.push([c,a])}Xf(s)})}addWeight(t,e,s,o,r,i,c,a){if(this._addedWeightNames.indexOf(t)!==-1)throw new X(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=a!=null?a():Ve("zeros"));const u=o.apply(e,s),d=new xE(u,s,t,i,c);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(d.read())),i==null&&(i=!0),i?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Ee(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,s,o,r,i,c=null){const a=Ee(t);e=Ee(e),s=Ee(s),o=Ee(o),r=nl(r),i=nl(i);const u=[],d=[],l=[];for(const f of a)u.push(f.sourceLayer),d.push(f.nodeIndex),l.push(f.tensorIndex);new Lu({outboundLayer:this,inboundLayers:u,nodeIndices:d,tensorIndices:l,inputTensors:a,outputTensors:e,inputMasks:s,outputMasks:o,inputShapes:r,outputShapes:i},c);for(let f=0;f<e.length;f++)e[f].sourceLayer=this,e[f].nodeIndex=this.inboundNodes.length-1,e[f].tensorIndex=f}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function bE(n){n=Ee(n);const t=[];for(const e of n)t.push(e.shape);return Dn(t)}function wE(n){return"float32"}function Zv(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],c=s.inboundLayers[r],a=s.nodeIndices[r],u=Zv(i,c,a);for(const d of u)o.indexOf(d)===-1&&o.push(d)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dc extends de{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Fu("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const o=new js(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}dc.className="InputLayer";yt(dc);function CE(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new dc({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IE(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return Tt(t,n.dtype)}catch{throw new X(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class So{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof So)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=IE(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new X(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof js){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof js){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&ae(this.id2Mask)}}const ol=new Fv,rl=new Fv;function AE(n){ol?.setMaxEntries(n),rl?.setMaxEntries(n)}function Oi(n,t,e,s){const o=e==null?!1:e.training,r=Array.isArray(n),i=r?n:[n],c=i.map(x=>x.name),a=[],u=t.names();for(const x of c)u.indexOf(x)!==-1?a.push(t.getValue(x)):a.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const d=c.join(",")+"|"+t.names().sort().join(",");let l=ol.get(d),f;if(l==null){const x=kE(i,t);l=x.sorted,f=x.recipientCounts,ol.put(d,l),rl.put(d,f)}f={},o||Object.assign(f,rl.get(d));const m=new So(t);for(let x=0;x<l.length;++x){if(s!=null){const U=sd().numTensors;U>s.maxNumTensors&&(s.maxNumTensors=U),U<s.minNumTensors&&(s.minNumTensors=U)}const v=l[x],b=v.sourceLayer;if(b instanceof dc)continue;const w=[],A=[],C=[];let I=!1;for(const U of v.inputs){const G=m.getValue(U),q=m.getMask(U);w.push(G),A.push(q),q!=null&&(I=!0),o||(f[U.name]--,f[U.name]===0&&!t.hasKey(U)&&c.indexOf(U.name)===-1&&!G.isDisposed&&U.sourceLayer.stateful!==!0&&C.push(G))}I&&(e=e||{},e.mask=A[0]);const N=Ee(b.apply(w,e));let E=null;b.supportsMasking&&(E=b.computeMask(w,A));const B=SE(v),M=Array.isArray(B)?B:[B];for(let U=0;U<M.length;++U){m.hasKey(M[U])||m.add(M[U],N[U],Array.isArray(E)?E[0]:E);const G=c.indexOf(M[U].name);G!==-1&&(a[G]=N[U])}o||ae(C)}return m.disposeMasks(),r?a:a[0]}function kE(n,t){P(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const o=wg(n[0],t);e=o.sorted,s=o.recipientMap}else{const o=new Set;for(const r of n){const{sorted:i,recipientMap:c}=wg(r,t);for(const a of i)o.has(a.name)||(e.push(a),o.add(a.name));for(const a in c)s[a]==null&&(s[a]=new Set),c[a].forEach(u=>s[a].add(u))}}return{sorted:e,recipientCounts:$E(s)}}function $E(n){const t={};for(const e in n)t[e]=n[e].size;return t}function wg(n,t){const e=new Set,s=[],o={};for(const c of t.names())e.add(c);const r=[],i=[];for(r.push(n);r.length>0;){const c=r[r.length-1];if(e.has(c.name)){r.pop();continue}const a=i[i.length-1]===r.length-1;if(c.inputs.length===0||a)r.pop(),s.push(c),e.add(c.name),a&&i.pop();else{i.push(r.length-1);for(const u of c.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(c.name),!e.has(u.name)&&r.push(u)}}return{sorted:s,recipientMap:o}}function SE(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE=dt();NE.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,AE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yf(n,t){return at(()=>Nn(Mt(K(n,n),t,!0)))}class pc extends yi{getConfig(){return{}}}class Qv extends pc{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=Yf(t,this.axis),s=es(e,0,this.maxValue);return K(t,zt(s,bt(en(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Qv.className="MaxNorm";yt(Qv);class t0 extends pc{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>zt(t,bt(en(),Yf(t,this.axis))))}getConfig(){return{axis:this.axis}}}t0.className="UnitNorm";yt(t0);class e0 extends pc{apply(t){return vo(t)}}e0.className="NonNeg";yt(e0);class n0 extends pc{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=Yf(t,this.axis),s=bt(K(this.rate,es(e,this.minValue,this.maxValue)),K(1-this.rate,e));return K(t,zt(s,bt(en(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}n0.className="MinMaxNorm";yt(n0);const Cg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function sn(n){return Pf(n)}function Ig(n,t={}){return cc(n,ls.getMap().classNameMap,t,"constraint")}function on(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Cg?Cg[n]:n,config:{}};return Ig(e)}else return n instanceof pc?n:Ig(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Yo(n){if(n==null)return;const t=[],e=[],s=[];for(const o in n){const r=n[o];if(typeof r!="number"){const i=r;t.push(i.data()),e.push(o),s.push(i)}}if(t.length>0){const o=await Promise.all(t);for(let r=0;r<o.length;++r)n[e[r]]=o[r][0];ae(s)}}function s0(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Ag;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Ag||(Ag={}));const TE=125;class Yi{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class EE{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class RE extends Yi{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const o in e){const r=e[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*s;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const c=at(()=>bt(this.totals[o],K(r,s)));this.totals[o]=c,i?.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:at(()=>{const o=K(zt(1,this.seen),this.totals[s]);e[s]=o,this.totals[s].dispose(),Qs(e[s])}))}}class DE extends Yi{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const r in this.history){const i=this.history[r];for(let c=0;c<i.length;++c)if(typeof i[c]!="number"){const a=i[c];t.push(a.data()),e.push(r),s.push(c)}}const o=await Promise.all(t);for(let r=0;r<o.length;++r)this.history[e[r]][s[r]].dispose(),this.history[e[r]][s[r]]=o[r][0]}}class BE extends Yi{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||dv,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=TE),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");zh(this.yieldEvery)&&(this.maybeWait=XT(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const o=[];this.yield!=null&&(await Yo(s),o.push(this.yield(t,e,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Yo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await Yo(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Yo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await Yo(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):zh(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Yo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Yo(t),await this.trainEnd(t))}}function o0(n,t){return n==null&&(n={}),n instanceof Yi?[n]:Array.isArray(n)&&n[0]instanceof Yi?n:Ee(n).map(s=>new BE(s,t))}class as{constructor(){}static registerCallbackConstructor(t,e){P(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),as.checkForDuplicate(e),as.constructors[t]==null&&(as.constructors[t]=[]),as.constructors[t].push(e)}static checkForDuplicate(t){for(const e in as.constructors)as.constructors[+e].forEach(o=>{if(o===t)throw new X("Duplicate callback constructor.")})}static clear(){as.constructors={}}static createCallbacks(t){const e=[];for(const s in as.constructors){const o=+s;t>=o&&e.push(...as.constructors[o])}return e.map(s=>new s)}}as.constructors={};function r0(n,t,e,s,o,r,i,c,a){const u=new DE,d=[new RE,...as.createCallbacks(t)];n!=null&&d.push(...n),d.push(u);const l=new EE(d);return l.setParams({epochs:e,initialEpoch:s,samples:o,steps:r,batchSize:i,verbose:t,doValidation:c,metrics:a}),{callbackList:l,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fo(n,t={},e=!1){return cc(n,ls.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function il(n,t){return at(()=>{n.dtype!=="float32"&&(n=Tt(n,"float32"));const e=Mt(uc(n),t,!0),s=$u(e.shape,en()),o=Nn(Uo(e,s));return zt(n,o)})}function Pu(n,t){return at(()=>Ue(uc(Vt(t,n)),-1))}function Jf(n,t){return at(()=>Ue(ln(Vt(t,n)),-1))}function Zf(n,t){return at(()=>{const e=Vt(n,t),s=es(ln(n),en(),Number.MAX_VALUE),o=ln(zt(e,s));return K(100,Ue(o,-1))})}function FE(n,t){return at(()=>{const e=es(t,en(),Number.MAX_VALUE),s=xs(bt(1,e)),o=es(n,en(),Number.MAX_VALUE),r=xs(bt(1,o));return Ue(uc(Vt(s,r)),-1)})}function ME(n,t){return at(()=>{const e=Uo(0,Vt(1,K(n,t)));return Ue(uc(e),-1)})}function VE(n,t){return at(()=>{const e=Uo(0,Vt(1,K(n,t)));return Ue(e,-1)})}function LE(n,t){return at(()=>{const e=Mt(K(n,t),-1),s=Xs(K(Vt(1,n),t),-1);return Uo(0,bt(1,Vt(s,e)))})}function PE(n,t){return at(()=>{const e=Math.log(2),s=Vt(t,n),o=Vt(bt(s,nc(K(-2,s))),e);return Ue(o,-1)})}function Ji(n,t,e=!1){return at(()=>{if(e)t=nf(t);else{const s=Mt(t,t.shape.length-1,!0);t=zt(t,s)}return t=es(t,en(),1-en()),Oe(Mt(K(Tt(n,"float32"),xs(t)),t.shape.length-1))})}function al(n,t,e=!1){return at(()=>{const s=Tt(Su(aE(n)),"int32");t=es(t,en(),1-en());const o=t.shape,r=st(my(s,o[o.length-1]),o);return Ji(r,t,e)})}function OE(n,t){if(!ve(n.shape,t.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return at(()=>{const e=vo(t),s=Oe(ln(t));return bt(Vt(e,K(t,n)),jp(gs(s)))})}function Ou(n,t){return at(()=>{let e;return e=es(t,en(),1-en()),e=xs(zt(e,Vt(1,e))),Ue(OE(n,e),-1)})}function zE(n,t){return at(()=>{const e=es(n,en(),1),s=es(t,en(),1);return Mt(K(n,xs(zt(e,s))),-1)})}function WE(n,t){return at(()=>{const e=xs(bt(en(),t));return Ue(Vt(t,K(n,e)),-1)})}function i0(n,t){return at(()=>{const e=il(n,-1),s=il(t,-1),o=K(e,s);return Oe(Mt(o,-1))})}const cl={meanSquaredError:Pu,meanAbsoluteError:Jf,meanAbsolutePercentageError:Zf,meanSquaredLogarithmicError:FE,squaredHinge:ME,hinge:VE,categoricalHinge:LE,logcosh:PE,categoricalCrossentropy:Ji,sparseCategoricalCrossentropy:al,binaryCrossentropy:Ou,kullbackLeiblerDivergence:zE,poisson:WE,cosineProximity:i0};function $h(n){if(typeof n=="string"){if(n in cl)return cl[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a0(n,t){return at(()=>{const e=K(.5,ys(t)),s=Mu(bs(t,e),n.dtype);return Ue(to(n,s),-1)})}function c0(n,t){return at(()=>Mu(to(Ki(n,-1),Ki(t,-1)),"float32"))}function UE(n,t){return at(()=>Tt(Mt(mo(to(n,1),to(t,1))),"float32"))}function GE(n,t){return at(()=>Tt(Mt(mo(to(n,0),to(t,1))),"float32"))}function qE(n,t){return at(()=>{const e=UE(n,t),s=GE(n,t),o=bt(e,s);return Tt(Gn(bs(o,0),zt(e,o),0),"float32")})}function HE(n,t){return Ou(n,t)}function jE(n,t){return n.rank===t.rank&&(n=sc(n,[n.rank-1])),t=Ki(t,-1),t.dtype!==n.dtype&&(t=Tt(t,n.dtype)),Tt(to(n,t),"float32")}const KE=Pu,XE=Pu,YE=Jf,JE=Jf,ZE=Zf,QE=Zf,l0=Ji,tR=i0,u0=al,ll={binaryAccuracy:a0,categoricalAccuracy:c0,precision:qE,categoricalCrossentropy:l0,sparseCategoricalCrossentropy:u0,mse:KE,MSE:XE,mae:YE,MAE:JE,mape:ZE,MAPE:QE,cosine:tR};function eR(n){if(typeof n=="string"&&n in ll)return ll[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function Bc(n){if(Gs(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(cl))if(cl[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ll))if(ll[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nR(n){const t={Adagrad:()=>Qo.adagrad(.01),Adadelta:()=>Qo.adadelta(1,.95,en()),Adam:()=>Qo.adam(.001,.9,.999,en()),Adamax:()=>Qo.adamax(.002,.9,.999,en(),0),RMSProp:()=>Qo.rmsprop(.001,.9,0,en()),SGD:()=>Qo.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kg=1*1024*1024;function $g(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!gd(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>kg&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${kg}.`)}}function gd(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!gd(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!gd(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sR(n,t,e,s=console.log){const o=rR(n),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(d=>Math.floor(t*d)));let i;if(!o){r.push("Receives inputs"),i=[];for(const d in n.nodesByDepth)i.push(...n.nodesByDepth[d])}s("_".repeat(t)),ul(r,e,s),s("=".repeat(t));const c=n.layers;for(let d=0;d<c.length;++d)o?iR(c[d],e,s):aR(c[d],e,i,s),s((d===c.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const a=oR(n),u=sl(n.nonTrainableWeights);s(`Total params: ${a+u}`),s(`Trainable params: ${a}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function oR(n){let t;return n.collectedTrainableWeights!=null?t=sl(n.collectedTrainableWeights):t=sl(n.trainableWeights),t}function rR(n){let t=!0;const e=[],s=[];for(const o in n.nodesByDepth)e.push(n.nodesByDepth[o]);for(const o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}s.push(...o)}if(t)for(const o of n.layers){let r=!1;for(const i of o.inboundNodes)if(s.indexOf(i)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function ul(n,t,e=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,t[o]),s+=" ".repeat(t[o]-s.length);e(s)}function iR(n,t,e){let s,o;try{o=n.inboundNodes.map(a=>JSON.stringify(a.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),c=[`${r} (${i})`,o,s,n.countParams().toString()];ul(c,t,e)}function aR(n,t,e,s){let o,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const i=[];for(const l of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(l)===-1))for(let f=0;f<l.inboundLayers.length;++f){const m=l.inboundLayers[f].name,x=l.nodeIndices[f],v=l.tensorIndices[f];i.push(`${m}[${x}][${v}]`)}const c=n.name,a=n.getClassName(),u=i.length===0?"":i[0],d=[`${c} (${a})`,r,o,n.countParams().toString(),u];ul(d,t,s);for(let l=1;l<i.length;++l)ul(["","","","",i[l]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h0(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function xd(n,t){if(n===null)return null;if(typeof n=="string")return nr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];h0(t,o,r)?e.push(r):e.push(xd(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")e[s]=o;else{const r=nr(s);e[r]=xd(o,r)}}return e}}function yd(n,t){if(n==null)return null;if(typeof n=="string")return uo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];h0(t,o,r)?e.push(r):e.push(yd(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const o=n[s],r=uo(s);(s==="name"||s==="className")&&typeof o=="string"?e[r]=o:e[r]=yd(o,s)}return e}}/** @license See the LICENSE file. */const d0="3.18.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ks extends de{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const A=this.getClassName().toLowerCase();this.name=Fu(A)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Eo(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(A=>A.name)}`);Eo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(A=>A.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const A of this.outputs){const C=A.sourceLayer,I=A.nodeIndex,N=A.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(I),this.outputLayersTensorIndices.push(N)}for(const A of this.inputs){const C=A.sourceLayer,I=A.nodeIndex,N=A.tensorIndex;Gs(I===0,"input layer has >1 nodes"),Gs(N===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(I),this.inputLayersTensorIndices.push(N)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let A=0;A<this.inputLayers.length;A++){const C=this.inputLayers[A];if(!(C instanceof dc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${A} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(const A of this.outputLayers)this.outputNames.push(A.name);this.internalInputShapes=this.inputs.map(A=>A.shape),this.internalOutputShapes=this.outputs.map(A=>A.shape);const e={},s={},o={},r={},i={},c=[],a=(A,C,I,N,E,B)=>{(N==null||E==null||B==null)&&(N=A.sourceLayer,E=A.nodeIndex,B=A.tensorIndex);const M=N.inboundNodes[E];if(I.indexOf(M)!==-1)throw new ps(`The tensor ${A.name} at layer "${N.name}" is part of a cycle.`);if(C.indexOf(M)!==-1)return;this.containerNodes.add(ks.nodeKey(N,E)),N.id in i||(i[N.id]=Object.keys(i).length),I.indexOf(M)===-1&&I.push(M);const U=M.inboundLayers.length;for(let G=0;G<U;G++){const q=M.inputTensors[G],tt=M.inboundLayers[G],et=M.nodeIndices[G],Q=M.tensorIndices[G];a(q,C,I,tt,et,Q)}for(C.push(M);I.indexOf(M)>=0;)I.splice(I.indexOf(M),1);c.push(M)},u=[],d=[];for(const A of this.outputs)a(A,u,d);const l=c.slice().reverse();for(const A of l){s[A.id]=A,A.id in e||(e[A.id]=0);let C=e[A.id];const I=o[A.outboundLayer.id]==null?0:o[A.outboundLayer.id];C=Math.max(C,I),o[A.outboundLayer.id]=C,r[A.outboundLayer.id]=A.outboundLayer,e[A.id]=C;for(let N=0;N<A.inboundLayers.length;N++){const E=A.inboundLayers[N],B=A.nodeIndices[N],M=E.inboundNodes[B],U=e[M.id]==null?0:e[M.id];e[M.id]=Math.max(C+1,U),s[M.id]=M}}const f={};for(const A in e){const C=e[A];C in f||(f[C]=[]),f[C].push(s[A])}const m={};for(const A in o){const C=o[A];C in m||(m[C]=[]),m[C].push(r[A])}let x=Object.keys(m).map(A=>parseInt(A,10)).sort(Ec);this.layers=[];for(const A of x){const C=m[A];C.sort((I,N)=>{const E=i[I.id],B=i[N.id];return E<B?-1:E>B?1:0});for(const I of C)I instanceof ks&&this.internalContainerRefs.push(I),this.layers.push(I)}this.layersByDepth=m,x=Object.keys(f).map(A=>parseInt(A,10)).sort(Ec);const v=this.inputs.slice(),b=[];for(const A of x)for(const C of f[A]){const I=C.outboundLayer;if(I!=null){for(const N of C.inputTensors)if(v.indexOf(N)===-1)throw new ps(`Graph disconnected: cannot obtain value for tensor ${N} at layer "${I.name}". The following previous layers were accessed without issue: ${b}`);for(const N of C.outputTensors)v.push(N);b.push(I.name)}}this.nodesByDepth=f;const w=this.layers.map(A=>A.name);for(const A of w){const C=w.filter(I=>I===A).length;if(C!==1)throw new ps(`The name "${A}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(w))}this.outboundNodes=[],this.inboundNodes=[],new Lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(A=>null),outputMasks:this.outputs.map(A=>null),inputShapes:this.inputs.map(A=>A.shape),outputShapes:this.outputs.map(A=>A.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let o=0;for(const i of this.layers)for(const c of i.weights){if(s[c.originalName]!=null)throw new X(`Duplicate weight name: ${c.originalName}`);s[c.originalName]=c,o++}const r=[];for(const i in t){let c=i;if(s[i]==null){const a=i.split("/");c=a.slice(0,-2).concat([a[a.length-1]]).join("/")}if(s[c]!=null)r.push([s[c],t[i]]);else if(e)throw new X(`Provided weight data has no target variable: ${i}`);delete s[c]}if(e){const i=[];for(const c in s)i.push(c);if(i.length>0)throw new X(`${i.length} of ${o} weights are not set: ${i}`)}Xf(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${d0}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=yd(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return at(()=>{t=Ee(t);const s=new So;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],t[o]);return Oi(this.outputs,s,e)})}computeMask(t,e){return at(()=>{t=Ee(t);let s;return e==null?s=br(null,t.length):s=Ee(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=nl(t);if(e.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let c=0;c<e.length;c++){const a=this.inputLayers[c],u=e[c],d=a.name+"_0_0";s[d]=u}const o=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(Ec);if(o.length>1)for(const c of o){const a=this.nodesByDepth[c];for(const u of a){const d=u.outboundLayer;if(this.inputLayers.map(v=>v.id).indexOf(d.id)!==-1)continue;const l=[];for(let v=0;v<u.inboundLayers.length;v++){const b=u.inboundLayers[v],w=u.nodeIndices[v],A=u.tensorIndices[v],C=`${b.name}_${w}_${A}`,I=s[C];l.push(I)}const f=d.computeOutputShape(Dn(l)),m=nl(f),x=d.inboundNodes.indexOf(u);for(let v=0;v<m.length;v++){const b=`${d.name}_${x}_${v}`;s[b]=m[v]}}}const r=[],i=[];for(let c=0;c<this.outputLayers.length;c++){const a=this.outputLayers[c],u=this.outputLayersNodeIndices[c],d=this.outputLayersTensorIndices[c],l=`${a.name}_${u}_${d}`;i.push(l)}for(let c=0;c<i.length;c++){const a=i[c];Gs(a in s),r.push(s[a])}return Dn(r)}runInternalGraph(t,e){e==null&&(e=br(null,t.length));const s={};for(let a=0;a<this.inputs.length;++a){const u=this.inputs[a],d=t[a],l=e[a];s[u.id]=[d,l]}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Ec);for(const a of o){const u=this.nodesByDepth[a];for(const d of u){const l=d.outboundLayer,f=d.inputTensors,m=d.outputTensors,x=new Array;for(const v of f)v.id in s&&x.push(s[v.id]);if(x.length===f.length){let v={},b,w,A,C;if(d.callArgs!=null&&(v=d.callArgs),x.length===1){const[I,N]=x[0];v.mask==null&&(v.mask=N),A=Ee(l.call(I,v)),C=Ee(l.computeMask(I,N)),b=[I],w=[N]}else b=x.map(I=>I[0]),w=x.map(I=>I[1]),v.mask==null&&(v.mask=w),A=Ee(l.call(b,v)),C=Ee(l.computeMask(b,w));if(l.activityRegularizer)throw new ee("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let I=0;I<m.length;++I){const N=m[I],E=A[I],B=C[I];s[N.id]=[E,B]}}}}const r=[],i=[],c=[];for(const a of this.outputs){Gs(a.id in s,`Could not compute output ${a.name} : ${a.id}`);const[u,d]=s[a.id];c.push(u.shape),r.push(u),i.push(d)}return[r,i,c]}buildNodeConversionMap(t){const e={};let s;for(const o of this.layers){s=o instanceof ks?1:0;for(let r=0;r<o.inboundNodes.length;r++){const i=ks.nodeKey(o,r);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new X(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new X("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new X(`No such layer: ${t}`)}calculateLosses(){return at(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const o=ks.nodeKey(e,s);this.containerNodes.has(o)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const c=i.getClassName(),a=i.getConfig(),u=[];for(let l=0;l<i.inboundNodes.length;l++){const f=i.inboundNodes[l],m=ks.nodeKey(i,l);let x={};if(this.containerNodes.has(m)){if(f.callArgs)try{JSON.stringify(f.callArgs),x=f.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${f.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),x={}}if(f.inboundLayers.length>0){const v=[];for(let b=0;b<f.inboundLayers.length;b++){const w=f.inboundLayers[b],A=f.nodeIndices[b],C=f.tensorIndices[b],I=ks.nodeKey(w,A);let N=e[I];N==null&&(N=0),v.push([w.name,N,C,x])}u.push(v)}}}const d={};d.name=i.name,d.className=c,d.config=a,d.inboundNodes=u,s.push(d)}t.layers=s;const o=[];for(let i=0;i<this.inputLayers.length;i++){const c=this.inputLayers[i],a=this.inputLayersNodeIndices[i],u=ks.nodeKey(c,a);if(!this.containerNodes.has(u))continue;let d=e[u];d==null&&(d=0);const l=this.inputLayersTensorIndices[i];o.push([c.name,d,l])}t.inputLayers=o;const r=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],a=this.outputLayersNodeIndices[i],u=ks.nodeKey(c,a);if(!this.containerNodes.has(u))continue;let d=e[u];d==null&&(d=0);const l=this.outputLayersTensorIndices[i];r.push([c.name,d,l])}return t.outputLayers=r,t}static fromConfig(t,e,s={},o=!1){const r={},i={};function c(b,w){b.name in i?i[b.name].push(w):i[b.name]=[w]}function a(b,w){const A=[];let C;for(const I of w){const N=I[0],E=I[1],B=I[2];if(C=I[3]==null?{}:I[3],!(N in r)){c(b,w);return}const M=r[N];if(M.inboundNodes.length<=E){c(b,w);return}const U=M.inboundNodes[E];A.push(U.outputTensors[B])}A.length>0&&b.apply(Dn(A),C)}function u(b){const w=b.name,A=fo(b,e.customObjects!=null?e.customObjects:{});A.setFastWeightInitDuringBuild(o),r[w]=A,b.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${I}`);c(A,I)})}const d=e.name,l=e.layers;for(const b of l)u(b);for(;!KT(i);)for(const b of l){const w=r[b.name];if(w.name in i){const A=i[w.name];delete i[w.name];for(const C of A)a(w,C)}}const f=[],m=[],x=e.inputLayers;for(const b of x){const w=b[0],A=b[1],C=b[2];Gs(w in r);const N=r[w].inboundNodes[A].outputTensors;f.push(N[C])}const v=e.outputLayers;for(const b of v){const w=b[0],A=b[1],C=b[2];Gs(w in r);const N=r[w].inboundNodes[A].outputTensors;m.push(N[C])}return new t({inputs:f,outputs:m,name:d})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){at(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cR(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return t.forEach(r=>{r in n?o.push(n[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function p0(n,t){return cR(n,t,"classWeight")}async function f0(n,t,e,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const o=at(()=>{if(n.shape.length===1)return ar(n);if(n.shape.length===2){if(n.shape[1]>1)return Ki(n,1);if(n.shape[1]===1)return st(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());ae(o);const i=[];return r.forEach(c=>{if(e[c]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${c} exists in the data but not in classWeight`);i.push(e[c])}),Wn(i,"float32")}else return null}function lR(n,t){return K(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const uR=32;function m0(n,t){let e,s;const o=t;e=o.xs,s=o.ys,P(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=Sg("input",n.inputNames,e),i=Sg("output",n.outputNames,s),c=r[0].shape[0];P(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),P(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let a=0;a<r.length;a++)P(r[a].shape[0]===c,()=>`Batch size mismatch: input ${n.inputNames[a]} has ${r[a].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);for(let a=0;a<i.length;a++)P(i[a].shape[0]===c,()=>`Batch size mismatch: output ${n.outputNames[a]} has ${i[a].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function Sg(n,t,e){if(e instanceof Je)return[e];if(Array.isArray(e))return P(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const o of t){if(e[o]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(e[o])}return s}}function hR(n){if(n.length===3)throw new ee("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function dR(n,t,e){const s=e.batchesPerEpoch!=null;if(P(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),P(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),P(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),P(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),P(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=e.validationData!=null;let r,i;if(o)if(Ng(e.validationData))P(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const b=hR(e.validationData);r=b.xs,i=b.ys}const c=n.makeTrainFunction(),a=n.getDedupedMetricsNames();let u;o?u=a.slice().concat(a.map(b=>"val_"+b)):u=a.slice();const d=o0(e.callbacks,e.yieldEvery),l=e.verbose==null?1:e.verbose,{callbackList:f,history:m}=r0(d,l,e.epochs,null,null,pR(t,e),null,o,u);f.setModel(n),n.history=m,await f.onTrainBegin(),n.stopTraining_=!1;let x=e.initialEpoch==null?0:e.initialEpoch,v=await t.iterator();for(;x<e.epochs;){const b={};await f.onEpochBegin(x);let w=0,A=0;for(s||(v=await t.iterator());!s||w<e.batchesPerEpoch;){const C=await v.next();if(s&&C.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${w} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(C.value!=null){const{xs:I,ys:N}=m0(n,C.value),E={};E.batch=A,E.size=I[0].shape[0],await f.onBatchBegin(A,E);const B=[];if(e.classWeight!=null){const G=p0(e.classWeight,n.outputNames);for(let q=0;q<G.length;++q)B.push(await f0(N[q],null,G[q]))}const M=I.concat(N).concat(B),U=c(M);ae(M);for(let G=0;G<a.length;++G){const q=a[G],tt=U[G];E[q]=tt,Qs(tt)}await f.onBatchEnd(A,E),s0(E),A++,w++}if(s?w>=e.batchesPerEpoch:C.done){if(o){let I;Ng(e.validationData)?I=Ee(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):I=Ee(n.evaluate(r,i,{batchSize:e.validationBatchSize==null?uR:e.validationBatchSize,verbose:0}));for(let N=0;N<n.metricsNames.length;++N)b[`val_${n.metricsNames[N]}`]=I[N]}break}if(n.stopTraining_)break}if(await f.onEpochEnd(x,b),x++,n.stopTraining_)break}return await f.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function pR(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Ng(n){return typeof n.iterator=="function"}function fR(n){return typeof n.next=="function"}async function mR(n,t,e){e=e||{};const s=e.batches!=null,o=n.testFunction;let r=[];if(e.verbose>0)throw new ee("Verbose mode is not implemented yet.");P(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=fR(t)?t:await t.iterator();let c=0,a=0;for(;!s||a<e.batches;){const u=await i.next();if(r=at(()=>{if(u.value){const{xs:d,ys:l}=m0(n,u.value),f=d.concat(l),m=at(()=>o(f));if(ae(f),a===0)for(let v=0;v<m.length;++v)r.push(Yt(0));const x=f[0].shape[0];for(let v=0;v<m.length;++v){const b=m[v],w=r[v];r[v]=at(()=>bt(r[v],K(x,b))),a>0&&ae(w)}ae(m),c+=x,++a}return r}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const d=r[u];r[u]=zt(r[u],c),ae(d)}return Dn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vd(n){P(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function zi(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>ur(s,t,e-t)):ur(n,t,e-t)}function Qf(n,t){return at(()=>n==null?null:Array.isArray(n)?n.map(e=>Qf(e,t)):Uv(n,t.dtype==="int32"?t:Tt(t,"int32")))}function _d(n,t){const e=[];let s=0,o=null;for(;s<n;)o=s+t,o>=n&&(o=n),e.push([s,o]),s=o;return e}async function gR(n,t,e,s,o,r,i,c,a,u,d,l,f,m,x){o==null&&(o=32),r==null&&(r=1),d==null&&(d=!0),f==null&&(f=0);let v=!1;if(a!=null&&u!=null&&(v=!0),x!=null&&(v=!0,m==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=n.checkNumSamples(e,o,m,"steps_per_epoch");let w;b!=null&&(w=Ds(0,b)),i==null&&(i=1);const{callbackList:A,history:C}=r0(c,i,r,f,b,m,o,v,l);A.setModel(n),n.history=C,await A.onTrainBegin(),n.stopTraining_=!1;for(let I=f;I<r;++I){await A.onEpochBegin(I);const N={};if(m!=null)throw new ee("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new ee("batch shuffling is not implemneted yet");d&&zw(w);const E=Wn(w),B=_d(b,o);for(let M=0;M<B.length;++M){const U={};if(await A.onBatchBegin(M,U),at(()=>{const G=B[M][0],q=B[M][1],tt=ur(E,G,q-G);U.batch=M,U.size=q-G;const et=Qf(e,tt),Q=t(et);for(let it=0;it<s.length;++it){const nt=s[it],Z=Q[it];U[nt]=Z,Qs(Z)}if(M===B.length-1&&v){const it=n.testLoop(a,u,o);for(let nt=0;nt<s.length;++nt){const Z=s[nt],lt=it[nt];Qs(lt),N["val_"+Z]=lt}}}),await A.onBatchEnd(M,U),s0(U),n.stopTraining_)break}E.dispose()}if(await A.onEpochEnd(I,N),n.stopTraining_)break}return await A.onTrainEnd(),await n.history.syncData(),n.history}async function xR(n,t,e,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let o,r,i,c,a,u,d,l,f;try{const m=s.batchSize==null?32:s.batchSize;vd(m);const x=!1,v=await n.standardizeUserData(t,e,s.sampleWeight,s.classWeight,x,m);o=v[0],r=v[1],f=v[2];let b=!1,w;if(s.validationData!=null&&s.validationData.length>0){if(b=!0,s.validationData.length===2)a=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new ee("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const U=!0,G=await n.standardizeUserData(a,u,null,null,U,m);d=G[0],l=G[1],w=d.concat(l)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){b=!0;const U=Math.floor(o[0].shape[0]*(1-s.validationSplit)),G=o[0].shape[0];d=zi(o,U,G),i=o,o=zi(o,0,U),l=zi(r,U,G),c=r,r=zi(r,0,U),w=d.concat(l)}else s.validationSteps!=null&&(b=!0);const A=o.concat(r).concat(f);n.checkTrainableWeightsConsistency();const C=n.makeTrainFunction(),I=n.getDedupedMetricsNames();let N,E;b?(n.makeTestFunction(),N=n.testFunction,E=I.slice().concat(I.map(U=>"val_"+U))):(N=null,w=[],E=I.slice());const B=o0(s.callbacks,s.yieldEvery);return await gR(n,C,A,I,m,s.epochs,s.verbose,B,N,w,s.shuffle,E,s.initialEpoch,null,null)}finally{n.isTraining=!1,Ss(o,t),Ss(r,e),Ss(i,t),Ss(c,e),Ss(d,a),Ss(l,u),f!=null&&ae(f)}}function g0(n){const t=[];n instanceof Je&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(lc(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Ss(n,t){if(n==null)return;const e=[];if(t instanceof Je)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(const o in t){const r=t[o];e.push(r.id)}const s=[];if(n instanceof Je)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{e.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const r=n[o];e.indexOf(r.id)===-1&&s.push(r)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yR(n){return n instanceof Je}function bd(n){return Array.isArray(n)}function Tg(n){return!yR(n)&&!bd(n)}function Eg(n,t,e,s=!0,o=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(bd(n)&&n.length>0)i=!0;else if(Tg(n)){for(const c in n)if(n.hasOwnProperty(c)){i=!0;break}}else i=!0;if(i)throw new X(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let r;if(Tg(n)){n=n,r=[];for(const i of t){if(n[i]==null)throw new X(`No data provided for "${i}". Need data for each key in: ${t}`);r.push(n[i])}}else if(bd(n)){if(n=n,n.length!==t.length)throw new X(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,t.length>1)throw new X(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=g0(r),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const c=r[i];if(c.shape.length!==e[i].length)throw new X(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${c.shape}`);for(let a=0;a<e[i].length;++a){if(a===0&&!s)continue;const u=c.shape[a],d=e[i][a];if(d!=null&&d>=0&&u!==d)throw new X(`${o} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${o} received an input with ${c.shape[0]} examples, each with shape [${c.shape.slice(1,c.shape.length)}] (tensor shape [${c.shape}])`)}}return r}function vR(n,t,e){const s=Eo(n.map(r=>r.shape[0]));s.sort();const o=Eo(t.map(r=>r.shape[0]));if(o.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(o.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(s.length>0&&o.length>0&&!ve(s,o))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function _R(n,t,e){const s=[Pu,Ou,Ji];for(let o=0;o<n.length;++o){const r=n[o],i=t[o],c=e[o];if(i!=null){if(i===Ji&&r.shape[r.shape.length-1]===1)throw new X(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const a=r.shape.slice(1),u=c.slice(1);for(let d=0;d<a.length;++d){const l=a[d],f=u[d];if(f!=null&&l!==f)throw new X(`A target Tensor with shape ${r.shape} was passed for an output of shape ${c}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Rg(n,t,e,s=!0,o=""){let r;if(Array.isArray(n)){if(n.length!==t.length)throw new X(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(t.length>1)throw new X(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const c=r[i];if(c.shape.length!==e[i].length)throw new X(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let a=0;a<e[i].length;++a){if(a===0&&!s)continue;const u=c.shape[a],d=e[i][a];if(d!=null&&d!==u)throw new X(`Error when checking ${o}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}function bR(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const o of t){let r=e.hasOwnProperty(o)?e[o]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const wR="layers-model";class Zr extends ks{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");sR(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=nR(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof qo))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new X(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push($h(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(c=>$h(c))}else{const i=$h(t.loss);this.outputs.forEach(c=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const c=this.internalOutputShapes[i],a=this.outputNames[i];this.feedOutputNames.push(a),this.feedOutputShapes.push(c),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],lr("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const c=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([c,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=bR(t.metrics,this.outputNames),r=(i,c,a)=>{this.outputNames.length>1&&(c=this.outputNames[i]+"_"+c),this.metricsNames.push(c),this.metricsTensors.push([a,i])};lr("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const c=o[i];(u=>{const d="";let l,f,m;for(const x of u){if(typeof x=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(x)!==-1){const b=this.internalOutputShapes[i];b[b.length-1]===1||this.lossFunctions[i]===Ou?["accuracy","acc"].indexOf(x)!==-1?f=a0:["crossentropy","ce"].indexOf(x)!==-1&&(f=HE):this.lossFunctions[i]===al?["accuracy","acc"].indexOf(x)!==-1?f=jE:["crossentropy","ce"].indexOf(x)!==-1&&(f=u0):["accuracy","acc"].indexOf(x)!==-1?f=c0:["crossentropy","ce"].indexOf(x)!==-1&&(f=l0);let w;["accuracy","acc"].indexOf(x)!==-1?w="acc":["crossentropy","ce"].indexOf(x)!==-1&&(w="ce"),m=f,l=d+w}else m=eR(x),l=d+Bc(x);let v;lr(l,()=>{v=m}),r(i,l,v)}})(c)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const o=s.batchSize==null?32:s.batchSize;vd(o);const r=!0,i=this.standardizeUserDataXY(t,e,r,o);try{const c=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction,u=this.testLoop(a,c,o,s.verbose,s.steps);return Dn(u)}finally{Ss(i[0],t),Ss(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),mR(this,t,e)}checkNumSamples(t,e,s,o="steps"){let r;if(s!=null){if(r=null,e!=null)throw new X(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new X(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),o=s?e:[e],r=this.retrieveSymbolicTensors(o),i=new So;if(t instanceof Je&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new X(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let a=0;a<this.inputs.length;++a)i.add(this.inputs[a],t[a])}else for(const a of this.inputs){const u=t[a.name];if(u==null)throw new X(`No value is provided for the model's input ${a.name}`);i.add(a,u)}const c=Oi(r,i);return s?c:c[0]}retrieveSymbolicTensors(t){const e=br(null,t.length);let s=t.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],i=r.map(c=>c.name);for(let c=0;c<t.length;++c){const a=i.indexOf(t[c]);if(a!==-1&&(e[c]=r[a],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw e.forEach((r,i)=>{r==null&&o.push(t[i])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return e}predictLoop(t,e=32,s=!1){return at(()=>{const o=this.checkNumSamples(t);if(s)throw new ee("Verbose predictLoop() is not implemented yet.");const r=_d(o,e),i=this.outputs.map(c=>[]);for(let c=0;c<r.length;++c)at(()=>{const u=r[c][0],d=r[c][1],l=zi(t,u,d),f=[];if(Array.isArray(l))for(let x=0;x<l.length;++x)f.push({key:this.inputs[x],value:l[x]});else f.push({key:this.inputs[0],value:l});const m=new So(f);return Oi(this.outputs,m)}).forEach((u,d)=>i[d].push(u));return Dn(i.map(c=>wn(c,0)))})}predict(t,e={}){const s=g0(t);Rg(s,this.inputNames,this.feedInputShapes,!1);try{const o=e.batchSize==null?32:e.batchSize;return vd(o),this.predictLoop(s,o)}finally{Ss(s,t)}}predictOnBatch(t){Rg(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,o){if(this.optimizer_==null)throw new ps("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const c=this.feedOutputShapes[i];this.feedLossFns[i]===al?r.push(c.slice(0,c.length-1).concat([1])):r.push(c)}if(t=Eg(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Eg(e,this.feedOutputNames,r,!1,"target"),vR(t,e),_R(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,o,r=!0,i){const[c,a]=this.standardizeUserDataXY(t,e,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){const d=p0(o,this.outputNames);u=[];for(let l=0;l<d.length;++l)u.push(await f0(a[l],null,d[l]))}return[c,a,u]}testLoop(t,e,s,o=0,r){return at(()=>{const i=this.checkNumSamples(e,s,r,"steps"),c=[];if(o>0)throw new ee("Verbose mode is not implemented yet.");if(r!=null)throw new ee("steps mode in testLoop() is not implemented yet");{const a=_d(i,s),u=Wn(Ds(0,i));for(let d=0;d<a.length;++d){const l=a[d][0],f=a[d][1],m=ur(u,l,f-l),x=Qf(e,m),v=t(x);if(d===0)for(let b=0;b<v.length;++b)c.push(Yt(0));for(let b=0;b<v.length;++b){const w=v[b];c[b]=bt(c[b],K(f-l,w))}}for(let d=0;d<c.length;++d)c[d]=zt(c[d],i)}return c})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const o=t[s];let r=o;gg(t,o)>1&&(r+=`_${gg(t.slice(0,s),o)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],c=()=>{const l=[];for(let v=0;v<this.inputs.length;++v)l.push({key:this.inputs[v],value:s[v]});const f=new So(l),m=Oi(this.outputs,f,{training:!0});let x;for(let v=0;v<this.lossFunctions.length;++v){let w=this.lossFunctions[v](o[v],m[v]);r[v]!=null&&(w=lR(w,r[v]));const A=Ue(w);e.push(A),v===0?x=w:x=bt(x,w)}for(let v=0;v<this.metricsTensors.length;++v){let b;if(this.outputs.length>1&&v<this.outputs.length)b=e[v];else{const w=this.metricsTensors[v][0],A=this.metricsTensors[v][1];b=Ue(w(o[A],m[A]))}Qs(b),i.push(b)}return x=Ue(x),this.calculateLosses().forEach(v=>{x=bt(x,v)}),x},a=this.collectedTrainableWeights.map(l=>l.read()),u=!0;return[this.optimizer_.minimize(c,u,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>at(()=>{const e=[];let s;const o=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:o[u]});const c=new So(i),a=Oi(this.outputs,c);for(let u=0;u<this.lossFunctions.length;++u){const d=this.lossFunctions[u],l=Ue(d(r[u],a[u]));u===0?s=l:s=bt(s,l),e.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const d=this.metricsTensors[u][0],l=this.metricsTensors[u][1],f=Ue(d(r[l],a[l]));e.push(f)}return e})}async fit(t,e,s={}){return xR(this,t,e,s)}async fitDataset(t,e){return dR(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),o=s[0],r=s[1],c=this.makeTrainFunction()(o.concat(r)),a=[];for(const u of c){const d=await u.data();a.push(d[0])}return ae(c),Ss(s[0],t),Ss(s[1],e),Dn(a)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,o=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<o.length;++i)s&&!o[i].trainable||e.push({name:o[i].originalName,tensor:r[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=sd().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-sd().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=uo(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>uo(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const o of e)if(typeof s[o]=="string")t[o]=uo(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[uo(Bc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>uo(Bc(t)));{const t={};for(const e in this.metrics)t[e]=uo(Bc(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=xd(t.optimizer_config),s=fo(e);let o;if(typeof t.loss=="string")o=nr(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(i=>nr(i));else if(t.loss!=null){o={};for(const i in t.loss)o[i]=nr(t.loss[i])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(i=>nr(i));else if(t.metrics!=null){r={};for(const i in t.metrics)r[i]=nr(t.metrics[i])}this.compile({loss:o,metrics:r,optimizer:s})}async save(t,e){if(typeof t=="string"){const u=RC(t);if(u.length===0)throw new X(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new X(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Zm(this.getNamedWeights(e)),o=!1,r=null,c={modelTopology:this.toJSON(r,o),format:wR,generatedBy:`TensorFlow.js tfjs-layers v${d0}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){c.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:d,specs:l}=await Zm(await this.optimizer.getWeights(),u);s.specs.push(...l),s.data=iy([s.data,d])}return this.userDefinedMetadata!=null&&($g(this.userDefinedMetadata,this.name,!0),c.userDefinedMetadata=this.userDefinedMetadata),c.weightData=s.data,c.weightSpecs=s.specs,t.save(c)}setUserDefinedMetadata(t){$g(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zr.className="Model";yt(Zr);class x0 extends Zr{}x0.className="Functional";yt(x0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class li extends Zr{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Fu("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof li||t instanceof Zr;let s;if(e){if(s=t,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=CE({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Zv(this.outputs[0])}this.inboundNodes=[],new Lu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:br(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(we(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new ps("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new ps("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new ps("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new ps("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},o=!1){let r,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=e}else P(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,i=e;const c=new t(i);if(!(c instanceof li))throw new ee(`Sequential.fromConfig called on non-Sequential input: ${c}`);for(const a of r){const d=fo(a,void 0,o);o&&d.setFastWeightInitDuringBuild(!0),c.add(d)}return c}set stopTraining(t){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}li.className="Sequential";yt(li);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CR(n){return new li(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vn extends yi{getConfig(){return{}}}class y0 extends Vn{apply(t,e=1){return lE(t,e)}}y0.className="elu";yt(y0);class v0 extends Vn{apply(t){return Zy(t)}}v0.className="selu";yt(v0);class _0 extends Vn{apply(t){return vo(t)}}_0.className="relu";yt(_0);class b0 extends Vn{apply(t){return at(()=>Nu(6,vo(t)))}}b0.className="relu6";yt(b0);class w0 extends Vn{apply(t){return t}}w0.className="linear";yt(w0);class C0 extends Vn{apply(t){return vi(t)}}C0.className="sigmoid";yt(C0);class I0 extends Vn{apply(t){return hE(t)}}I0.className="hardSigmoid";yt(I0);class A0 extends Vn{apply(t){return nc(t)}}A0.className="softplus";yt(A0);class k0 extends Vn{apply(t){return uE(t)}}k0.className="softsign";yt(k0);class $0 extends Vn{apply(t){return Pp(t)}}$0.className="tanh";yt($0);class tm extends Vn{apply(t,e=-1){return nf(t,e)}}tm.className="softmax";yt(tm);class S0 extends Vn{apply(t,e=-1){return Vy(t,e)}}S0.className="logSoftmax";yt(S0);class N0 extends Vn{apply(t,e=1){return at(()=>K(vi(K(t,e)),t))}}N0.className="swish";yt(N0);class T0 extends Vn{apply(t){return at(()=>K(t,Pp(nc(t))))}}T0.className="mish";yt(T0);function Fo(n){return n.getClassName()}function Sh(n,t={}){return cc(n,ls.getMap().classNameMap,t,"activation")}function Mo(n){if(n==null){const t={};return t.className="linear",t.config={},Sh(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},Sh(t)}else return n instanceof Vn?n:Sh(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IR(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class E0 extends yi{}class R0 extends E0{constructor(t){super(),IR(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return at(()=>{let e=Ge([1]);return this.hasL1&&(e=bt(e,Mt(K(this.l1,ln(t))))),this.hasL2&&(e=bt(e,Mt(K(this.l2,uc(t))))),st(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}R0.className="L1L2";yt(R0);const Dg={l1l2:"L1L2"};function Ae(n){return Pf(n)}function Bg(n,t={}){return cc(n,ls.getMap().classNameMap,t,"regularizer")}function Le(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Dg?Dg[n]:n,config:{}};return Bg(e)}else return n instanceof E0?n:Bg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class D0 extends de{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=se(t);let s=vo(t);return this.maxValue!=null&&(s=es(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}D0.className="ReLU";yt(D0);class B0 extends de{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=se(t);return Hp(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}B0.className="LeakyReLU";yt(B0);class F0 extends de{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ve(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Le(t.alphaRegularizer),this.alphaConstraint=on(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=we(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)e[o-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)s[o]=t[o];this.inputSpec=[new nn({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=se(t),Qp(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Pe(this.alphaInitializer),alphaRegularizer:Ae(this.alphaRegularizer),alphaConstraint:sn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}F0.className="PReLU";yt(F0);class M0 extends de{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new ee(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=se(t);return Au(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}M0.className="ELU";yt(M0);class V0 extends de{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=se(t);return K(s,Tt(bs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}V0.className="ThresholdedReLU";yt(V0);class L0 extends de{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new tm().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const s=se(t);return this.softmax(s,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}L0.className="Softmax";yt(L0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qr(n,t,e){if(typeof n=="number")return br(n,t);if(n.length!==t)throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const o=n[s];if(!rE(o))throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function Rs(n,t,e,s,o=1){if(n==null)return n;const r=t+(t-1)*(o-1);let i;return e==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function qs(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Bo([e-t,0]);else if(s==="same")n=n*t;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function em(n,t){return at(()=>(Ke(t),t==="channelsFirst"?ue(n,[0,2,3,1]):n))}function P0(n,t){return at(()=>(Ke(t),t==="channelsFirst"?ue(n,[0,2,3,4,1]):n))}function AR(n,t,e,s=1,o="valid",r,i=1){return at(()=>{if(r==null&&(r=Bs()),Ke(r),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(n=ue(n,[0,2,1])),o==="causal")throw new ee("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=Sy(n,t,s,o==="same"?"same":"valid","NWC",i);return e!=null&&(c=Vs(c,e)),c})}function Fg(n,t,e,s=[1,1],o="valid",r,i,c=null){return at(()=>{if(r==null&&(r=Bs()),Ke(r),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let a=em(n,r);if(o==="causal")throw new ee("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return a=p$({x:a,filter:t,strides:s,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:c}),r==="channelsFirst"&&(a=ue(a,[0,3,1,2])),a})}function kR(n,t,e,s=[1,1,1],o="valid",r,i){return at(()=>{if(r==null&&(r=Bs()),Ke(r),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let c=P0(n,r);if(o==="causal")throw new ee("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=T2(c,t,s,o==="same"?"same":"valid","NDHWC",i),e!=null&&(c=Vs(c,e)),r==="channelsFirst"&&(c=ue(c,[0,4,1,2,3])),c})}class zu extends de{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zu.verifyArgs(e),this.rank=t,hn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ee(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qr(e.kernelSize,t,"kernelSize"),this.strides=Qr(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,ns(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ke(this.dataFormat),this.activation=Mo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ve(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=on(e.biasConstraint),this.biasRegularizer=Le(e.biasRegularizer),this.activityRegularizer=Le(e.activityRegularizer),this.dilationRate=Qr(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Gs("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Of(t.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Fo(this.activation),useBias:this.useBias,biasInitializer:Pe(this.biasInitializer),biasRegularizer:Ae(this.biasRegularizer),activityRegularizer:Ae(this.activityRegularizer),biasConstraint:sn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Ci extends zu{constructor(t,e){super(t,e),this.kernel=null,Ci.verifyArgs(e),this.filters=e.filters,hn(this.filters,"filters"),this.kernelInitializer=Ve(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=on(e.kernelConstraint),this.kernelRegularizer=Le(e.kernelRegularizer)}build(t){t=we(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return at(()=>{t=se(t);let s;const o=this.bias==null?null:this.bias.read(),r=Vv(this.activation.getClassName());if(r!=null&&this.rank===2)s=Fg(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=AR(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Fg(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=kR(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ee("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=we(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<s.length;++r){const i=Rs(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(i)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(e),o.push(this.filters)):(o.push(this.filters),o=o.concat(e)),o}getConfig(){const t={filters:this.filters,kernelInitializer:Pe(this.kernelInitializer),kernelRegularizer:Ae(this.kernelRegularizer),kernelConstraint:sn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class fc extends Ci{constructor(t){super(2,t),fc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Of(t.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}fc.className="Conv2D";yt(fc);class mc extends Ci{constructor(t){super(3,t),mc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}mc.className="Conv3D";yt(mc);class O0 extends fc{constructor(t){if(super(t),this.inputSpec=[new nn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=we(t),t.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nn({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{let s=se(t);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,c;this.dataFormat==="channelsFirst"?(i=2,c=3):(i=1,c=2);const a=o[i],u=o[c],d=this.kernelSize[0],l=this.kernelSize[1],f=this.strides[0],m=this.strides[1],x=qs(a,f,d,this.padding),v=qs(u,m,l,this.padding),b=[r,x,v,this.filters];this.dataFormat!=="channelsLast"&&(s=ue(s,[0,2,3,1]));let w=Ny(s,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=ue(w,[0,3,1,2])),this.bias!=null&&(w=Vs(w,this.bias.read(),this.dataFormat)),this.activation!=null&&(w=this.activation.apply(w)),w})}computeOutputShape(t){t=we(t);const e=t.slice();let s,o,r;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3):(s=3,o=1,r=2);const i=this.kernelSize[0],c=this.kernelSize[1],a=this.strides[0],u=this.strides[1];return e[s]=this.filters,e[o]=qs(e[o],a,i,this.padding),e[r]=qs(e[r],u,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}O0.className="Conv2DTranspose";yt(O0);class z0 extends mc{constructor(t){if(super(t),this.inputSpec=[new nn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=we(t),t.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nn({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{let s=se(t);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,c,a;this.dataFormat==="channelsFirst"?(a=2,i=3,c=4):(a=1,i=2,c=3);const u=o[a],d=o[i],l=o[c],f=this.kernelSize[0],m=this.kernelSize[1],x=this.kernelSize[2],v=this.strides[0],b=this.strides[1],w=this.strides[2],A=qs(u,v,f,this.padding),C=qs(d,b,m,this.padding),I=qs(l,w,x,this.padding),N=[r,A,C,I,this.filters];this.dataFormat!=="channelsLast"&&(s=ue(s,[0,2,3,4,1]));let E=D2(s,this.kernel.read(),N,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(E=ue(E,[0,4,1,2,3])),this.bias!==null&&(E=Vs(E,this.bias.read(),this.dataFormat)),this.activation!==null&&(E=this.activation.apply(E)),E})}computeOutputShape(t){t=we(t);const e=t.slice();let s,o,r,i;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3,i=4):(s=4,o=1,r=2,i=3);const c=this.kernelSize[0],a=this.kernelSize[1],u=this.kernelSize[2],d=this.strides[0],l=this.strides[1],f=this.strides[2];return e[s]=this.filters,e[o]=qs(e[o],d,c,this.padding),e[r]=qs(e[r],l,a,this.padding),e[i]=qs(e[i],f,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}z0.className="Conv3DTranspose";yt(z0);class W0 extends Ci{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ve(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Le(e.depthwiseRegularizer),this.depthwiseConstraint=on(e.depthwiseConstraint),this.pointwiseInitializer=Ve(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Le(e.pointwiseRegularizer),this.pointwiseConstraint=on(e.pointwiseConstraint)}build(t){if(t=we(t),t.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],o=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let c=0;c<this.rank;++c)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new nn({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{t=se(t);let s;if(this.rank===1)throw new ee("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=ue(t,[0,2,3,1])),s=Qy(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Vs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=ue(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Pe(this.depthwiseInitializer),t.pointwiseInitializer=Pe(this.pointwiseInitializer),t.depthwiseRegularizer=Ae(this.depthwiseRegularizer),t.pointwiseRegularizer=Ae(this.pointwiseRegularizer),t.depthwiseConstraint=sn(this.depthwiseConstraint),t.pointwiseConstraint=sn(this.pointwiseConstraint),t}}W0.className="SeparableConv";class U0 extends W0{constructor(t){super(2,t)}}U0.className="SeparableConv2D";yt(U0);class Wu extends Ci{constructor(t){super(1,t),Wu.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Of(t.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Wu.className="Conv1D";yt(Wu);class G0 extends de{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return at(()=>{if(t=se(t),this.dataFormat==="channelsLast"){const s=Dc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Dc(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Dc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Dc(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}G0.className="Cropping2D";yt(G0);class q0 extends de{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ke(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,nE(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return at(()=>{let s=se(t);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=ue(s,[0,2,3,1]);const r=this.size[0]*o[2],i=this.size[1]*o[3],c=this.interpolation==="nearest"?Tc.resizeNearestNeighbor(s,[r,i]):Tc.resizeBilinear(s,[r,i]);return ue(c,[0,3,1,2])}else{const r=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?Tc.resizeNearestNeighbor(s,[r,i]):Tc.resizeBilinear(s,[r,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}q0.className="UpSampling2D";yt(q0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $R(n,t,e=[1,1],s="valid",o,r){return at(()=>{o==null&&(o=Bs()),Ke(o);let i=em(n,o);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Up(i,t,e,s==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(i=ue(i,[0,3,1,2])),i})}class H0 extends zu{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ve(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=on(t.depthwiseConstraint),this.depthwiseRegularizer=Le(t.depthwiseRegularizer)}build(t){if(t=we(t),t.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{t=se(t);let s=$R(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Vs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=we(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Rs(e,this.kernelSize[0],this.padding,this.strides[0]),i=Rs(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,r,i]:[t[0],r,i,o]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Pe(this.depthwiseInitializer),t.depthwiseRegularizer=Ae(this.depthwiseRegularizer),t.depthwiseConstraint=sn(this.depthwiseRegularizer),t}}H0.className="DepthwiseConv2D";yt(H0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j0(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return t=o(t),e=o(e),{inputs:n,initialState:t,constants:e}}function K0(n,t,e,s=!1,o,r,i=!1,c=!1){return at(()=>{const a=t.shape.length;if(a<3)throw new X(`Input should be at least 3D, but is ${a}D.`);const u=[1,0].concat(Ds(2,a));if(t=ue(t,u),r!=null)throw new ee("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=Tt(Tt(o,"bool"),"float32"),o.rank===a-1&&(o=cs(o,-1)),o=ue(o,u)),s&&(t=yr(t,0),o!=null&&(o=yr(o,0)));const d=[];let l,f=e;const m=t.shape[0],x=ai(t);let v;o!=null&&(v=ai(o));for(let w=0;w<m;++w){const A=x[w],C=at(()=>n(A,f));if(o==null)l=C[0],f=C[1];else{const I=at(()=>{const N=v[w],E=Vt(ys(N),N),B=bt(K(C[0],N),K(f[0],E)),M=f.map((U,G)=>bt(K(C[1][G],N),K(U,E)));return{output:B,newStates:M}});l=I.output,f=I.newStates}c&&d.push(l)}let b;return c&&(b=vr(d,1)),[l,b,f]})}class Ho extends de{constructor(t){super(t);let e;if(t.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new om({cells:t.cell}):e=t.cell,e.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new nn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ds(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){fd(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let o;if(this.returnSequences?o=[t[0],t[1],s]:o=[t[0],s],this.returnState){const r=[];for(const i of e)r.push([t[0],i]);return[o].concat(r)}else return o}computeMask(t,e){return at(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const o=this.states.map(r=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new ee("Constants support is not implemented in RNN yet.");fd(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new nn({shape:[e,null,...s]});const o=[t[0]].concat(t.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!ve(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new nn({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new Us("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Ge([s,o])):this.states_=[Ge([s,this.cell.stateSize])];else if(t==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Ge([s,o])):this.states_[0]=Ge([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let o=0;o<this.states_.length;++o){const r=t[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,c=[s,i];if(!ve(r.shape,c))throw new X(`State ${o} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>Qs(o.clone()))})}apply(t,e){let s=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});const r=j0(t,s,o,this.numConstants);t=r.inputs,s=r.initialState,o=r.constants;let i=[],c=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new nn({shape:u.shape}));c=c.concat(this.stateSpec)}if(o!=null&&(e.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof js){const u=[t].concat(i),d=this.inputSpec.concat(c),l=this.inputSpec;this.inputSpec=d;const f=super.apply(u,e);return this.inputSpec=l,f}else return super.apply(t,e)}call(t,e){return at(()=>{const s=e==null?null:e.mask,o=e==null?null:e.training;let r=e==null?null:e.initialState;t=se(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new X(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:o},u=K0((x,v)=>{const b=this.cell.call([x].concat(v),c);return[b[0],b.slice(1)]},t,r,this.goBackwards,s,null,this.unroll,this.returnSequences),d=u[0],l=u[1],f=u[2];this.stateful&&this.resetStates(f,o);const m=this.returnSequences?l:d;return this.returnState?[m].concat(f):m})}getInitialState(t){return at(()=>{let e=Ge(t.shape);return e=Mt(e,[1,2]),e=lc(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?dd(e,[1,s]):e):this.cell.stateSize>1?[dd(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ho.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,t,e)}static fromConfig(t,e,s={}){const o=e.cell,r=fo(o,s);return new t(Object.assign(e,{cell:r}))}}Ho.className="RNN";yt(Ho);class Uu extends de{}class nm extends Uu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,hn(this.units,"units"),this.activation=Mo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ve(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ve(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ve(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Le(t.kernelRegularizer),this.recurrentRegularizer=Le(t.recurrentRegularizer),this.biasRegularizer=Le(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=ci([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ci([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=we(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const o=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>ys(t),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>ys(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,c=this.recurrentDropoutMask;i!=null?r=Js(K(t,i),this.kernel.read()):r=Js(t,this.kernel.read()),this.bias!=null&&(r=Vs(r,this.bias.read())),c!=null&&(s=K(s,c));let a=bt(r,Js(s,this.recurrentKernel.read()));return this.activation!=null&&(a=this.activation.apply(a)),[a,a]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fo(this.activation),useBias:this.useBias,kernelInitializer:Pe(this.kernelInitializer),recurrentInitializer:Pe(this.recurrentInitializer),biasInitializer:Pe(this.biasInitializer),kernelRegularizer:Ae(this.kernelRegularizer),recurrentRegularizer:Ae(this.recurrentRegularizer),biasRegularizer:Ae(this.biasRegularizer),activityRegularizer:Ae(this.activityRegularizer),kernelConstraint:sn(this.kernelConstraint),recurrentConstraint:sn(this.recurrentConstraint),biasConstraint:sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}nm.className="SimpleRNNCell";yt(nm);class X0 extends Ho{constructor(t){t.cell=new nm(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:r})})}static fromConfig(t,e){return new t(e)}}X0.className="SimpleRNN";yt(X0);class sm extends Uu{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=t.units,hn(this.units,"units"),this.activation=Mo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Mo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ve(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ve(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ve(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Le(t.kernelRegularizer),this.recurrentRegularizer=Le(t.recurrentRegularizer),this.biasRegularizer=Le(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=ci([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ci([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=we(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>ys(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>ys(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let c,a,u;0<this.dropout&&this.dropout<1&&(t=K(t,r[0]));let d=Js(t,this.kernel.read());this.useBias&&(d=Vs(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=K(o,i[0]));const l=this.recurrentKernel.read(),[f,m]=ts(l,[2*this.units,this.units],l.rank-1),x=Js(o,f),[v,b,w]=ts(d,3,d.rank-1),[A,C]=ts(x,2,x.rank-1);c=this.recurrentActivation.apply(bt(v,A)),a=this.recurrentActivation.apply(bt(b,C));const I=Js(K(a,o),m);u=this.activation.apply(bt(w,I));const N=bt(K(c,o),K(bt(1,Oe(c)),u));return[N,N]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fo(this.activation),recurrentActivation:Fo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pe(this.kernelInitializer),recurrentInitializer:Pe(this.recurrentInitializer),biasInitializer:Pe(this.biasInitializer),kernelRegularizer:Ae(this.kernelRegularizer),recurrentRegularizer:Ae(this.recurrentRegularizer),biasRegularizer:Ae(this.biasRegularizer),activityRegularizer:Ae(this.activityRegularizer),kernelConstraint:sn(this.kernelConstraint),recurrentConstraint:sn(this.recurrentConstraint),biasConstraint:sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}sm.className="GRUCell";yt(sm);class Y0 extends Ho{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new sm(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Y0.className="GRU";yt(Y0);class Gu extends Uu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,hn(this.units,"units"),this.activation=Mo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Mo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ve(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ve(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ve(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Le(t.kernelRegularizer),this.recurrentRegularizer=Le(t.recurrentRegularizer),this.biasRegularizer=Le(t.biasRegularizer),this.kernelConstraint=on(t.kernelConstraint),this.recurrentConstraint=on(t.recurrentConstraint),this.biasConstraint=on(t.biasConstraint),this.dropout=ci([1,Bo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ci([1,Bo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=we(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;o=new(e=class extends ws{apply(a,u){const d=r.apply([i]),l=new Wf().apply([i]),f=r.apply([i*2]);return yg(yg(d,l),f)}},e.className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return at(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>ys(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>ys(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=this.recurrentDropoutMask;let a,u,d,l;0<this.dropout&&this.dropout<1&&(t=K(t,i[0]));let f=Js(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=K(o,c[0])),f=bt(f,Js(o,this.recurrentKernel.read())),this.useBias&&(f=Vs(f,this.bias.read()));const[m,x,v,b]=ts(f,4,f.rank-1);a=this.recurrentActivation.apply(m),u=this.recurrentActivation.apply(x),d=bt(K(u,r),K(a,this.activation.apply(v))),l=this.recurrentActivation.apply(b);const w=K(l,this.activation.apply(d));return[w,w,d]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Fo(this.activation),recurrentActivation:Fo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pe(this.kernelInitializer),recurrentInitializer:Pe(this.recurrentInitializer),biasInitializer:Pe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ae(this.kernelRegularizer),recurrentRegularizer:Ae(this.recurrentRegularizer),biasRegularizer:Ae(this.biasRegularizer),activityRegularizer:Ae(this.activityRegularizer),kernelConstraint:sn(this.kernelConstraint),recurrentConstraint:sn(this.recurrentConstraint),biasConstraint:sn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Gu.className="LSTMCell";yt(Gu);class J0 extends Ho{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Gu(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,o=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}J0.className="LSTM";yt(J0);class om extends Uu{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return at(()=>{t=t;let s=t.slice(1);const o=[];for(const c of this.cells.slice().reverse())Array.isArray(c.stateSize)?o.push(s.splice(0,c.stateSize.length)):o.push(s.splice(0,1));o.reverse();const r=[];let i;for(let c=0;c<this.cells.length;++c){const a=this.cells[c];s=o[c],c===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=a.call(i,e),r.push(i.slice(1))}s=[];for(const c of r.slice().reverse())s.push(...c);return[i[0]].concat(s)})}build(t){fd(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,o)=>{lr(`RNNCell_${o}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(e)};return Object.assign({},t,o)}static fromConfig(t,e,s={}){const o=[];for(const r of e.cells)o.push(fo(r,s));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return md(t)}setWeights(t){const e=[];for(const s of this.cells){const o=s.weights.length,r=t.splice(o);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],r[i]])}Xf(e)}}om.className="StackedRNNCells";yt(om);function Vo(n){const{ones:t,rate:e,training:s=!1,count:o=1,dropoutFunc:r}=n,i=()=>r!=null?r(t(),e):Gv(t(),e),c=()=>hc(i,t,s);return!o||o<=1?Qs(c().clone()):Array(o).fill(void 0).map(c).map(u=>Qs(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var SR=globalThis&&globalThis.__rest||function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(e[s[o]]=n[s[o]]);return e};class Z0 extends Ho{constructor(t){if(t.unroll)throw new ee("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new ee("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new nn({ndim:5})]}call(t,e){return at(()=>{if(this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new X("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,o=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:o,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return at(()=>{const{stateSize:e}=this.cell,s=t.shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)],i=Ge(r);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new Us("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ge(r)):this.states_=[Ge(r)];else if(t==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ge(r)):this.states_[0]=Ge(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let c=0;c<this.states_.length;++c){const a=t[c],u=r;if(!ve(a.shape,u))throw new X(`State ${c} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${a.shape}`);this.states_[c]=a}}this.states_=this.states_.map(c=>Qs(c.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:o,padding:r,strides:i,dilationRate:c}=this.cell,a=e==="channelsFirst",u=t[a?3:2],d=t[a?4:3],l=Rs(u,o[0],r,i[0],c[0]),f=Rs(d,o[1],r,i[1],c[1]);return[...t.slice(0,2),...a?[s,l,f]:[l,f,s]]}}Z0.className="ConvRNN2D";class rm extends Gu{constructor(t){const{filters:e,kernelSize:s,strides:o,padding:r,dataFormat:i,dilationRate:c}=t;super(Object.assign({},t,{units:e})),this.filters=e,hn(this.filters,"filters"),this.kernelSize=Qr(s,2,"kernelSize"),this.kernelSize.forEach(a=>hn(a,"kernelSize")),this.strides=Qr(o||1,2,"strides"),this.strides.forEach(a=>hn(a,"strides")),this.padding=r||"valid",ns(this.padding),this.dataFormat=i||"channelsLast",Ke(this.dataFormat),this.dilationRate=Qr(c||1,2,"dilationRate"),this.dilationRate.forEach(a=>hn(a,"dilationRate"))}build(t){var e;t=we(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[s]}`);const o=t[s],r=4,i=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let a;if(this.unitForgetBias){const u=this.biasInitializer,d=this.filters;a=new(e=class extends ws{apply(f,m){const x=u.apply([d]),v=Go([d]),b=u.apply([d*2]);return zf([x,v,b])}},e.className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,a,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return at(()=>{if(t.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,o=t[0],r=t[1],i=t[2],c=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Vo({ones:()=>ys(o),rate:this.dropout,training:s,count:c,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,u=(ut,gt,vt)=>!gt||!gt[vt]?ut:K(gt[vt],ut);let d=u(o,a,0),l=u(o,a,1),f=u(o,a,2),m=u(o,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Vo({ones:()=>ys(r),rate:this.recurrentDropout,training:s,count:c,dropoutFunc:this.dropoutFunc}));const x=this.recurrentDropoutMask;let v=u(r,x,0),b=u(r,x,1),w=u(r,x,2),A=u(r,x,3);const C=3,[I,N,E,B]=ts(this.kernel.read(),c,C),[M,U,G,q]=this.useBias?ts(this.bias.read(),c):[null,null,null,null];d=this.inputConv(d,I,M,this.padding),l=this.inputConv(l,N,U,this.padding),f=this.inputConv(f,E,G,this.padding),m=this.inputConv(m,B,q,this.padding);const[tt,et,Q,it]=ts(this.recurrentKernel.read(),c,C);v=this.recurrentConv(v,tt),b=this.recurrentConv(b,et),w=this.recurrentConv(w,Q),A=this.recurrentConv(A,it);const nt=this.recurrentActivation.apply(bt(d,v)),Z=this.recurrentActivation.apply(bt(l,b)),lt=bt(K(Z,i),K(nt,this.activation.apply(bt(f,w)))),ct=K(this.recurrentActivation.apply(bt(m,A)),this.activation.apply(lt));return[ct,ct,lt]})}getConfig(){const t=super.getConfig(),e=SR(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},e,s)}inputConv(t,e,s,o){const r=gr(t,e,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Vs(r,s,this.dataFormat):r}recurrentConv(t,e){return gr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}rm.className="ConvLSTM2DCell";yt(rm);class Q0 extends Z0{constructor(t){const e=new rm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Q0.className="ConvLSTM2D";yt(Q0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class im extends de{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?e[o]:this.noiseShape[o]);return s}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t);if(0<this.rate&&this.rate<1){const o=e.training==null?!1:e.training,r=this.getNoiseShape(s);return hc(()=>Gv(s,this.rate,r,this.seed),()=>s,o)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}im.className="Dropout";yt(im);class t_ extends im{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}t_.className="SpatialDropout1D";yt(t_);class am extends de{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,hn(this.units,"units"),this.activation=Mo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ve(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ve(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=on(t.kernelConstraint),this.biasConstraint=on(t.biasConstraint),this.kernelRegularizer=Le(t.kernelRegularizer),this.biasRegularizer=Le(t.biasRegularizer),this.activityRegularizer=Le(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=we(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=we(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t),o=Vv(this.activation.getClassName());let r;return o!=null?r=Js(s,this.kernel.read(),o,this.bias?this.bias.read():null):(r=Js(s,this.kernel.read()),this.bias!=null&&(r=Vs(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Fo(this.activation),useBias:this.useBias,kernelInitializer:Pe(this.kernelInitializer),biasInitializer:Pe(this.biasInitializer),kernelRegularizer:Ae(this.kernelRegularizer),biasRegularizer:Ae(this.biasRegularizer),activityRegularizer:Ae(this.activityRegularizer),kernelConstraint:sn(this.kernelConstraint),biasConstraint:sn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}am.className="Dense";yt(am);class e_ extends de{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=we(t);for(const e of t.slice(1))if(e==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Ro(t,1)]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let s=se(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let r=2;r<s.rank;++r)o.push(r);o.push(1),s=ue(s,o)}return cE(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}e_.className="Flatten";yt(e_);class n_ extends de{constructor(t){super(t),this.supportsMasking=!0,this.activation=Mo(t.activation)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t);return this.activation.apply(s)})}getConfig(){const t={activation:Fo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}n_.className="Activation";yt(n_);class s_ extends de{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return at(()=>(t=se(t),iE(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}s_.className="RepeatVector";yt(s_);class o_ extends de{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",o=e.slice();let r=1,i=null;for(let a=0;a<o.length;++a){const u=o[a];if(this.isUnknown(u))if(i===null)i=a;else throw new X("Can only specifiy one unknown dimension.");else r*=u}const c=Ro(t);if(i!==null){if(r===0||c%r!==0)throw new X(s);o[i]=c/r}else if(c!==r)throw new X(s);return o}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t),o=s.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return st(s,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}o_.className="Reshape";yt(o_);class r_ extends de{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Ds(1,t.dims.length+1);if(!ve(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new nn({ndim:this.dims.length+1})]}computeOutputShape(t){t=we(t);const e=t.slice();return this.dims.forEach((s,o)=>{e[o+1]=t[s]}),e}call(t,e){return ue(se(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}r_.className="Permute";yt(r_);class i_ extends de{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=se(t),o=-1;return rd(Xi(s,this.maskValue),o)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t),o=-1,r=!0,i=rd(Xi(s,this.maskValue),o,r);return K(s,Tt(i,s.dtype))})}}i_.className="Masking";yt(i_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class a_ extends de{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Ee(t.inputLength))}this.inputDim=t.inputDim,hn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,hn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ve(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Le(t.embeddingsRegularizer),this.activityRegularizer=Le(t.activityRegularizer),this.embeddingsConstraint=on(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return at(()=>this.maskZero?(t=se(t),Xi(t,he(t))):null)}computeOutputShape(t){if(t=we(t),this.inputLength==null)return[...t,this.outputDim];const e=Ee(this.inputLength);if(e.length!==t.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let o=0;o<e.length;++o){const r=e[o],i=t[o+1];if(r!=null&&i!=null&&r!==i)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let s=se(t);s.dtype!=="int32"&&(s=Mu(s,"int32"));const o=Uv(this.embeddings.read(),st(s,[s.size]));return st(o,we(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pe(this.embeddingsInitializer),embeddingsRegularizer:Ae(this.embeddingsRegularizer),activityRegularizer:Ae(this.activityRegularizer),embeddingsConstraint:sn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}a_.className="Embedding";yt(a_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sr extends de{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new ee}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let o=0;o<e.length;++o){const r=t[t.length-e.length+o],i=e[o];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(r)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[we(t)]),t=t,t.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=Eo(e),e.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const o=t.map(r=>r.length);t.indexOf(null)===-1&&Eo(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return at(()=>{if(t=t,this.reshapeRequired){const s=[],o=t.map(r=>r.rank);if(o.indexOf(null)===-1){const r=Bo(o);for(let i of t){const c=i.rank;for(let a=0;a<r-c;++a)i=lc(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const a of t){const u=a.rank;if(u==null){const d=a.shape,l=d[0],f=d.slice(1).concat([l]);let m=st(a,[l].concat(Ro(d.slice(1))));m=ue(m,[1,0]),m=st(m,f),s.push(m),r=!0}else if(u>1){const d=Ds(1,u).concat([0]);s.push(ue(a,d)),r=!0}else s.push(a)}let i=this.mergeFunction(s);const c=i.rank;if(r){if(c==null){const a=i.shape,u=a.length,d=a[u-1],l=[d].concat(a.slice(0,a.length-1));i=st(ue(st(i,[-1,d]),[1,0]),l)}else if(c>1){const a=[c-1].concat(Ds(0,c-1));i=ue(i,a)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let o=1;o<t.length;++o){const r=t[o]==null?null:t[o].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let s=[];for(const o of t)o!=null&&o[0]!==null&&s.push(o[0]);return s=Eo(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return at(()=>{if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an Array");if(!Array.isArray(t))throw new X("`inputs` should be an Array");if(e.length!==t.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(o=>o==null))return null;e=e.map(o=>o==null?o:cs(o,0));let s=e[0];for(let o=1;o<e.length-1;++o)s=mo(s,e[o]);return s})}}class c_ extends Sr{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=bt(e,t[s]);return e})}}c_.className="Add";yt(c_);class l_ extends Sr{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=K(e,t[s]);return e})}}l_.className="Multiply";yt(l_);class u_ extends Sr{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=bt(e,t[s]);return K(1/t.length,e)})}}u_.className="Average";yt(u_);class h_ extends Sr{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Uo(e,t[s]);return e})}}h_.className="Maximum";yt(h_);class d_ extends Sr{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Nu(e,t[s]);return e})}}d_.className="Minimum";yt(d_);class p_ extends Sr{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const o of t)if(o!=null){e=!1;break}if(e)return;const s=[];for(let o=0;o<t.length;++o){const r=t[o].slice();r.splice(this.axis,1);let i=!1;for(const c of s)if(ve(c,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return at(()=>zf(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const r of e.slice(1)){if(s[o]==null||r[o]==null){s[o]=null;break}s[o]+=r[o]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new X("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new X(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return at(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const o=[];for(let i=0;i<t.length;++i)e[i]==null?o.push(Tt(ys(t[i]),"bool")):e[i].rank<t[i].rank?o.push(cs(e[i],-1)):o.push(e[i]);const r=wn(o,this.axis);return $y(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}p_.className="Concatenate";yt(p_);function Mi(n,t){for(;n<0;)n+=t;return n}function NR(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new ee("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),P(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new ee("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=t.shape.length;e==null&&(e=[s-1,o-2]);const r=e;return at(()=>{let i;if(s>o){i=s-o;const a=[];for(let u=0;u<i;++u)a.push(1);t=st(t,t.shape.concat(a))}else if(o>s){i=o-s;const a=[];for(let u=0;u<i;++u)a.push(1);n=st(n,n.shape.concat(a))}else i=0;let c;if(n.shape.length===2&&t.shape.length===2)r[0]===r[1]?c=Mt(K(n,t),r[0]):c=Mt(K(ue(n,[1,0]),t),r[1]);else{const a=r[0]!==n.shape.length-1,u=r[1]===t.shape.length-1;c=ye(n,t,a,u)}if(i>0){let a;s>o?a=s+o-3:a=s-1;const u=[];for(let d=a;d<a+i;++d)u.push(d);c=sc(c,u)}return c.shape.length===1&&(c=cs(c,1)),c})}class f_ extends Sr{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new ee("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(e,s);if(e[o[0]]!==s[o[1]])throw new X(`Dimension incompatibility: ${e[o[0]]} !== ${s[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,i)=>Mi(r,t[i].shape.length)):o=[Mi(this.axes,e.shape.length),Mi(this.axes,s.shape.length)],this.normalize&&(e=il(e,o[0]),s=il(s,o[1])),NR(e,s,o)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[Mi(this.axes,t.length),Mi(this.axes,e.length)],s}computeOutputShape(t){P(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new ee("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(e,s);e.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const r=e.concat(s);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}f_.className="Dot";yt(f_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class m_ extends de{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t);return hc(()=>bt(Vu(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}m_.className="GaussianNoise";yt(m_);class g_ extends de{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=se(t);return this.rate>0&&this.rate<1?hc(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return K(s,Vu(s.shape,1,r))},()=>s,e.training||!1):s})}}g_.className="GaussianDropout";yt(g_);class x_ extends de{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||se(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return hc(()=>{const r=se(t),i=1.6732632423543772,c=1.0507009873554805,a=-i*c;let u=_i(Tu(s),this.rate);u=Mu(u,"float32");const d=((1-this.rate)*(1+this.rate*a**2))**-.5,l=-d*a*this.rate,f=bt(K(r,u),K(bt(u,-1),a));return bt(K(f,d),l)},()=>se(t),e.training||!1)}return t})}}x_.className="AlphaDropout";yt(x_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zi(n,t,e,s,o,r=.001){let i;if(n.rank===2)i=i2(n,t,e,s,o,r);else if(n.rank===3)i=c2(n,t,e,s,o,r);else if(n.rank===4)i=u2(n,t,e,s,o,r);else throw new ee(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function TR(n,t,e,s,o=.001){return at(()=>{const r=Yp(n,s),i=r.mean,c=r.variance;return[Zi(n,i,c,e,t,o),i,c]})}function ER(n,t,e,s,o=.001){return at(()=>{const r=Yp(n,s),i=r.mean,c=r.variance,a=[];for(const x of Ds(0,n.rank))s.indexOf(x)!==-1?a.push(1):a.push(n.shape[x]);const u=st(i,a),d=st(c,a),l=t==null?null:st(t,a),f=e==null?null:st(e,a);return[Zi(n,u,d,f,l,o),i,c]})}function RR(n,t,e,s,o=.001){return ve(s.slice().sort(),Ds(0,n.rank-1))?TR(n,t,e,s,o):ER(n,t,e,s,o)}class y_ extends de{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ve(t.betaInitializer||"zeros"),this.gammaInitializer=Ve(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ve(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ve(t.movingVarianceInitializer||"ones"),this.betaConstraint=on(t.betaConstraint),this.gammaConstraint=on(t.gammaConstraint),this.betaRegularizer=Le(t.betaRegularizer),this.gammaRegularizer=Le(t.gammaRegularizer)}build(t){t=we(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new X(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new nn({ndim:t.length,axes:{[e]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return at(()=>{const s=e.training==null?!1:e.training,o=se(t),r=o.shape,i=r.length,c=Ds(0,i),a=this.axis>=0?this.axis:this.axis+i;c.splice(a,1);const u=br(1,i);u[a]=r[a];const d=c.slice();d.sort();const l=!ve(d,Ds(0,i).slice(0,i-1)),f=()=>{if(l){const A=st(this.movingMean.read(),u),C=st(this.movingVariance.read(),u),I=this.center?st(this.beta.read(),u):null,N=this.scale?st(this.gamma.read(),u):null;return Zi(o,A,C,I,N,this.epsilon)}else return Zi(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return f();const[m,x,v]=RR(o,this.gamma.read(),this.beta.read(),c,this.epsilon),b=(A,C,I)=>{at(()=>{const N=1-I,E=A.read(),B=K(Vt(E,C),N);A.write(Vt(E,B))})};return(()=>{b(this.movingMean,x,this.momentum),b(this.movingVariance,v,this.momentum)})(),m})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pe(this.betaInitializer),gammaInitializer:Pe(this.gammaInitializer),movingMeanInitializer:Pe(this.movingMeanInitializer),movingVarianceInitializer:Pe(this.movingVarianceInitializer),betaRegularizer:Ae(this.betaRegularizer),gammaRegularizer:Ae(this.gammaRegularizer),betaConstraint:sn(this.betaConstraint),gammaConstraint:sn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}y_.className="BatchNormalization";yt(y_);class v_ extends de{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ve(t.betaInitializer||"zeros"),this.gammaInitializer=Ve(t.gammaInitializer||"ones"),this.betaRegularizer=Le(t.betaRegularizer),this.gammaRegularizer=Le(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=we(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Eo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>t[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,e){const s=se(t),o=s.shape,r=o.length;return at(()=>{let{mean:c,variance:a}=Yp(s,this.axis,!0);const u=br(1,r);for(const v of this.axis)u[v]=o[v];const d=v=>v!=null&&v.shape.length!==r?st(v,u):v;let l=this.scale?d(this.gamma.read()):null,f=this.center?d(this.beta.read()):null;const m=[],x=[];for(let v=0;v<r;++v)this.axis.indexOf(v)!==-1?(m.push(o[v]),x.push(1)):(m.push(1),x.push(o[v]));return c=Ts(c,m),a=Ts(a,m),l!=null&&(l=Ts(l,x)),f!=null&&(f=Ts(f,x)),Zi(s,c,a,f,l,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pe(this.betaInitializer),gammaInitializer:Pe(this.gammaInitializer),betaRegularizer:Ae(this.betaRegularizer),gammaRegularizer:Ae(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}v_.className="LayerNormalization";yt(v_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DR(n,t,e){return at(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Bs()),e!=="channelsLast"&&e!=="channelsFirst")throw new X(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Jp(n,s)})}class __ extends de{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Bs():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new nn({ndim:4})]}computeOutputShape(t){t=we(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return at(()=>DR(se(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}__.className="ZeroPadding2D";yt(__);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qu(n,t,e,s,o,r){return at(()=>{Ke(o),Pv(r),ns(s),e==null&&(e=[1,1]),s==null&&(s="valid"),o==null&&(o=Bs()),r==null&&(r="max"),n=em(n,o);let i;const c=s==="same"?"same":"valid";return r==="max"?i=Xp(n,t,e,c):i=Lp(n,t,e,c),o==="channelsFirst"&&(i=ue(i,[0,3,1,2])),i})}function b_(n,t,e,s,o,r){return at(()=>{Ke(o),Pv(r),ns(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),o==null&&(o=Bs()),r==null&&(r="max"),n=P0(n,o);let i;const c=s==="same"?"same":"valid";return r==="max"?i=qA(n,t,e,c):i=JI(n,t,e,c),o==="channelsFirst"&&(i=ue(i,[0,4,1,2,3])),i})}class w_ extends de{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(hn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);hn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,ns(this.padding),this.inputSpec=[new nn({ndim:3})]}computeOutputShape(t){t=we(t);const e=Rs(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return at(()=>{this.invokeCallHook(t,e),t=lc(se(t),2);const s=this.poolingFunction(se(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return sc(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class C_ extends w_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),qu(t,e,s,o,r,"max")}}C_.className="MaxPooling1D";yt(C_);class I_ extends w_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),qu(t,e,s,o,r,"avg")}}I_.className="AveragePooling1D";yt(I_);class A_ extends de{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];hn(this.poolSize,"poolSize"),hn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ke(this.dataFormat),ns(this.padding),this.inputSpec=[new nn({ndim:4})]}computeOutputShape(t){t=we(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Rs(e,this.poolSize[0],this.padding,this.strides[0]),s=Rs(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(se(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class k_ extends A_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),qu(t,e,s,o,r,"max")}}k_.className="MaxPooling2D";yt(k_);class $_ extends A_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),qu(t,e,s,o,r,"avg")}}$_.className="AveragePooling2D";yt($_);class S_ extends de{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];hn(this.poolSize,"poolSize"),hn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ke(this.dataFormat),ns(this.padding),this.inputSpec=[new nn({ndim:5})]}computeOutputShape(t){t=we(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Rs(e,this.poolSize[0],this.padding,this.strides[0]),s=Rs(s,this.poolSize[1],this.padding,this.strides[1]),o=Rs(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,o]:[t[0],e,s,o,t[4]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(se(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class N_ extends S_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),b_(t,e,s,o,r,"max")}}N_.className="MaxPooling3D";yt(N_);class T_ extends S_{constructor(t){super(t)}poolingFunction(t,e,s,o,r){return Ke(r),ns(o),b_(t,e,s,o,r,"avg")}}T_.className="AveragePooling3D";yt(T_);class E_ extends de{constructor(t){super(t),this.inputSpec=[new nn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new ee}}class R_ extends E_{constructor(t){super(t||{})}call(t,e){return at(()=>{const s=se(t);return Ue(s,1)})}}R_.className="GlobalAveragePooling1D";yt(R_);class D_ extends E_{constructor(t){super(t||{})}call(t,e){return at(()=>{const s=se(t);return Xs(s,1)})}}D_.className="GlobalMaxPooling1D";yt(D_);class B_ extends de{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ke(this.dataFormat),this.inputSpec=[new nn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new ee}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class F_ extends B_{call(t,e){return at(()=>{const s=se(t);return this.dataFormat==="channelsLast"?Ue(s,[1,2]):Ue(s,[2,3])})}}F_.className="GlobalAveragePooling2D";yt(F_);class M_ extends B_{call(t,e){return at(()=>{const s=se(t);return this.dataFormat==="channelsLast"?Xs(s,[1,2]):Xs(s,[2,3])})}}M_.className="GlobalMaxPooling2D";yt(M_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class V_ extends de{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const o=e.layer,r=fo(o,s);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class L_ extends V_{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=we(t),t.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=we(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),o=t[1];return[s[0],o].concat(s.slice(1))}call(t,e){return at(()=>(t=se(t),K0((i,c)=>[se(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}L_.className="TimeDistributed";yt(L_);function BR(n){$r(eE,"BidirectionalMergeMode",n)}const FR="concat";class P_ extends V_{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=fo(s),e.goBackwards=e.goBackwards!==!0;const o={};if(o.className=t.layer.getClassName(),o.config=e,this.backwardLayer=fo(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?FR:t.mergeMode,BR(this.mergeMode),t.weights)throw new ee("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,o,r;return this.returnState&&(r=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Dn(o)}apply(t,e){let s=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});const r=j0(t,s,o,this.numConstants);if(t=r.inputs,s=r.initialState,o=r.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&o==null)return super.apply(t,e);const i=[],c=[];if(s!=null){const u=s.length;if(u%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const d=s.map(l=>new nn({shape:l.shape}));this.forwardLayer.stateSpec=d.slice(0,u/2),this.backwardLayer.stateSpec=d.slice(u/2),c.push(...d)}if(o!=null)throw new ee("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof js;for(const u of i)if(u instanceof js!==a)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const u=[t].concat(i),d=this.inputSpec.concat(c),l=this.inputSpec;this.inputSpec=d;const f=super.apply(u,e);return this.inputSpec=l,f}else return super.apply(t,e)}call(t,e){return at(()=>{const s=e.initialState;let o,r;if(s==null)o=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const a=s.slice(0,s.length/2),u=s.slice(s.length/2);o=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:u}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=yr(r,1));let c;return this.mergeMode==="concat"?c=zf([o,r]):this.mergeMode==="sum"?c=bt(o,r):this.mergeMode==="ave"?c=K(.5,bt(o,r)):this.mergeMode==="mul"?c=K(o,r):this.mergeMode==null&&(c=[o,r]),this.returnState?this.mergeMode==null?c.concat(i):[c].concat(i):c})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){lr(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),lr(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=fo(e.layer);if(delete e.layer,e.numConstants!=null)throw new ee("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=e;return o.layer=s,new t(o)}}P_.className="Bidirectional";yt(P_);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mg(n){return new am(n)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR=dt();MR.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Vg;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Vg||(Vg={}));var Lg;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Lg||(Lg={}));/** @license See the LICENSE file. */var O_={exports:{}};(function(n){(function(t,e,s){function o(a){var u=this,d=c();u.next=function(){var l=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=l-(u.c=l|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(a),u.s0<0&&(u.s0+=1),u.s1-=d(a),u.s1<0&&(u.s1+=1),u.s2-=d(a),u.s2<0&&(u.s2+=1),d=null}function r(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function i(a,u){var d=new o(a),l=u&&u.state,f=d.next;return f.int32=function(){return d.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,l&&(typeof l=="object"&&r(l,d),f.state=function(){return r(d,{})}),f}function c(){var a=4022871197,u=function(d){d=d.toString();for(var l=0;l<d.length;l++){a+=d.charCodeAt(l);var f=.02519603282416938*a;a=f>>>0,f-=a,f*=a,a=f>>>0,f-=a,a+=f*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(dn,n,!1)})(O_);var z_={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var l=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^l^l>>>8},c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(dn,n,!1)})(z_);var W_={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(l^l<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,d==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(dn,n,!1)})(W_);var U_={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.x,l=a.i,f,m;return f=d[l],f^=f>>>7,m=f^f<<24,f=d[l+1&7],m^=f^f>>>10,f=d[l+3&7],m^=f^f>>>3,f=d[l+4&7],m^=f^f<<7,f=d[l+7&7],f=f^f<<13,m^=f^f<<9,d[l]=m,a.i=l+1&7,m};function u(d,l){var f,m=[];if(l===(l|0))m[0]=l;else for(l=""+l,f=0;f<l.length;++f)m[f&7]=m[f&7]<<15^l.charCodeAt(f)+m[f+1&7]<<13;for(;m.length<8;)m.push(0);for(f=0;f<8&&m[f]===0;++f);for(f==8?m[7]=-1:m[f],d.x=m,d.i=0,f=256;f>0;--f)d.next()}u(a,c)}function r(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.x&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(dn,n,!1)})(U_);var G_={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.w,l=a.X,f=a.i,m,x;return a.w=d=d+1640531527|0,x=l[f+34&127],m=l[f=f+1&127],x^=x<<13,m^=m<<17,x^=x>>>15,m^=m>>>12,x=l[f]=x^m,a.i=f,x+(d^d>>>16)|0};function u(d,l){var f,m,x,v,b,w=[],A=128;for(l===(l|0)?(m=l,l=null):(l=l+"\0",m=0,A=Math.max(A,l.length)),x=0,v=-32;v<A;++v)l&&(m^=l.charCodeAt((v+32)%l.length)),v===0&&(b=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,v>=0&&(b=b+1640531527|0,f=w[v&127]^=m+b,x=f==0?x+1:0);for(x>=128&&(w[(l&&l.length||0)&127]=-1),x=127,v=4*128;v>0;--v)m=w[x+34&127],f=w[x=x+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,w[x]=m^f;d.w=b,d.X=w,d.i=x}u(a,c)}function r(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.X&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(dn,n,!1)})(G_);var q_={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.b,f=a.c,m=a.d,x=a.a;return l=l<<25^l>>>7^f,f=f-m|0,m=m<<24^m>>>8^x,x=x-l|0,a.b=l=l<<20^l>>>12^f,a.c=f=f-m|0,a.d=m<<16^f>>>16^x,a.a=x-l|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):u+=c;for(var d=0;d<u.length+20;d++)a.b^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(dn,n,!1)})(q_);var H_={exports:{}};(function(n){(function(t,e){var s=(0,eval)("this"),o=256,r=6,i=52,c="random",a=e.pow(o,r),u=e.pow(2,i),d=u*2,l=o-1,f;function m(I,N,E){var B=[];N=N==!0?{entropy:!0}:N||{};var M=w(b(N.entropy?[I,C(t)]:I??A(),3),B),U=new x(B),G=function(){for(var q=U.g(r),tt=a,et=0;q<u;)q=(q+et)*o,tt*=o,et=U.g(1);for(;q>=d;)q/=2,tt/=2,et>>>=1;return(q+et)/tt};return G.int32=function(){return U.g(4)|0},G.quick=function(){return U.g(4)/4294967296},G.double=G,w(C(U.S),t),(N.pass||E||function(q,tt,et,Q){return Q&&(Q.S&&v(Q,U),q.state=function(){return v(U,{})}),et?(e[c]=q,tt):q})(G,M,"global"in N?N.global:this==e,N.state)}e["seed"+c]=m;function x(I){var N,E=I.length,B=this,M=0,U=B.i=B.j=0,G=B.S=[];for(E||(I=[E++]);M<o;)G[M]=M++;for(M=0;M<o;M++)G[M]=G[U=l&U+I[M%E]+(N=G[M])],G[U]=N;(B.g=function(q){for(var tt,et=0,Q=B.i,it=B.j,nt=B.S;q--;)tt=nt[Q=l&Q+1],et=et*o+nt[l&(nt[Q]=nt[it=l&it+tt])+(nt[it]=tt)];return B.i=Q,B.j=it,et})(o)}function v(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function b(I,N){var E=[],B=typeof I,M;if(N&&B=="object")for(M in I)try{E.push(b(I[M],N-1))}catch{}return E.length?E:B=="string"?I:I+"\0"}function w(I,N){for(var E=I+"",B,M=0;M<E.length;)N[l&M]=l&(B^=N[l&M]*19)+E.charCodeAt(M++);return C(N)}function A(){try{var I;return f&&(I=f.randomBytes)?I=I(o):(I=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(I)),C(I)}catch{var N=s.navigator,E=N&&N.plugins;return[+new Date,s,E,s.screen,C(t)]}}function C(I){return String.fromCharCode.apply(0,I)}if(w(e.random(),t),n.exports){n.exports=m;try{f=require("crypto")}catch{}}})([],Math)})(H_);var VR=O_.exports,LR=z_.exports,PR=W_.exports,OR=U_.exports,zR=G_.exports,WR=q_.exports,Ii=H_.exports;Ii.alea=VR;Ii.xor128=LR;Ii.xorwow=PR;Ii.xorshift7=OR;Ii.xor4096=zR;Ii.tychei=WR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Pg;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Pg||(Pg={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UR=cv;class Hu extends Dd{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new bx(this,Ao())}nextDataId(){return Hu.nextDataId++}write(t,e,s){this.firstUse&&(this.firstUse=!1,dt().get("IS_NODE")&&Jn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:t,dtype:s,refCount:1}),o}makeTensorInfo(t,e,s){let o;if(e==="string"&&s!=null&&s.length>0&&na(s[0])){const r=s.map(i=>To(i));o=this.write(r,t,e)}else o=this.write(s,t,e);return{dataId:o,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,o,r){this.data.set(t,{values:e,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const o=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return go(o,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(o=>Do(o));return re(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return re(t.shape,t.dtype,e)}makeOutput(t,e,s){return Ao().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Rn();return t(),{kernelMs:Rn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Bt([t],"where");const e=this.readSync(t.dataId);return UR(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Hu.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const GR=n=>{const{x:t}=n.inputs,e=n.backend;Bt(t,"abs");let s=new Float32Array(pt(t.shape));const o=e.data.get(t.dataId).values;return s=j_(o),e.makeOutput(s,t.shape,t.dtype)},qR={kernelName:vl,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qe(n){return(t,e,s,o,r)=>{const i=te(t,e),c=i.length,a=Ut(i),u=pt(i),d=gn(r,u),l=t.length,f=e.length,m=Ut(t),x=Ut(e),v=ri(t,i),b=ri(e,i);if(v.length+b.length===0)for(let w=0;w<d.length;++w)d[w]=n(s[w%s.length],o[w%o.length]);else for(let w=0;w<d.length;++w){const A=oa(w,c,a),C=A.slice(-l);v.forEach(B=>C[B]=0);const I=Ks(C,l,m),N=A.slice(-f);b.forEach(B=>N[B]=0);const E=Ks(N,f,x);d[w]=n(s[I],o[E])}return[d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n){const{inputs:t,backend:e}=n,{real:s,imag:o}=t,r=e.data.get(s.dataId).values,i=e.data.get(o.dataId).values,c=e.makeTensorInfo(s.shape,"complex64"),a=e.data.get(c.dataId);return a.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",r),imag:e.makeTensorInfo(o.shape,"float32",i)},c}const HR={kernelName:Wd,backendName:"cpu",kernelFunc:On};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(n,t,e="float32"){if(e==="complex64"){const o=hl(n,t,"float32"),r=hl(n,t,"float32");return On({inputs:{real:o,imag:r},backend:n})}const s=Cn(pt(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eo(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const jR={kernelName:Aa,backendName:"cpu",kernelFunc:eo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.data.get(s.dataId).complexTensorInfos.real,r=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,r)}const KR={kernelName:up,backendName:"cpu",kernelFunc:wr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return eo({inputs:{x:o},backend:e});const i=hl(e,o.shape,o.dtype),c=Lo({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),a=On({inputs:{real:c,imag:i},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),a}if(o.dtype==="complex64"){const i=wr({inputs:{input:o},backend:e}),c=Lo({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),c}if(!Ax(o.dtype,r)){const i=eo({inputs:{x:o},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(r==="int32"){const i=e.data.get(o.dataId).values,c=Int32Array.from(i);return e.makeTensorInfo(o.shape,"int32",c)}if(r==="bool"){const i=e.data.get(o.dataId).values,c=Ar([0],o.dtype),[a,u]=Qe((d,l)=>d!==l?1:0)(o.shape,[],i,c,"bool");return e.makeTensorInfo(u,"bool",a)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const XR={kernelName:da,backendName:"cpu",kernelFunc:Lo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(n,t,e,s){return e==null?({inputs:o,backend:r})=>{const{a:i,b:c}=o,a=r;Bt([i,c],n);const u=a.data.get(i.dataId).values,d=a.data.get(c.dataId).values,l=i.dtype==="string"?_r(u):u,f=i.dtype==="string"?_r(d):d,m=s||i.dtype,[x,v]=t(i.shape,c.shape,l,f,m);return a.makeTensorInfo(v,m,x)}:({inputs:o,backend:r})=>{const{a:i,b:c}=o,a=r;if(i.dtype==="complex64"||c.dtype==="complex64"){const u=Lo({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),d=a.data.get(u.dataId),l=d.complexTensorInfos.real,f=d.complexTensorInfos.imag,m=a.data.get(l.dataId).values,x=a.data.get(f.dataId).values,v=Lo({inputs:{x:c},backend:a,attrs:{dtype:"complex64"}}),b=a.data.get(v.dataId),w=b.complexTensorInfos.real,A=b.complexTensorInfos.imag,C=a.data.get(w.dataId).values,I=a.data.get(A.dataId).values,[N,E,B]=e(i.shape,c.shape,m,x,C,I),M=a.makeTensorInfo(B,"float32",N),U=a.makeTensorInfo(B,"float32",E),G=On({inputs:{real:M,imag:U},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(U),G}else{const u=a.data.get(i.dataId).values,d=a.data.get(c.dataId).values,l=s||i.dtype,[f,m]=t(i.shape,c.shape,u,d,l);return a.makeTensorInfo(m,l,f)}}}function cm(n){return(t,e,s,o,r,i)=>{const c=te(t,e),a=pt(c),u=c.length,d=Ut(c),l=gn("float32",a),f=gn("float32",a),m=ri(t,c),x=ri(e,c),v=go(s,o),b=go(r,i),w=t.length,A=Ut(t),C=e.length,I=Ut(e);if(m.length+x.length===0)for(let N=0;N<l.length;N++){const E=N%v.length,B=N%b.length,M=n(v[E*2],v[E*2+1],b[B*2],b[B*2+1]);l[N]=M.real,f[N]=M.imag}else for(let N=0;N<l.length;N++){const E=oa(N,u,d),B=E.slice(-w);m.forEach(tt=>B[tt]=0);const M=Ks(B,w,A),U=E.slice(-C);x.forEach(tt=>U[tt]=0);const G=Ks(U,C,I),q=n(v[M*2],v[M*2+1],b[G*2],b[G*2+1]);l[N]=q.real,f[N]=q.imag}return[l,f,c]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K_=Qe((n,t)=>n+t),YR=cm((n,t,e,s)=>({real:n+e,imag:t+s})),ui=fn(xi,K_,YR),JR={kernelName:xi,backendName:"cpu",kernelFunc:ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(n,t,e,s,o){const r=pt(s),i=Cn(o,e);for(let c=0;c<n.length;c++){const a=n[c];if(a<0)throw new Error("Input x must be non-negative!");a>=o||(r>0?i[a]+=t[c]:i[a]+=1)}return i}function X_(n,t,e,s=!1){const o=n.shape[0],r=n.shape[1],i=re([o,e],t.dtype);for(let c=0;c<o;c++)for(let a=0;a<r;a++){const u=n.get(c,a);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(s?i.set(1,c,u):t.size>0?i.set(i.get(c,u)+t.get(c,a),c,u):i.set(i.get(c,u)+1,c,u))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(n){return(t,e,s)=>{const o=gn(e,t.length);for(let r=0;r<t.length;++r)o[r]=n(t[r],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(n,t,e){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;if(Bt(i,n),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=r,a=c.data.get(i.dataId).values,u=pt(i.shape),d=e||i.dtype,l=Sn(d,u);for(let f=0;f<u;++f)l[f]=t(a[f],o);return c.makeTensorInfo(i.shape,d,l)}}function Ai(n,t,e){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;if(Bt(i,n),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=r,a=c.data.get(i.dataId).values,u=e||i.dtype,d=t(a,u,o);return c.makeTensorInfo(i.shape,u,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y_=jo(n=>Math.ceil(n)),ZR=Ai(pa,Y_),QR={kernelName:pa,backendName:"cpu",kernelFunc:ZR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n,t,e,s){const o=Sn(e,pt(t));if(s&&e!=="string"){let r=0;n.forEach(i=>{const c=pt(i.shape);o.set(i.vals,r),r+=c})}else{let r=0;n.forEach(i=>{const c=e==="string"?_r(i.vals):i.vals;let a=0;for(let u=0;u<i.shape[0];++u){const d=u*t[1]+r;for(let l=0;l<i.shape[1];++l)o[d+l]=c[a++]}r+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_=Qe((n,t)=>n===t?1:0),Q_=fn(Bl,Z_,null,"bool"),tD={kernelName:Bl,backendName:"cpu",kernelFunc:Q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tb=jo(n=>Math.exp(n)),eb=Ai(_a,tb,"float32"),eD={kernelName:_a,backendName:"cpu",kernelFunc:eb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nb=jo(n=>Math.expm1(n)),nD=Ai(ba,nb),sD={kernelName:ba,backendName:"cpu",kernelFunc:nD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb=jo(n=>Math.floor(n)),oD=Ai(wa,sb),rD={kernelName:wa,backendName:"cpu",kernelFunc:oD};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ob(n,t,e,s,o,r,i,c,a){const u=re([s,r],e);for(let d=0;d<s;d++){const l=[];let f=0;for(let m=0;m<o;m++){const x=n[d*o+m];f+=x*i[m],l.push(x)}if(f<0||f>=a/r)throw new Error(`Invalid indices: ${l} does not index into ${c}`);for(let m=0;m<r;m++)u.values[d*r+m]=t.get(...t.indexToLoc(f*r+m))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(n,t,e){const s=re(e,n.dtype);for(let o=0;o<s.size;++o){const i=s.indexToLoc(o).slice(),c=i[0],a=i[2],u=t.locToIndex([c,a]);i[2]=t.values[u];const d=n.locToIndex(i);0<=d&&d<n.values.length&&(s.values[o]=n.values[d])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ib=Qe((n,t)=>n>t?1:0),iD=fn(Ll,ib,null,"bool"),aD={kernelName:Ll,backendName:"cpu",kernelFunc:iD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ab=Qe((n,t)=>n>=t?1:0),cD=fn(Ia,ab,null,"bool"),lD={kernelName:Ia,backendName:"cpu",kernelFunc:cD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cb=Qe((n,t)=>n<t?1:0),uD=fn(Ol,cb,null,"bool"),hD={kernelName:Ol,backendName:"cpu",kernelFunc:uD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lb=Qe((n,t)=>n<=t?1:0),dD=fn(zl,lb,null,"bool"),pD={kernelName:zl,backendName:"cpu",kernelFunc:dD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ub(n,t,e){const s=(t-n)/(e-1),o=Cn(e,"float32");o[0]=n;for(let r=1;r<o.length;r++)o[r]=o[r-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hb=jo(n=>Math.log(n)),fD=Ai(Na,hb),mD={kernelName:Na,backendName:"cpu",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,t,e,s){const o=gn(s,pt(e));for(let r=0;r<o.length;++r){const i=r*t;let c=n[i];for(let a=0;a<t;++a){const u=n[i+a];(Number.isNaN(u)||u>c)&&(c=u)}o[r]=c}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pb=Qe((n,t)=>Math.max(n,t)),gD=fn(Ea,pb),xD={kernelName:Ea,backendName:"cpu",kernelFunc:gD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fb=Qe((n,t)=>Math.min(n,t)),yD=fn(Ra,fb),vD={kernelName:Ra,backendName:"cpu",kernelFunc:yD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const um=Qe((n,t)=>n*t),_D=cm((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),ju=fn(Ba,um,_D),bD={kernelName:Ba,backendName:"cpu",kernelFunc:ju};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mb(n,t,e){const s=Oo(-1,e);return um([],t,s,n,e)}function wD(n){const{inputs:t,backend:e}=n,{x:s}=t;Bt(s,"neg");const o=e.data.get(s.dataId).values,[r,i]=mb(o,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,r)}const CD={kernelName:Zl,backendName:"cpu",kernelFunc:wD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gb=Qe((n,t)=>n!==t?1:0),ID=fn(Ql,gb,null,"bool"),AD={kernelName:Ql,backendName:"cpu",kernelFunc:ID};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hm(n,t,e,s,o){const r=t.length,i=pt(t),c=Ut(t),a=Ut(o),u=gn(e,pt(o));for(let d=0;d<i;++d){const l=oa(d,r,c),f=new Array(l.length);for(let x=0;x<f.length;x++)f[x]=l[s[x]];const m=Ks(f,r,a);u[m]=n[d]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(n){const{inputs:t,attrs:e,backend:s}=n,{x:o}=t,{perm:r}=e;Bt(o,"transpose");const i=o.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=o.shape[r[l]];const a=s.data.get(o.dataId).values,u=hm(a,o.shape,o.dtype,r,c);return{dataId:s.write(u,c,o.dtype),shape:c,dtype:o.dtype}}const kD={kernelName:Yr,backendName:"cpu",kernelFunc:Fn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xb(n,t,e,s){const[o,r]=pn(n,s),i=Un(t,"int32"),c=Cn(pt(o),i),a=pt(r);for(let u=0;u<c.length;++u){const d=u*a;let l=1;for(let f=0;f<a;++f)l*=e[d+f];c[u]=l}return{outVals:c,outShape:o,outDtype:i}}function $D(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;Bt(o,"prod");const c=o.shape.length,a=ie(r,o.shape),u=ze(a,c);let d=a,l=o;const f=[];u!=null&&(l=Fn({inputs:{x:o},backend:e,attrs:{perm:u}}),f.push(l),d=je(d.length,c));const m=e.data.get(l.dataId).values,{outVals:x,outShape:v,outDtype:b}=xb(l.shape,l.dtype,m,d);let w=v;return i&&(w=He(v,a)),f.forEach(A=>e.disposeIntermediateTensorInfo(A)),e.makeTensorInfo(w,b,x)}const SD={kernelName:ru,backendName:"cpu",kernelFunc:$D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yb(n,t,e,s){const o=n===t,r=n<t&&e<0,i=t<n&&e>1;if(o||r||i)return Cn(0,s);const c=Math.abs(Math.ceil((t-n)/e)),a=Cn(c,s);t<n&&e===1&&(e=-1),a[0]=n;for(let u=1;u<a.length;u++)a[u]=a[u-1]+e;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vb=jo(n=>1/Math.sqrt(n)),ND=Ai(Oa,vb),TD={kernelName:Oa,backendName:"cpu",kernelFunc:ND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n,t,e,s,o,r,i,c,a,u){const d=[s/o,o],l=n.values,f=t.values;if(s===0)return re(e,t.dtype);const m=re(d,t.dtype);typeof a=="string"||typeof a=="number"?m.values.fill(a):typeof a=="boolean"&&m.values.fill(+a);for(let x=0;x<r;x++){const v=[];let b=0;for(let w=0;w<i;w++){const A=l[x*i+w];v.push(A),b+=A*c[w]}if(b<0||b>=s/o)throw new Error(`Invalid indices: ${v} does not index into ${e}`);for(let w=0;w<o;w++)u?m.values[b*o+w]+=f[x*o+w]:m.values[b*o+w]=t.rank===0?f[0]:f[x*o+w]}return m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED=jo(n=>1/(1+Math.exp(-n))),_b=Ce(qa,n=>1/(1+Math.exp(-n))),RD={kernelName:qa,backendName:"cpu",kernelFunc:_b};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n,t,e,s,o){const r=Bp(s,t,e),i=pt(e),c=Ut(s);if(r){const l=Fp(t,c);return o==="string"?n.slice(l,l+i):n.subarray(l,l+i)}const a=o==="string"?_r(n):n,u=re(s,o,a),d=re(e,o);for(let l=0;l<d.size;++l){const f=d.indexToLoc(l),m=f.map((x,v)=>x+t[v]);d.set(u.get(...m),...f)}return o==="string"?Rv(d.values):d.values}function Cr(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:r,size:i}=s;Bt(o,"slice");const[c,a]=Cu(o,r,i);Rp(o,c,a);const u=e.data.get(o.dataId).values,d=bb(u,c,a,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,d)}const DD={kernelName:hu,backendName:"cpu",kernelFunc:Cr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n,t,e,s,o,r,i){const c=t[0],a=r[0],u=new Array(a),d=new Array(c),l=t[1];if(a===0){if(c!==0)throw new Error(vv(c));const b=Sn(e,0),w=Sn(o,0);return[b,[0,l],w,u,d]}let f=!0,m=0;const x=new Array(a).fill(0);for(let b=0;b<c;++b){const w=n[b*l];if(w<0)throw new Error(_v(b,w));if(w>=a)throw new Error(bv(b,w,a));++x[w],f=f&&w>=m,m=w}let v=!0;for(let b=0;b<a;++b){const w=x[b]===0;u[b]=w,v=v&&!w,x[b]=Math.max(x[b],1),b>0&&(x[b]+=x[b-1])}if(v&&f){const b=n,w=s;for(let A=0;A<c;++A)d[A]=A;return[b,[c,l],w,u,d]}else{const b=x[a-1],w=Sn(e,b*l),A=Sn(o,b),C=new Array(a).fill(0);for(let I=0;I<c;++I){const N=n[I*l],E=C[N],B=(N===0?0:x[N-1])+E;C[N]++;for(let M=0;M<l;++M)w[B*l+M]=n[I*l+M];A[B]=s[I],d[I]=B}for(let I=0;I<a;++I)if(C[I]===0){const E=I===0?0:x[I-1];w[E*l+0]=I;for(let B=1;B<l;++B)w[E*l+B]=0;A[E]=i}return[w,[b,l],A,u,d]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(n,t,e,s,o){const r=pt(s),i=t[0],c=o.length,a=[];let u=1,d=-1;for(let b=0;b<c;++b){const w=o[b];if(w===-1){if(d!==-1)throw new Error(wv(d,b));d=b,a.push(1)}else{if(w<0)throw new Error(Cv(b,w));u*=w,a.push(w)}}if(d!==-1){if(u<=0)throw new Error(Iv());const b=Math.trunc(r/u);if(u*b!==r)throw new Error(Av(s,a));a[d]=b}if(pt(a)!==r)throw new Error(kv(s,a));const f=s.length,m=[];if(f>0){m[f-1]=1;for(let b=f-2;b>=0;--b)m[b]=m[b+1]*s[b+1]}const x=[];if(c>0){x[c-1]=1;for(let b=c-2;b>=0;--b)x[b]=x[b+1]*a[b+1]}const v=Sn(e,i*c);for(let b=0;b<i;++b){let w=0;for(let A=0;A<f;++A)w+=n[b*f+A]*m[A];for(let A=0;A<c;++A)v[b*c+A]=Math.trunc(w/x[A]),w%=x[A]}return[v,[i,c],a]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(n,t,e,s,o,r=!1,i=0){const c=s.length,a=[t[0],n.length/t[0]],u=a[1],l=c>0?o[c-1]+1:0;if(l<0)throw new Error(ud());const f=t.slice();f[0]=l;const m=f.reduce((C,I)=>C*I,1),x=Sn(e,m);if(c===0)return l>0&&x.fill(i),[x,f];if(l<=0)throw new Error(ud());let v=0,b=1,w=0,A=o[v];for(;;){let C=0;if(b<c){if(C=o[b],A===C){++b;continue}if(A>=C)throw new Error($v())}if(A<0||A>=l)throw new Error(Sv(A,l));A>w&&x.fill(i,w*u,A*u);for(let I=v;I<b;++I){const N=s[I];if(N<0||N>=a[0])throw new Error(Nv(I,s[I],a[0]));for(let E=0;E<u;E++)x[A*u+E]+=n[N*u+E]}if(r)for(let I=0;I<u;I++)x[A*u+I]/=b-v;if(v=b,++b,w=A+1,A=C,b>c)break}return w<l&&x.fill(i,w*u,l*u),[x,f]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=jo(n=>Math.sqrt(n)),FD=Ce(ja,n=>Math.sqrt(n)),MD={kernelName:ja,backendName:"cpu",kernelFunc:FD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ib=Qe((n,t)=>{const e=n-t;return e*e}),VD=fn(Ka,Ib),LD={kernelName:Ka,backendName:"cpu",kernelFunc:VD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ab(n,t,e,s){const o=re(n,t.dtype);for(let r=0;r<o.size;r++){const i=o.indexToLoc(r),c=new Array(i.length);for(let a=0;a<c.length;a++)c[a]=i[a]*e[a]+s[a];o.set(t.get(...c),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PD{constructor(t,e,s,o,r,i){this.separator=To(t),this.nGramWidths=e,this.leftPad=To(s),this.rightPad=To(o),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,o,r,i){for(let c=0;c<r;++c){const a=this.getPadWidth(i),u=Math.max(0,a-c),d=Math.max(0,a-(r-(c+1))),l=i-(u+d),f=e+(u>0?0:c-a);let m=0;m+=u*this.leftPad.length;for(let A=0;A<l;++A)m+=t[f+A].length;m+=d*this.rightPad.length,m+=(u+d+l-1)*this.separator.length,s[o+c]=new Uint8Array(m);const v=s[o+c];let b=0;const w=A=>A.forEach(C=>v[b++]=C);for(let A=0;A<u;++A)w(this.leftPad),w(this.separator);for(let A=0;A<l-1;++A)w(t[f+A]),w(this.separator);if(l>0){w(t[f+l-1]);for(let A=0;A<d;++A)w(this.separator),w(this.rightPad)}else{for(let A=0;A<d-1;++A)w(this.rightPad),w(this.separator);w(this.rightPad)}}}compute(t,e){const s=t.length,o=e.length;if(o>0){let a=e[0];if(a!==0)throw new Error(`First split value must be 0, got ${a}`);for(let u=1;u<o;++u){let d=e[u]>=a;if(d=d&&e[u]<=s,!d)throw new Error(`Invalid split value ${e[u]}, must be in [${a}, ${s}]`);a=e[u]}if(a!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${a}`)}const r=o-1,i=Sn("int32",o);if(s===0||o===0){const a=new Array(s);for(let u=0;u<=r;++u)i[u]=0;return[a,i]}i[0]=0;for(let a=1;a<=r;++a){const u=e[a]-e[a-1];let d=0;this.nGramWidths.forEach(l=>{d+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&d===0&&(d=1),i[a]=i[a-1]+d}const c=new Array(i[r]);for(let a=0;a<r;++a){const u=e[a];let d=i[a];if(this.nGramWidths.forEach(l=>{const f=e[a+1]-e[a],m=this.getNumNGrams(f,l);this.createNGrams(t,u,c,d,m,l),d+=m}),this.preserveShort&&d===i[a]){const l=e[a+1]-e[a];if(l===0)continue;const f=l+2*this.padWidth,m=1;this.createNGrams(t,u,c,d,m,f)}}return[c,i]}}function kb(n,t,e,s,o,r,i,c){return new PD(e,s,o,r,i,c).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,t,e,s){if(!n.length)return;if(t.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(t.length===1){const r=t[0];let i=n.indexOf(r);for(;i!==-1;){const c=n.subarray(0,i);(!e||c.length!==0)&&s.push(c),n=n.subarray(i+1),i=n.indexOf(r)}(!e||n.length!==0)&&s.push(n);return}let o=0;for(let r=0;r<n.length+1;r++)if(r===n.length||t.indexOf(n[r])!==-1){const i=n.subarray(o,r);(!e||i.length!==0)&&s.push(i),o=r+1}}function $b(n,t,e){const s=n.length,o=[];let r=0,i=0;const c=new Array(s);for(let f=0;f<s;++f){const m=o.length;OD(n[f],t,e,o);const x=o.length-m;c[f]=x,r+=x,i=Math.max(i,x)}const a=Sn("int32",r*2),u=new Array(r),d=[s,i];let l=0;for(let f=0;f<s;++f)for(let m=0;m<c[f];++m)a[l*2]=f,a[l*2+1]=m,u[l]=o[l],++l;return[a,u,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(n,t){const e=Sn("int32",n.length);for(let s=0;s<n.length;++s)e[s]=uC(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nb=Qe((n,t)=>n-t),zD=cm((n,t,e,s)=>({real:n-e,imag:t-s})),pm=fn(Xa,Nb,zD),WD={kernelName:Xa,backendName:"cpu",kernelFunc:pm};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(n,t){const e=new Array(n.rank);for(let o=0;o<e.length;o++)e[o]=n.shape[o]*t[o];const s=re(e,n.dtype);for(let o=0;o<s.values.length;++o){const r=s.indexToLoc(o),i=new Array(n.rank);for(let a=0;a<i.length;a++)i[a]=r[a]%n.shape[a];const c=n.locToIndex(i);s.values[o]=n.values[c]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wi=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function Eb(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const c=s-e+1,a=t-e+1,u=Math.log(c),d=.5*Math.exp(2*u/3),l=.5*Math.sqrt(u*d*(c-d)/c)*Math.sign(a-c/2),f=Math.max(e,Math.floor(t-a*d/c+l)),m=Math.min(s,Math.floor(t+(c-a)*d/c+l));Eb(n,t,f,m)}const o=n[t];let r=e,i=s;for(Ur(n,e,t),Wi(n[s],o)>0&&Ur(n,e,s);r<i;){for(Ur(n,r,i),r++,i--;Wi(n[r],o)<0;)r=r+1;for(;Wi(n[i],o)>0;)i=i-1}Wi(n[e],o)===0?Ur(n,e,i):(i=i+1,Ur(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function Rb(n,t,e,s,o){const r=t[t.length-1],[i,c]=[n.length/r,r],a=gn(e,i*s),u=gn("int32",i*s);for(let l=0;l<i;l++){const f=l*c,m=n.subarray(f,f+c);let x=new Array(m.length);m.forEach((A,C)=>x[C]={value:A,index:C}),s<x.length&&(Eb(x,s),x=x.slice(0,s)),o&&x.sort(Wi);const v=l*s,b=a.subarray(v,v+s),w=u.subarray(v,v+s);for(let A=0;A<s;A++)b[A]=x[A].value,w[A]=x[A].index}const d=t.slice();return d[d.length-1]=s,[re(d,e,a),re(d,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n,t,e,s){const o=ie(t,e)[0],r=[1,e[0],1];for(let x=0;x<o;x++)r[0]*=e[x];r[1]=e[o];for(let x=o+1;x<e.length;x++)r[2]*=e[x];const i={},c=new Int32Array(e[o]),a=new bn(r,s,n),u=[],d=r[0]===1&&r[2]===1;for(let x=0;x<e[o];x++){let v;if(d)v=n[x].toString();else{const b=[];for(let w=0;w<r[0];w++)for(let A=0;A<r[2];A++)b.push(a.get(w,x,A));v=b.join(",")}if(i[v]!==void 0)c[x]=i[v];else{const b=Object.keys(i).length;i[v]=b,c[x]=b,u.push(x)}}const l=r.slice();l[1]=Object.keys(i).length;const f=new bn(l,s);u.forEach((x,v)=>{for(let b=0;b<r[0];b++)for(let w=0;w<r[2];w++)f.set(a.get(b,x,w),b,v,w)});const m=e.slice();return m[o]=l[1],{outputValues:f.values,outputShape:m,indices:c}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var UD=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:j_,addImpl:K_,bincountImpl:lm,bincountReduceImpl:X_,ceilImpl:Y_,concatImpl:J_,equalImpl:Z_,expImpl:tb,expm1Impl:nb,floorImpl:sb,gatherNdImpl:ob,gatherV2Impl:rb,greaterImpl:ib,greaterEqualImpl:ab,lessImpl:cb,lessEqualImpl:lb,linSpaceImpl:ub,logImpl:hb,maxImpl:db,maximumImpl:pb,minimumImpl:fb,multiplyImpl:um,negImpl:mb,notEqualImpl:gb,prodImpl:xb,rangeImpl:yb,rsqrtImpl:vb,scatterImpl:Kr,sigmoidImpl:ED,sliceImpl:bb,sparseFillEmptyRowsImpl:wb,sparseReshapeImpl:Cb,sparseSegmentReductionImpl:dm,sqrtImpl:BD,squaredDifferenceImpl:Ib,stridedSliceImpl:Ab,stringNGramsImpl:kb,stringSplitImpl:$b,stringToHashBucketFastImpl:Sb,subImpl:Nb,tileImpl:Tb,topKImpl:Rb,transposeImpl:hm,uniqueImpl:Db},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gy("cpu",()=>new Hu,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bb=Ce(ya,n=>n>=0?n:Math.exp(n)-1),GD={kernelName:ya,backendName:"cpu",kernelFunc:Bb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{alpha:r}=s;Bt([o],"leakyRelu");const i=pt(o.shape),c=e.data.get(o.dataId).values,a=gn("float32",i);for(let u=0;u<c.length;u++)a[u]=c[u]<0?r*c[u]:c[u];return e.makeTensorInfo(o.shape,"float32",a)}const qD={kernelName:Pl,backendName:"cpu",kernelFunc:Fb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD=Qe((n,t)=>n<0?t*n:n);function Mb(n){const{inputs:t,backend:e}=n,{x:s,alpha:o}=t;Bt([s,o],"prelu");const r=e.data.get(s.dataId).values,i=e.data.get(o.dataId).values,[c,a]=HD(s.shape,o.shape,r,i,"float32");return e.makeTensorInfo(a,"float32",c)}const jD={kernelName:ou,backendName:"cpu",kernelFunc:Mb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vb=Ce(Va,n=>Math.max(0,n)),KD={kernelName:Va,backendName:"cpu",kernelFunc:Vb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lb=Ce(La,n=>Math.min(Math.max(0,n),6)),XD={kernelName:La,backendName:"cpu",kernelFunc:Lb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n,t,e,s,o){if(e==="linear")return eo({inputs:{x:t},backend:n});if(e==="relu")return Vb({inputs:{x:t},backend:n});if(e==="elu")return Bb({inputs:{x:t},backend:n});if(e==="relu6")return Lb({inputs:{x:t},backend:n});if(e==="prelu")return Mb({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return Fb({inputs:{x:t},backend:n,attrs:{alpha:o}});if(e==="sigmoid")return _b({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Te(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{shape:r}=s,i=pt(o.shape),c=Ix(r,i),a=pt(c);P(i===a,()=>`The new shape (${c}) has ${a} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);const u=e.data.get(o.dataId);if(u.complexTensorInfos!=null){const d=u.complexTensorInfos.real,l=u.complexTensorInfos.imag;d.shape=c,l.shape=c}return{dataId:o.dataId,shape:c,dtype:o.dtype}}const YD={kernelName:iu,backendName:"cpu",kernelFunc:Te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:r}=t,{transposeA:i,transposeB:c}=s;Bt([o,r],"matMul");const a=o.shape.length,u=r.shape.length,d=i?o.shape[a-2]:o.shape[a-1],l=c?r.shape[u-1]:r.shape[u-2],f=i?o.shape[a-1]:o.shape[a-2],m=c?r.shape[u-2]:r.shape[u-1],x=o.shape.slice(0,-2),v=r.shape.slice(0,-2),b=pt(x),w=pt(v),C=te(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([f,m]);P(d===l,()=>`Error in matMul: inner shapes (${d}) and (${l}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${i} and transposeB=${c} must match.`);const I=i?[b,d,f]:[b,f,d],N=c?[w,m,l]:[w,l,m],E=Te({inputs:{x:o},backend:e,attrs:{shape:I}}),B=Te({inputs:{x:r},backend:e,attrs:{shape:N}}),M=i?E.shape[1]:E.shape[2],U=i?E.shape[2]:E.shape[1],G=c?B.shape[1]:B.shape[2],q=Math.max(b,w),tt=e.data.get(E.dataId).values,et=e.data.get(B.dataId).values,Q=Ut(E.shape),it=Ut(B.shape),[nt,Z,lt]=i?[Q[0],1,Q[1]]:[Q[0],Q[1],1],[ct,ut,gt]=c?[1,it[1],it[0]]:[it[1],1,it[0]],vt=U*G,Ct=re([q,U,G],E.dtype),St=Ct.values,At=e.blockSize;for(let Rt=0;Rt<q;Rt++)for(let Lt=0;Lt<U;Lt+=At)for(let Gt=0;Gt<G;Gt+=At)for(let Ot=0;Ot<M;Ot+=At){const Dt=Math.min(Lt+At,U),oe=Math.min(Gt+At,G),fe=Math.min(Ot+At,M);for(let _e=Lt;_e<Dt;_e++)for(let le=Gt;le<oe;le++){let me=0;for(let ge=Ot;ge<fe;ge++){const Be=Math.min(Rt,b-1)*nt,Fe=Math.min(Rt,w-1)*gt,ss=tt[Be+_e*Z+ge*lt],Xe=et[ge*ct+le*ut+Fe];me+=ss*Xe}St[Rt*vt+(_e*G+le)]+=me}}return e.disposeIntermediateTensorInfo(E),e.disposeIntermediateTensorInfo(B),e.makeTensorInfo(C,Ct.dtype,Ct.values)}const JD={kernelName:Il,backendName:"cpu",kernelFunc:Pb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:c}=t,{transposeA:a,transposeB:u,activation:d,leakyreluAlpha:l}=s;let f,m,x;const v=[];f=Pb({inputs:{a:o,b:r},attrs:{transposeA:a,transposeB:u},backend:e}),i&&(m=ui({inputs:{a:f,b:i},backend:e}),v.push(f),f=m),d&&(x=dl(e,f,d,c,l),v.push(f),f=x);for(const w of v)e.disposeIntermediateTensorInfo(w);return f}const QD={kernelName:jc,backendName:"cpu",kernelFunc:ZD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB=Ce(ra,n=>Math.acos(n)),eB={kernelName:ra,backendName:"cpu",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nB=Ce(ia,n=>Math.acosh(n)),sB={kernelName:ia,backendName:"cpu",kernelFunc:nB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n){const{inputs:t,backend:e}=n,s=t;Bt(t,"addN");const o=s.map(c=>e.data.get(c.dataId).values),r=re(s[0].shape,s[0].dtype),i=r.values;for(let c=0;c<s.length;c++){const a=o[c];for(let u=0;u<i.length;u++)i[u]+=a[u]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const rB={kernelName:Md,backendName:"cpu",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;Bt(o,"all");const c=ie(r,o.shape);let a=c;const u=ze(a,o.shape.length);let d=o;u!=null&&(d=Fn({inputs:{x:o},backend:e,attrs:{perm:u}}),a=je(a.length,o.shape.length)),yn("all",a,d.shape.length);const[l,f]=pn(d.shape,a),m=pt(f),x=Cn(pt(l),d.dtype),v=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const A=w*m;let C=v[A];for(let I=0;I<m;++I){const N=v[A+I];C=C&&N}x[w]=C}u!=null&&e.disposeIntermediateTensorInfo(d);const b=e.makeTensorInfo(l,d.dtype,x);if(i){const w=He(l,c),A=Te({inputs:{x:b},backend:e,attrs:{shape:w}});return e.disposeIntermediateTensorInfo(b),A}return b}const aB={kernelName:Vd,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;Bt(o,"any");const c=ie(r,o.shape);let a=c;const u=ze(a,o.shape.length);let d=o;u!=null&&(d=Fn({inputs:{x:o},backend:e,attrs:{perm:u}}),a=je(a.length,o.shape.length)),yn("any",a,d.shape.length);const[l,f]=pn(d.shape,a),m=pt(f),x=Cn(pt(l),d.dtype),v=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const A=w*m;let C=v[A];for(let I=0;I<m;++I){const N=v[A+I];C=C||N}x[w]=C}u!=null&&e.disposeIntermediateTensorInfo(d);const b=e.makeTensorInfo(l,d.dtype,x);if(i){const w=He(l,c),A=Te({inputs:{x:b},backend:e,attrs:{shape:w}});return e.disposeIntermediateTensorInfo(b),A}return b}const lB={kernelName:Ld,backendName:"cpu",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r}=s;Bt(o,"argMax");let i=ie(r,o.shape);const c=ze(i,o.shape.length);let a=o;const u=[];c!=null&&(a=Fn({inputs:{x:o},backend:e,attrs:{perm:c}}),u.push(a),i=je(i.length,a.shape.length)),i=[i[0]],yn("argMax",i,a.shape.length);const[d,l]=pn(a.shape,i),f=pt(d),m=Cn(f,"int32"),x=pt(l),v=e.data.get(a.dataId).values;for(let b=0;b<m.length;++b){const w=b*x;let A=v[w],C=0;for(let I=0;I<x;++I){const N=v[w+I];N>A&&(A=N,C=I)}m[b]=C}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(d,"int32",m)}const hB={kernelName:_l,backendName:"cpu",kernelFunc:uB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r}=s;Bt(o,"argMin");let i=ie(r,o.shape);const c=ze(i,o.shape.length);let a=o;const u=[];c!=null&&(a=Fn({inputs:{x:o},backend:e,attrs:{perm:c}}),u.push(a),i=je(i.length,a.shape.length)),i=[i[0]],yn("argMin",i,a.shape.length);const[d,l]=pn(a.shape,i),f=pt(d),m=Cn(f,"int32"),x=pt(l),v=e.data.get(a.dataId).values;for(let b=0;b<m.length;++b){const w=b*x;let A=v[w],C=0;for(let I=0;I<x;++I){const N=v[w+I];N<A&&(A=N,C=I)}m[b]=C}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(d,"int32",m)}const pB={kernelName:bl,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB=Ce(aa,n=>Math.asin(n)),mB={kernelName:aa,backendName:"cpu",kernelFunc:fB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gB=Ce(ca,n=>Math.asinh(n)),xB={kernelName:ca,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yB=Ce(la,n=>Math.atan(n)),vB={kernelName:la,backendName:"cpu",kernelFunc:yB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=Qe((n,t)=>Math.atan2(n,t)),bB=fn(ha,_B),wB={kernelName:ha,backendName:"cpu",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CB=Ce(ua,n=>Math.atanh(n)),IB={kernelName:ua,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fm(n,t,e,s,o,r){const i=o.strideHeight,c=o.strideWidth,a=o.dilationHeight,u=o.dilationWidth,d=o.effectiveFilterHeight,l=o.effectiveFilterWidth,f=o.padInfo.top,m=o.padInfo.left,x=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=re(o.outShape,e),b=v.values,w=o.outShape[1]*o.outShape[2]*o.outShape[3],A=o.outShape[2]*o.outShape[3],C=o.outShape[3];for(let I=0;I<o.batchSize;++I){const N=I*w,E=I*s[0];for(let B=0;B<o.inChannels;++B)for(let M=0;M<o.outHeight;++M){const U=M*i-f,G=Math.max(0,U),q=Math.min(o.inHeight,d+U),tt=N+M*A;for(let et=0;et<o.outWidth;++et){const Q=et*c-m,it=Math.max(0,Q),nt=Math.min(o.inWidth,l+Q);let Z=x,lt=0,ct=0;for(let gt=G;gt<q;gt+=a){const vt=E+gt*s[1];for(let Ct=it;Ct<nt;Ct+=u){const St=vt+Ct*s[2],At=n[St+B];r==="max"&&At>Z?Z=At:r==="avg"&&(lt+=At,ct++)}if(isNaN(Z))break}const ut=tt+et*C+B;b[ut]=r==="avg"?lt/ct:Z}}}return v}function Ob(n,t,e,s,o=!1,r=!1){const i=re(s.outShape,"int32"),c=s.strideHeight,a=s.strideWidth,u=s.dilationHeight,d=s.dilationWidth,l=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.top,x=s.padInfo.left,v=re(t,e,n);for(let b=0;b<s.batchSize;++b)for(let w=0;w<s.inChannels;++w)for(let A=0;A<s.outHeight;++A){const C=A*c-m;let I=C;for(;I<0;)I+=u;const N=Math.min(s.inHeight,l+C);for(let E=0;E<s.outWidth;++E){const B=E*a-x;let M=B;for(;M<0;)M+=d;const U=Math.min(s.inWidth,f+B);let G=Number.NEGATIVE_INFINITY,q=-1;for(let tt=I;tt<N;tt+=u){const et=tt-C;for(let Q=M;Q<U;Q+=d){const it=Q-B,nt=v.get(b,tt,Q,w);nt>G&&(G=nt,o?q=r?((b*s.inHeight+tt)*s.inWidth+Q)*s.inChannels+w:(tt*s.inWidth+Q)*s.inChannels+w:q=et*f+it)}}i.set(q,b,A,E,w)}}return i}function zb(n,t,e,s,o,r){const i=o.strideDepth,c=o.strideHeight,a=o.strideWidth,u=o.dilationDepth,d=o.dilationHeight,l=o.dilationWidth,f=o.effectiveFilterDepth,m=o.effectiveFilterHeight,x=o.effectiveFilterWidth,v=o.padInfo.front,b=o.padInfo.top,w=o.padInfo.left,A=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=re(o.outShape,e),I=C.values,N=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[2]*o.outShape[3]*o.outShape[4],B=o.outShape[3]*o.outShape[4],M=o.outShape[4];for(let U=0;U<o.batchSize;++U){const G=U*N,q=U*s[0];for(let tt=0;tt<o.inChannels;++tt)for(let et=0;et<o.outDepth;++et){const Q=et*i-v;let it=Q;for(;it<0;)it+=u;const nt=Math.min(o.inDepth,f+Q),Z=G+et*E;for(let lt=0;lt<o.outHeight;++lt){const ct=lt*c-b;let ut=ct;for(;ut<0;)ut+=d;const gt=Math.min(o.inHeight,m+ct),vt=Z+lt*B;for(let Ct=0;Ct<o.outWidth;++Ct){const St=Ct*a-w;let At=St;for(;At<0;)At+=l;const Rt=Math.min(o.inWidth,x+St),Lt=vt+Ct*M;let Gt=A,Ot=0,Dt=0;for(let fe=it;fe<nt;fe+=u){const _e=q+fe*s[1];for(let le=ut;le<gt;le+=d){const me=_e+le*s[2];for(let ge=At;ge<Rt;ge+=l){const Be=me+ge*s[3],Fe=n[Be+tt];if(r==="max"&&Fe>Gt?Gt=Fe:r==="avg"&&(Ot+=Fe,Dt++),isNaN(Gt))break}if(isNaN(Gt))break}if(isNaN(Gt))break}const oe=Lt+tt;I[oe]=r==="avg"?Ot/Dt:Gt}}}}return C}function AB(n,t){const e=re(t.outShape,"int32"),s=t.strideDepth,o=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,l=t.effectiveFilterWidth,f=t.padInfo.front,m=t.padInfo.top,x=t.padInfo.left;for(let v=0;v<t.batchSize;++v)for(let b=0;b<t.inChannels;++b)for(let w=0;w<t.outDepth;++w){const A=w*s-f;let C=A;for(;C<0;)C+=i;const I=Math.min(t.inDepth,u+A);for(let N=0;N<t.outHeight;++N){const E=N*o-m;let B=E;for(;B<0;)B+=c;const M=Math.min(t.inHeight,d+E);for(let U=0;U<t.outWidth;++U){const G=U*r-x;let q=G;for(;q<0;)q+=a;const tt=Math.min(t.inWidth,l+G);let et=Number.NEGATIVE_INFINITY,Q=-1;for(let it=C;it<I;it+=i){const nt=it-A;for(let Z=B;Z<M;Z+=c){const lt=Z-E;for(let ct=q;ct<tt;ct+=a){const ut=ct-G,gt=n.get(v,it,Z,ct,b);gt>=et&&(et=gt,Q=nt*d*l+lt*d+ut)}}}e.set(Q,v,w,N,U,b)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;Bt(o,"avgPool");const{filterSize:r,strides:i,pad:c,dimRoundingMode:a}=s,u=1;P(In(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const d=_s(o.shape,r,i,u,c,a);let l;if(d.filterWidth===1&&d.filterHeight===1&&ve(d.inShape,d.outShape))l=eo({inputs:{x:o},backend:e});else{const f=e.data.get(o.dataId).values,m=Ut(o.shape),x=fm(f,o.shape,o.dtype,m,d,"avg");l=e.makeTensorInfo(d.outShape,o.dtype,x.values)}return l}const $B={kernelName:wl,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:r,strides:i,pad:c,dimRoundingMode:a,dataFormat:u}=s;Bt(o,"avgPool3d");const d=xo(o.shape,r,i,1,c,a,u),l=e.data.get(o.dataId).values,f=zb(l,o.shape,o.dtype,Ut(o.shape),d,"avg");return e.makeTensorInfo(f.shape,"float32",f.values)}const NB={kernelName:Cl,backendName:"cpu",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,{filterSize:i,strides:c,pad:a,dimRoundingMode:u}=s;Bt([o,r],"avgPool3DGrad");const d=xo(r.shape,i,c,1,a,u),l=d.strideDepth,f=d.strideHeight,m=d.strideWidth,x=d.filterDepth,v=d.filterHeight,b=d.filterWidth,w=d.dilationDepth,A=d.dilationHeight,C=d.dilationWidth,I=d.effectiveFilterDepth,N=d.effectiveFilterHeight,E=d.effectiveFilterWidth,B=I-1-d.padInfo.front,M=E-1-d.padInfo.left,U=N-1-d.padInfo.top,G=re(r.shape,"float32"),q=1/(x*v*b),tt=e.bufferSync(o);for(let et=0;et<d.batchSize;++et)for(let Q=0;Q<d.inChannels;++Q)for(let it=0;it<d.inDepth;++it)for(let nt=0;nt<d.inHeight;++nt)for(let Z=0;Z<d.inWidth;++Z){const lt=it-B,ct=nt-U,ut=Z-M;let gt=0;for(let vt=0;vt<I;vt+=w){const Ct=(lt+vt)/l;if(!(Ct<0||Ct>=d.outDepth||Math.floor(Ct)!==Ct))for(let St=0;St<N;St+=A){const At=(ct+St)/f;if(!(At<0||At>=d.outHeight||Math.floor(At)!==At))for(let Rt=0;Rt<E;Rt+=C){const Lt=(ut+Rt)/m;if(Lt<0||Lt>=d.outWidth||Math.floor(Lt)!==Lt)continue;gt+=tt.get(et,Ct,At,Lt,Q)}}}G.set(gt*q,et,it,nt,Z,Q)}return e.makeTensorInfo(G.shape,G.dtype,G.values)}const EB={kernelName:Od,backendName:"cpu",kernelFunc:TB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,i=r;Bt([o,r],"avgPoolGrad");const{filterSize:c,strides:a,pad:u}=s,d=_s(i.shape,c,a,1,u),l=d.strideHeight,f=d.strideWidth,m=d.filterHeight,x=d.filterWidth,v=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,A=d.effectiveFilterWidth,C=A-1-d.padInfo.left,I=w-1-d.padInfo.top,N=re(i.shape,"float32"),E=1/(m*x),B=e.data.get(o.dataId).values,M=re(o.shape,"float32",B);for(let U=0;U<d.batchSize;++U)for(let G=0;G<d.inChannels;++G)for(let q=0;q<d.inHeight;++q)for(let tt=0;tt<d.inWidth;++tt){const et=q-I,Q=tt-C;let it=0;for(let nt=0;nt<w;nt+=v){const Z=(et+nt)/l;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let lt=0;lt<A;lt+=b){const ct=(Q+lt)/f;if(ct<0||ct>=d.outWidth||Math.floor(ct)!==ct)continue;it+=M.get(U,Z,ct,G)}}N.set(it*E,U,q,tt,G)}return e.makeTensorInfo(N.shape,N.dtype,N.values)}const DB={kernelName:Pd,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,scale:r,offset:i,mean:c,variance:a}=t;P(c.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(i==null||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(r==null||c.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Bt([o,c,a,r,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const d=e.data.get(o.dataId).values,l=e.data.get(c.dataId).values,f=e.data.get(a.dataId).values,m=r?e.data.get(r.dataId).values:new Float32Array([1]),x=i?e.data.get(i.dataId).values:new Float32Array([0]),v=new Float32Array(d.length),b=x.length,w=m.length,A=f.length,C=l.length;let I=0,N=0,E=0,B=0;for(let M=0;M<d.length;++M)v[M]=x[I++]+(d[M]-l[N++])*m[E++]/Math.sqrt(f[B++]+u),I>=b&&(I=0),N>=C&&(N=0),E>=w&&(E=0),B>=A&&(B=0);return e.makeTensorInfo(o.shape,o.dtype,v)}const FB={kernelName:Ml,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:r,crops:i}=s;Bt([o],"batchToSpaceND");const c=r.reduce((w,A)=>w*A),a=rc(o.shape,r,c),u=ic(a.length,r.length),d=ac(o.shape,r,c),l=wf(i,r.length),f=Cf(d,i,r.length),m=Te({inputs:{x:o},backend:e,attrs:{shape:a}}),x=Fn({inputs:{x:m},backend:e,attrs:{perm:u}}),v=Te({inputs:{x},backend:e,attrs:{shape:d}}),b=Cr({inputs:{x:v},backend:e,attrs:{begin:l,size:f}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),b}const VB={kernelName:Al,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:r}=t,{size:i}=s,c=e.data.get(o.dataId).values,a=e.data.get(r.dataId).values,u=lm(c,a,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,u)}const PB={kernelName:zd,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){const{inputs:t,backend:e}=n,{s0:s,s1:o}=t,r=e.data.get(s.dataId).values,i=e.data.get(o.dataId).values,c=te(Array.from(r),Array.from(i));return e.makeTensorInfo([c.length],"int32",Int32Array.from(c))}const zB={kernelName:Rx,backendName:"cpu",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB=Ce(fa,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),UB={kernelName:fa,backendName:"cpu",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(pt(t.shape)),o=e.data.get(t.dataId),r=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,c=e.data.get(r.dataId).values,a=e.data.get(i.dataId).values;for(let u=0;u<c.length;u++){const d=c[u],l=a[u];s[u]=Math.hypot(d,l)}return e.makeOutput(s,t.shape,"float32")},qB={kernelName:kl,backendName:"cpu",kernelFunc:GB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.data.get(s.dataId).complexTensorInfos.imag,r=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,r)}const HB={kernelName:np,backendName:"cpu",kernelFunc:hi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s,r=ie(o,t[0].shape)[0];let i=Ys(t.map(v=>v.shape),r);if(pt(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter(v=>pt(v.shape)>0);if(c.length===1)return eo({inputs:{x:c[0]},backend:e});const a=c.map(v=>v.shape);if(vf(a,r),c[0].dtype==="complex64"){const v=c.map(I=>wr({inputs:{input:I},backend:e})),b=c.map(I=>hi({inputs:{input:I},backend:e})),w=di({inputs:v,backend:e,attrs:{axis:r}}),A=di({inputs:b,backend:e,attrs:{axis:r}}),C=On({inputs:{real:w,imag:A},backend:e});return v.forEach(I=>e.disposeIntermediateTensorInfo(I)),b.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(A),C}const u=c.map(v=>{const b=pt(v.shape.slice(r));return Te({inputs:{x:v},backend:e,attrs:{shape:[-1,b]}})}),d=u.map(v=>({vals:e.data.get(v.dataId).values,shape:v.shape}));i=Ys(u.map(v=>v.shape),1);const l=u[0].shape[0]===1,f=J_(d,i,t[0].dtype,l),m=Ys(c.map(v=>v.shape),r),x=e.makeTensorInfo(m,t[0].dtype,f);return u.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const jB={kernelName:$l,backendName:"cpu",kernelFunc:di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wb(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dataFormat:a,dilations:u,dimRoundingMode:d}=s;Bt([o,r],"conv2d");const l=yo(a),f=xn(o.shape,r.shape,i,u,c,d,!1,l),m=f.filterHeight,x=f.filterWidth,v=f.dilationHeight,b=f.dilationWidth,w=f.padInfo.left,A=f.padInfo.top,C=f.dataFormat==="channelsLast",I=new bn(f.outShape,o.dtype),N=Ut(o.shape),E=Ut(r.shape),B=N[0],M=C?N[1]:N[2],U=C?N[2]:1,G=C?1:N[1],q=I.strides[0],tt=C?I.strides[1]:I.strides[2],et=C?I.strides[2]:1,Q=C?1:I.strides[1],it=e.data.get(o.dataId).values,nt=e.data.get(r.dataId).values,Z=I.values;for(let lt=0;lt<f.batchSize;++lt){const ct=lt*B,ut=lt*q;for(let gt=0;gt<f.outHeight;++gt){const vt=ut+gt*tt,Ct=gt*f.strideHeight-A;for(let St=0;St<m;++St){const At=Ct+St*v;if(At<0||At>=f.inHeight)continue;const Rt=St*E[0],Lt=ct+At*M;for(let Gt=0;Gt<f.outWidth;++Gt){const Ot=vt+Gt*et,Dt=Gt*f.strideWidth-w;for(let oe=0;oe<x;++oe){const fe=Dt+oe*b;if(fe<0||fe>=f.inWidth)continue;const _e=Rt+oe*E[1],le=Lt+fe*U;let me=_e;for(let ge=0;ge<f.inChannels;++ge){const Be=it[le+ge*G];for(let Fe=0;Fe<f.outChannels;++Fe)Z[Ot+Fe*Q]+=Be*nt[me+Fe];me+=f.outChannels}}}}}}return e.makeTensorInfo(I.shape,I.dtype,Z)}const KB={kernelName:Sl,backendName:"cpu",kernelFunc:Wb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,pad:c,dataFormat:a,dimRoundingMode:u,filterShape:d}=s;Bt([o,r],"conv2dBackpropFilter");const l=yo(a),f=xn(o.shape,d,i,1,c,u,!1,l),{strideHeight:m,strideWidth:x,filterHeight:v,filterWidth:b}=f,w=f.dataFormat==="channelsLast",A=new bn(f.filterShape,"float32"),C=f.padInfo.left,I=f.padInfo.top,N=e.data.get(o.dataId).values,E=e.data.get(r.dataId).values,B=new bn(o.shape,o.dtype,N),M=new bn(r.shape,r.dtype,E);for(let U=0;U<v;++U){const G=Math.max(0,Math.ceil((I-U)/m)),q=Math.min(f.outHeight,(f.inHeight+I-U)/m);for(let tt=0;tt<b;++tt){const et=Math.max(0,Math.ceil((C-tt)/x)),Q=Math.min(f.outWidth,(f.inWidth+C-tt)/x);for(let it=0;it<f.inChannels;++it)for(let nt=0;nt<f.outChannels;++nt){let Z=0;for(let lt=0;lt<f.batchSize;++lt)for(let ct=G;ct<q;++ct){const ut=U+ct*m-I;for(let gt=et;gt<Q;++gt){const vt=tt+gt*x-C;w?Z+=B.get(lt,ut,vt,it)*M.get(lt,ct,gt,nt):Z+=B.get(lt,it,ut,vt)*M.get(lt,nt,ct,gt)}}A.set(Z,U,tt,it,nt)}}}return e.makeTensorInfo(A.shape,A.dtype,A.values)}const YB={kernelName:Ud,backendName:"cpu",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{inputShape:i,strides:c,pad:a,dataFormat:u,dimRoundingMode:d}=s;Bt([o,r],"conv2dBackpropInput");const l=Ut(r.shape),f=Ut(o.shape);let m=yo(u);const x=xn(i,r.shape,c,1,a,d,!1,m),v=new bn(x.inShape,"float32"),b=v.values,w=e.data.get(o.dataId).values,A=e.data.get(r.dataId).values,[C,I,N]=l,{batchSize:E,filterHeight:B,filterWidth:M,inChannels:U,inHeight:G,inWidth:q,outChannels:tt,outHeight:et,outWidth:Q,strideHeight:it,strideWidth:nt}=x;m=x.dataFormat;const Z=B-1-x.padInfo.top,lt=M-1-x.padInfo.left,ct=m==="channelsLast",ut=v.strides[0],gt=ct?v.strides[1]:v.strides[2],vt=ct?v.strides[2]:1,Ct=ct?1:v.strides[1],St=f[0],At=ct?f[1]:f[2],Rt=ct?f[2]:1,Lt=ct?1:f[1];for(let Gt=0;Gt<E;++Gt)for(let Ot=0;Ot<U;++Ot)for(let Dt=0;Dt<G;++Dt){const oe=Dt-Z,fe=Math.max(0,Math.ceil(oe/it)),_e=Math.min(et,(B+oe)/it);for(let le=0;le<q;++le){const me=le-lt,ge=Math.max(0,Math.ceil(me/nt)),Be=Math.min(Q,(M+me)/nt);let Fe=0;for(let Xe=fe;Xe<_e;++Xe){const Is=Xe*it-oe;for(let Ye=ge;Ye<Be;++Ye){const no=Ye*nt-me,We=St*Gt+At*Xe+Rt*Ye,os=C*(B-1-Is)+I*(M-1-no)+N*Ot;for(let Me=0;Me<tt;++Me){const Ls=w[We+Lt*Me],Ps=A[os+Me];Fe+=Ls*Ps}}}const ss=ut*Gt+gt*Dt+vt*le+Ct*Ot;b[ss]=Fe}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const ZB={kernelName:Nl,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dilations:a}=s;Bt([o,r],"conv3d");const u=zo(o.shape,r.shape,i,a,c),{filterDepth:d,filterHeight:l,filterWidth:f,dilationDepth:m,dilationHeight:x,dilationWidth:v,padInfo:b}=u,w=b.front,A=b.left,C=b.top,I=new bn(u.outShape,o.dtype),N=e.data.get(o.dataId).values,E=e.data.get(r.dataId).values,B=I.values,M=Ut(o.shape),U=Ut(r.shape);for(let G=0;G<u.batchSize;++G){const q=G*M[0],tt=G*I.strides[0];for(let et=0;et<u.outDepth;++et){const Q=tt+et*I.strides[1],it=et*u.strideDepth-w;for(let nt=0;nt<d;++nt){const Z=it+nt*m;if(Z<0||Z>=u.inDepth)continue;const lt=nt*U[0],ct=q+Z*M[1];for(let ut=0;ut<u.outHeight;++ut){const gt=Q+ut*I.strides[2],vt=ut*u.strideHeight-C;for(let Ct=0;Ct<l;++Ct){const St=vt+Ct*x;if(St<0||St>=u.inHeight)continue;const At=lt+Ct*U[1],Rt=ct+St*M[2];for(let Lt=0;Lt<u.outWidth;++Lt){const Gt=gt+Lt*u.outChannels,Ot=Lt*u.strideWidth-A;for(let Dt=0;Dt<f;++Dt){const oe=Ot+Dt*v;if(oe<0||oe>=u.inWidth)continue;const fe=At+Dt*U[2],_e=Rt+oe*u.inChannels;let le=fe;for(let me=0;me<u.inChannels;++me){const ge=N[_e+me];for(let Be=0;Be<u.outChannels;++Be)B[Gt+Be]+=ge*E[le+Be];le+=u.outChannels}}}}}}}}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const tF={kernelName:Tl,backendName:"cpu",kernelFunc:QB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,pad:c,filterShape:a}=s;Bt([o,r],"conv3dBackpropFilterV2");const u=Ut(o.shape),d=Ut(r.shape),l=zo(o.shape,a,i,1,c),f=l.strideDepth,m=l.strideHeight,x=l.strideWidth,v=l.filterDepth,b=l.filterHeight,w=l.filterWidth,A=new bn(l.filterShape,"float32"),C=A.values,[I,N,E,B]=A.strides,M=e.data.get(r.dataId).values,[U,G,q,tt]=d,et=e.data.get(o.dataId).values,[Q,it,nt,Z]=u,lt=l.padInfo.front,ct=l.padInfo.left,ut=l.padInfo.top;for(let gt=0;gt<v;++gt){const vt=Math.max(0,Math.ceil((lt-gt)/f)),Ct=Math.min(l.outDepth,(l.inDepth+lt-gt)/f),St=gt*I;for(let At=0;At<b;++At){const Rt=Math.max(0,Math.ceil((ut-At)/m)),Lt=Math.min(l.outHeight,(l.inHeight+ut-At)/m),Gt=At*N+St;for(let Ot=0;Ot<w;++Ot){const Dt=Math.max(0,Math.ceil((ct-Ot)/x)),oe=Math.min(l.outWidth,(l.inWidth+ct-Ot)/x),fe=Ot*E+Gt;for(let _e=0;_e<l.inChannels;++_e){const le=_e*B+fe;for(let me=0;me<l.outChannels;++me){let ge=0;for(let Be=0;Be<l.batchSize;++Be){const Fe=Be*Q,ss=Be*U;for(let Xe=vt;Xe<Ct;++Xe){const Ye=(gt+Xe*f-lt)*it+Fe,no=Xe*G+ss;for(let We=Rt;We<Lt;++We){const Me=(At+We*m-ut)*nt+Ye,Ls=We*q+no;for(let Ps=Dt;Ps<oe;++Ps){const Dr=(Ot+Ps*x-ct)*Z+Me,Pn=Ps*tt+Ls;ge+=et[Dr+_e]*M[Pn+me]}}}}C[le+me]=ge}}}}}return e.makeTensorInfo(A.shape,A.dtype,A.values)}const nF={kernelName:Gd,backendName:"cpu",kernelFunc:eF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{pad:i,strides:c,inputShape:a}=s;Bt([o],"conv3dBackpropInputV2");const u=Ut(o.shape),d=Ut(r.shape),l=zo(a,r.shape,c,1,i),f=new bn(l.inShape,"float32"),m=f.values,[x,v,b,w]=f.strides,A=e.data.get(o.dataId).values,[C,I,N,E]=u,B=e.data.get(r.dataId).values,[M,U,G,q]=d,{batchSize:tt,filterDepth:et,filterHeight:Q,filterWidth:it,inChannels:nt,inDepth:Z,inHeight:lt,inWidth:ct,outChannels:ut,outDepth:gt,outHeight:vt,outWidth:Ct,strideDepth:St,strideHeight:At,strideWidth:Rt}=l,Lt=et-1-l.padInfo.front,Gt=Q-1-l.padInfo.top,Ot=it-1-l.padInfo.left;for(let Dt=0;Dt<tt;++Dt)for(let oe=0;oe<nt;++oe)for(let fe=0;fe<Z;++fe){const _e=fe-Lt,le=Math.max(0,Math.ceil(_e/St)),me=Math.min(gt,(et+_e)/St);for(let ge=0;ge<lt;++ge){const Be=ge-Gt,Fe=Math.max(0,Math.ceil(Be/At)),ss=Math.min(vt,(Q+Be)/At);for(let Xe=0;Xe<ct;++Xe){const Is=Xe-Ot,Ye=Math.max(0,Math.ceil(Is/Rt)),no=Math.min(Ct,(it+Is)/Rt);let We=0;for(let os=le;os<me;++os){const Me=os*St-_e;for(let Ls=Fe;Ls<ss;++Ls){const Ps=Ls*At-Be;for(let wo=Ye;wo<no;++wo){const Dr=wo*Rt-Is,Pn=C*Dt+I*os+N*Ls+E*wo,Cc=M*(et-1-Me)+U*(Q-1-Ps)+G*(it-1-Dr)+q*oe;for(let Os=0;Os<ut;++Os){const zs=A[Pn+Os],eh=B[Cc+Os];We+=zs*eh}}}}m[x*Dt+v*fe+b*ge+w*Xe+oe]=We}}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const oF={kernelName:qd,backendName:"cpu",kernelFunc:sF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rF=Ce(ma,n=>Math.cos(n)),iF={kernelName:ma,backendName:"cpu",kernelFunc:rF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF=Ce(ga,n=>Math.cosh(n)),cF={kernelName:ga,backendName:"cpu",kernelFunc:aF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(n){const{inputs:t,backend:e,attrs:s}=n,{image:o,boxes:r,boxInd:i}=t,{cropSize:c,method:a,extrapolationValue:u}=s,[d,l,f,m]=o.shape,x=r.shape[0],[v,b]=c,w=re([x,v,b,m],"float32"),A=e.data.get(r.dataId).values,C=e.data.get(i.dataId).values,I=e.data.get(o.dataId).values,N=Ut(o.shape),E=Ut(w.shape);for(let B=0;B<x;B++){const M=B*4,U=A[M],G=A[M+1],q=A[M+2],tt=A[M+3],et=C[B];if(et>=d)continue;const Q=v>1?(q-U)*(l-1)/(v-1):0,it=b>1?(tt-G)*(f-1)/(b-1):0;for(let nt=0;nt<v;nt++){const Z=v>1?U*(l-1)+nt*Q:.5*(U+q)*(l-1);if(Z<0||Z>l-1){for(let lt=0;lt<b;lt++)for(let ct=0;ct<m;ct++){const ut=ct+lt*E[2]+nt*E[1]+B*E[0];w.values[ut]=u}continue}if(a==="bilinear"){const lt=Math.floor(Z),ct=Math.ceil(Z),ut=Z-lt;for(let gt=0;gt<b;gt++){const vt=b>1?G*(f-1)+gt*it:.5*(G+tt)*(f-1);if(vt<0||vt>f-1){for(let Rt=0;Rt<m;Rt++){const Lt=Rt+gt*E[2]+nt*E[1]+B*E[0];w.values[Lt]=u}continue}const Ct=Math.floor(vt),St=Math.ceil(vt),At=vt-Ct;for(let Rt=0;Rt<m;Rt++){let Lt=Rt+Ct*N[2]+lt*N[1]+et*N[0];const Gt=I[Lt];Lt=Rt+St*N[2]+lt*N[1]+et*N[0];const Ot=I[Lt];Lt=Rt+Ct*N[2]+ct*N[1]+et*N[0];const Dt=I[Lt];Lt=Rt+St*N[2]+ct*N[1]+et*N[0];const oe=I[Lt],fe=Gt+(Ot-Gt)*At,_e=Dt+(oe-Dt)*At;Lt=Rt+gt*E[2]+nt*E[1]+B*E[0],w.values[Lt]=fe+(_e-fe)*ut}}}else for(let lt=0;lt<b;++lt){const ct=b>1?G*(f-1)+lt*it:.5*(G+tt)*(f-1);if(ct<0||ct>f-1){for(let vt=0;vt<m;vt++){const Ct=vt+lt*E[2]+nt*E[1]+B*E[0];w.values[Ct]=u}continue}const ut=Math.round(ct),gt=Math.round(Z);for(let vt=0;vt<m;vt++){const Ct=vt+ut*N[2]+gt*N[1]+et*N[0],St=vt+lt*E[2]+nt*E[1]+B*E[0];w.values[St]=I[Ct]}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const uF={kernelName:jd,backendName:"cpu",kernelFunc:lF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,exclusive:i,reverse:c}=s;Bt(o,"cumprod");const a=ze([r],o.shape.length);let u=o;a!=null&&(u=Fn({inputs:{x:o},backend:e,attrs:{perm:a}}));const d=je(1,o.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);const l=Un(u.dtype,"int32"),f=Bd(pt(u.shape),l),m=e.data.get(u.dataId).values,x=u.shape[u.shape.length-1],v=c?(w,A)=>w+x-A-1:(w,A)=>w+A;for(let w=0;w<m.length;w+=x)for(let A=0;A<x;A++){const C=v(w,A);if(A===0)f[C]=i?1:m[C];else{const I=v(w,A-1);f[C]=i?m[I]*f[I]:m[C]*f[I]}}const b=e.makeTensorInfo(u.shape,l,f);if(a!=null){const w=Wo(a),A=Fn({inputs:{x:b},backend:e,attrs:{perm:w}});return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(u),A}return b}const dF={kernelName:Hd,backendName:"cpu",kernelFunc:hF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,exclusive:i,reverse:c}=s;Bt(o,"cumsum");const a=ze([r],o.shape.length);let u=o;a!=null&&(u=Fn({inputs:{x:o},backend:e,attrs:{perm:a}}));const d=je(1,o.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);const l=Un(u.dtype,"int32"),f=Cn(pt(u.shape),l),m=e.data.get(u.dataId).values,x=u.shape[u.shape.length-1],v=c?(w,A)=>w+x-A-1:(w,A)=>w+A;for(let w=0;w<m.length;w+=x)for(let A=0;A<x;A++){const C=v(w,A);if(A===0)f[C]=i?0:m[C];else{const I=v(w,A-1);f[C]=i?m[I]+f[I]:m[C]+f[I]}}const b=e.makeTensorInfo(u.shape,l,f);if(a!=null){const w=Wo(a),A=Fn({inputs:{x:b},backend:e,attrs:{perm:w}});return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(u),A}return b}const fF={kernelName:El,backendName:"cpu",kernelFunc:pF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:r}=t,{size:i,binaryOutput:c}=s;if(o.shape.length===1){const a=e.data.get(o.dataId).values,u=e.data.get(r.dataId).values,d=lm(a,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,d)}else if(o.shape.length===2){const a=e.bufferSync(o),u=e.bufferSync(r),d=X_(a,u,i,c);return e.makeTensorInfo(d.shape,r.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const gF={kernelName:Dx,backendName:"cpu",kernelFunc:mF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xF(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockSize:r,dataFormat:i}=s;P(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const c=o.shape[0],a=o.shape[1],u=o.shape[2],d=o.shape[3],l=a*r,f=u*r,m=d/(r*r),x=e.data.get(o.dataId).values,v=new Float32Array(c*l*f*m);let b=0;for(let w=0;w<c;++w)for(let A=0;A<l;++A){const C=Math.floor(A/r),I=A%r;for(let N=0;N<f;++N){const E=Math.floor(N/r),B=N%r,M=(I*r+B)*m;for(let U=0;U<m;++U){const q=U+M+d*(E+u*(C+a*w));v[b++]=x[q]}}}return e.makeTensorInfo([c,l,f,m],o.dtype,v)}const yF={kernelName:Kd,backendName:"cpu",kernelFunc:xF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ub(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dilations:a,dimRoundingMode:u}=s;Bt([o,r],"depthwiseConv2DNative");const d=Ut(o.shape),l=Ut(r.shape);let f=a;f==null&&(f=[1,1]),P(In(i,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${f}'`);const m=xn(o.shape,r.shape,i,f,c,u,!0),{filterHeight:x,filterWidth:v,dilationHeight:b,dilationWidth:w,padInfo:A}=m,C=A.left,I=A.top,N=m.outChannels/m.inChannels,E=new bn(m.outShape,o.dtype),B=e.data.get(o.dataId).values,M=e.data.get(r.dataId).values,U=E.values;for(let G=0;G<m.batchSize;++G){const q=G*d[0],tt=G*E.strides[0];for(let et=0;et<m.outHeight;++et){const Q=tt+et*E.strides[1],it=et*m.strideHeight-I;for(let nt=0;nt<x;++nt){const Z=it+nt*b;if(Z<0||Z>=m.inHeight)continue;const lt=nt*l[0],ct=q+Z*d[1];for(let ut=0;ut<m.outWidth;++ut){const gt=Q+ut*E.strides[2],vt=ut*m.strideWidth-C;for(let Ct=0;Ct<v;++Ct){const St=vt+Ct*w;if(St<0||St>=m.inWidth)continue;const At=lt+Ct*l[1],Rt=ct+St*m.inChannels;let Lt=gt,Gt=At;for(let Ot=0;Ot<m.inChannels;++Ot){const Dt=B[Rt+Ot];for(let oe=0;oe<N;++oe)U[Lt+oe]+=Dt*M[Gt+oe];Lt+=N,Gt+=N}}}}}}return e.makeTensorInfo(E.shape,E.dtype,E.values)}const vF={kernelName:Rl,backendName:"cpu",kernelFunc:Ub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,dilations:c,pad:a,dimRoundingMode:u,filterShape:d}=s;Bt([o,r],"depthwiseConv2dNativeBackpropFilter");const l=xn(o.shape,d,i,c,a,u,!0),{strideHeight:f,strideWidth:m,filterHeight:x,filterWidth:v}=l,b=new bn(l.filterShape,"float32"),w=l.padInfo.left,A=l.padInfo.top,C=l.outChannels/l.inChannels,I=e.data.get(o.dataId).values,N=new bn(o.shape,o.dtype,I),E=e.data.get(r.dataId).values,B=new bn(r.shape,r.dtype,E);for(let M=0;M<x;++M){const U=Math.max(0,Math.ceil((A-M)/f)),G=Math.min(l.outHeight,(l.inHeight+A-M)/f);for(let q=0;q<v;++q){const tt=Math.max(0,Math.ceil((w-q)/m)),et=Math.min(l.outWidth,(l.inWidth+w-q)/m);for(let Q=0;Q<l.outChannels;++Q){const it=Math.trunc(Q/C),nt=Q%C;let Z=0;for(let lt=0;lt<l.batchSize;++lt)for(let ct=U;ct<G;++ct){const ut=M+ct*f-A;for(let gt=tt;gt<et;++gt){const vt=q+gt*m-w;Z+=N.get(lt,ut,vt,it)*B.get(lt,ct,gt,Q)}}b.set(Z,M,q,it,nt)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const bF={kernelName:Xd,backendName:"cpu",kernelFunc:_F};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{strides:i,dilations:c,pad:a,dimRoundingMode:u,inputShape:d}=s;Bt([o,r],"depthwiseConv2DNativeBackpropInput");const l=Ut(o.shape),f=Ut(r.shape),m=xn(d,r.shape,i,c,a,u,!0),x=new bn(m.inShape,"float32"),v=x.values,[b,w,A]=x.strides,C=e.data.get(o.dataId).values,[I,N,E]=l,B=e.data.get(r.dataId).values,[M,U,G]=f,{batchSize:q,filterHeight:tt,filterWidth:et,inChannels:Q,inHeight:it,inWidth:nt,outChannels:Z,outHeight:lt,outWidth:ct,strideHeight:ut,strideWidth:gt}=m,vt=tt-1-m.padInfo.top,Ct=et-1-m.padInfo.left,St=Z/Q;for(let At=0;At<q;++At)for(let Rt=0;Rt<Q;++Rt)for(let Lt=0;Lt<it;++Lt){const Gt=Lt-vt,Ot=Math.max(0,Math.ceil(Gt/ut)),Dt=Math.min(lt,(tt+Gt)/ut);for(let oe=0;oe<nt;++oe){const fe=oe-Ct,_e=Math.max(0,Math.ceil(fe/gt)),le=Math.min(ct,(et+fe)/gt);let me=0;for(let ge=Ot;ge<Dt;++ge){const Be=ge*ut-Gt;for(let Fe=_e;Fe<le;++Fe){const ss=Fe*gt-fe,Xe=I*At+N*ge+E*Fe,Is=M*(tt-1-Be)+U*(et-1-ss)+G*Rt;for(let Ye=0;Ye<St;++Ye){const no=Rt*St+Ye,We=C[Xe+no],os=B[Is+Ye];me+=We*os}}}v[b*At+w*Lt+A*oe+Rt]=me}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const CF={kernelName:Yd,backendName:"cpu",kernelFunc:wF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n){const{inputs:t,backend:e}=n,{x:s}=t,o=pt(s.shape),r=e.data.get(s.dataId).values,i=re([o,o],s.dtype),c=i.values;for(let u=0;u<r.length;u++)c[u*o+u]=r[u];const a=[...s.shape,...s.shape];return e.makeTensorInfo(a,i.dtype,i.values)}const AF={kernelName:Bx,backendName:"cpu",kernelFunc:IF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:Dl,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o}=n,{strides:r,pad:i,dilations:c}=e,a=t,u=a.data.get(s.dataId).values,d=s.shape.length,l=a.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:x,inWidth:v,inChannels:b,outHeight:w,outWidth:A,padInfo:C,strideHeight:I,strideWidth:N,filterHeight:E,filterWidth:B,dilationHeight:M,dilationWidth:U,outShape:G}=ec(s.shape,o.shape,r,i,"NHWC",c),q=pt(G),tt=G.length,et=Sn(s.dtype,q);for(let it=0;it<m;++it)for(let nt=0;nt<w;++nt){const Z=nt*I-C.top;for(let lt=0;lt<A;++lt){const ct=lt*N-C.left;for(let ut=0;ut<b;++ut){let gt=Number.MIN_SAFE_INTEGER;for(let Ct=0;Ct<E;++Ct){const St=Z+Ct*M;if(St>=0&&St<x)for(let At=0;At<B;++At){const Rt=ct+At*U;if(Rt>=0&&Rt<v){const Lt=Ks([it,St,Rt,ut],d,Ut(s.shape)),Gt=Ks([Ct,At,ut],f,Ut(o.shape)),Ot=u[Lt]+l[Gt];Ot>gt&&(gt=Ot)}}}const vt=Ks([it,nt,lt,ut],tt,Ut(G));et[vt]=gt}}}return{dataId:a.write(Ar(et,s.dtype),G,s.dtype),shape:G,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:qh,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:c,dilations:a}=e,u=t,d=Es(s.shape,u.data.get(s.dataId).values),l=Es(o.shape,u.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:x,inChannels:v,outHeight:b,outWidth:w,padInfo:A,strideHeight:C,strideWidth:I,filterHeight:N,filterWidth:E,dilationHeight:B,dilationWidth:M,outShape:U}=ec(s.shape,o.shape,i,c,"NHWC",a);P(r.rank===U.length,()=>`Error in ${qh}, dy must have the same rank as output ${U.length}, but got ${r.rank}`);const G=Es(U,u.data.get(r.dataId).values),q=$x(o.shape,o.dtype);for(let et=0;et<f;++et)for(let Q=0;Q<b;++Q){const it=Q*C-A.top;for(let nt=0;nt<w;++nt){const Z=nt*I-A.left;for(let lt=0;lt<v;++lt){let ct=Number.MIN_SAFE_INTEGER,ut=0,gt=0;for(let vt=0;vt<N;++vt){const Ct=it+vt*B;if(Ct>=0&&Ct<m)for(let St=0;St<E;++St){const At=Z+St*M;if(At>=0&&At<x){const Rt=d[et][Ct][At][lt]+l[vt][St][lt];Rt>ct&&(ct=Rt,ut=vt,gt=St)}}}q[ut][gt][lt]+=G[et][Q][nt][lt]}}}return{dataId:u.write(Ar(q,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF={kernelName:Gh,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:c,dilations:a}=e,u=t,d=Es(s.shape,u.data.get(s.dataId).values),l=Es(o.shape,u.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:x,inChannels:v,outHeight:b,outWidth:w,padInfo:A,strideHeight:C,strideWidth:I,filterHeight:N,filterWidth:E,dilationHeight:B,dilationWidth:M,outShape:U}=ec(s.shape,o.shape,i,c,"NHWC",a);P(r.rank===U.length,()=>`Error in ${Gh}, dy must have the same rank as output ${U.length}, but got ${r.rank}`);const G=Es(U,u.data.get(r.dataId).values),q=$x(s.shape,s.dtype);for(let et=0;et<f;++et)for(let Q=0;Q<b;++Q){const it=Q*C-A.top;for(let nt=0;nt<w;++nt){const Z=nt*I-A.left;for(let lt=0;lt<v;++lt){let ct=Number.MIN_SAFE_INTEGER,ut=it<0?0:it,gt=Z<0?0:Z;for(let vt=0;vt<N;++vt){const Ct=it+vt*B;if(Ct>=0&&Ct<m)for(let St=0;St<E;++St){const At=Z+St*M;if(At>=0&&At<x){const Rt=d[et][Ct][At][lt]+l[vt][St][lt];Rt>ct&&(ct=Rt,ut=Ct,gt=At)}}}q[et][ut][gt][lt]+=G[et][Q][nt][lt]}}}return{dataId:u.write(Ar(q,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gc(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;Bt(o,"sum");let c;o.dtype==="bool"?c=Lo({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):c=eo({inputs:{x:o},backend:e});const a=c.shape.length,u=ie(r,c.shape),d=ze(u,a);let l=u,f=c;d!=null&&(f=Fn({inputs:{x:c},backend:e,attrs:{perm:d}}),l=je(l.length,a)),yn("sum",l,f.shape.length);const[m,x]=pn(f.shape,l),v=Un(f.dtype,"int32");let b=hl(e,m,v);const w=pt(x),A=e.data.get(b.dataId).values,C=e.data.get(f.dataId).values;for(let I=0;I<A.length;++I){const N=I*w;let E=0;for(let B=0;B<w;++B)E+=C[N+B];A[I]=E}if(i){const I=He(b.shape,u),N=b;b=Te({inputs:{x:b},backend:e,attrs:{shape:I}}),e.disposeIntermediateTensorInfo(N)}return e.disposeIntermediateTensorInfo(c),d!=null&&e.disposeIntermediateTensorInfo(f),b}const NF={kernelName:du,backendName:"cpu",kernelFunc:gc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(n){const{inputs:t,backend:e,attrs:s}=n,{equation:o}=s,r=t,{allDims:i,summedDims:c,idDims:a}=Ef(o,r.length);Df(i.length,a,r);const{path:u,steps:d}=Bf(c,a),l=d.length;let f=null,m=i.length;const x=[];for(let v=0;v<l;++v){for(const b of d[v]){const{permutationIndices:w,expandDims:A}=Rf(m,a[b]);let C;Ff(w)?C=r[b]:(C=Fn({inputs:{x:r[b]},backend:e,attrs:{perm:w}}),x.push(C));const I=C.shape.slice();for(let N=0;N<A.length;++N)I.splice(A[N],0,1);ve(C.shape,I)||(C=Te({inputs:{x:C},backend:e,attrs:{shape:I}}),x.push(C)),f===null?f=C:(f=ju({inputs:{a:C,b:f},backend:e}),x.push(f))}v<l-1&&(u[v]>=0&&(f=gc({inputs:{x:f},backend:e,attrs:{axis:u[v]-(i.length-m),keepDims:!1}}),x.push(f)),m--)}for(const v of x)v!==f&&e.disposeIntermediateTensorInfo(v);return f}const EF={kernelName:Fx,backendName:"cpu",kernelFunc:TF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(n){const{inputs:t,backend:e}=n,{dy:s,y:o}=t;Bt([s,o],"eluGrad");const r=new Float32Array(pt(o.shape)),i=e.data.get(o.dataId).values,c=e.data.get(s.dataId).values;for(let a=0;a<i.length;++a){const u=i[a];u>=1?r[a]=c[a]:r[a]=c[a]*(u+1)}return e.makeTensorInfo(o.shape,"float32",r)}const DF={kernelName:Jd,backendName:"cpu",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=If,FF=Af,MF=kf,VF=$f,LF=Sf,PF=Nf,OF=Ce(va,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+BF*e);return t*(1-((((PF*s+LF)*s+VF)*s+MF)*s+FF)*s*Math.exp(-e*e))}),zF={kernelName:va,backendName:"cpu",kernelFunc:OF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(n){const{inputs:t,backend:e,attrs:s}=n,{input:o}=t,{dim:r}=s,i=o.shape.length,c=o.shape.slice();let a=r;return r<0&&(P(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),a=i+r+1),c.splice(a,0,1),Te({inputs:{x:o},backend:e,attrs:{shape:c}})}const WF={kernelName:Fl,backendName:"cpu",kernelFunc:pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF=Qe((n,t)=>n/t),mm=fn(xa,UF),wd={kernelName:xa,backendName:"cpu",kernelFunc:mm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gb(n,t,e){const s=n.shape,o=s[0],r=s[1],i=e.data.get(n.dataId),c=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,u=[o,r],d=pt(u),l=gn("float32",d),f=gn("float32",d);for(let b=0;b<o;b++){const w=Cr({inputs:{x:c},backend:e,attrs:{begin:[b,0],size:[1,r]}}),A=Cr({inputs:{x:a},backend:e,attrs:{begin:[b,0],size:[1,r]}}),C=On({inputs:{real:w,imag:A},backend:e}),{real:I,imag:N}=GF(C,t,e),E=go(I,N);for(let B=0;B<r;B++){const M=Tf(E,B);l[b*r+B]=M.real,f[b*r+B]=M.imag}e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(A),e.disposeIntermediateTensorInfo(C)}const m=e.makeTensorInfo(u,"float32",l),x=e.makeTensorInfo(u,"float32",f),v=On({inputs:{real:m,imag:x},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),v}function GF(n,t,e){const s=pt(n.shape),o=e.data.get(n.dataId),r=e.data.get(o.complexTensorInfos.real.dataId).values,i=e.data.get(o.complexTensorInfos.imag.dataId).values;if(qF(s)){const c=Cd(r,i,s,t,e),a=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(a,"float32",c.real),d=e.makeTensorInfo(a,"float32",c.imag),l=e.makeTensorInfo([],"float32",Oo(s,"float32")),f=eo({inputs:{x:l},backend:e}),m=wd.kernelFunc({inputs:{a:u,b:l},backend:e}),x=wd.kernelFunc({inputs:{a:d,b:f},backend:e}),v=e.data.get(m.dataId).values,b=e.data.get(x.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),{real:v,imag:b}}return c}else{const c=go(r,i),a=HF(c,s,t);return pv(a)}}function qF(n){return(n&n-1)===0}function Cd(n,t,e,s,o){if(e===1)return{real:n,imag:t};const r=go(n,t),i=e/2,c=fv(r),a=c.real,u=c.imag,d=[a.length],l=o.makeTensorInfo(d,"float32",a),f=o.makeTensorInfo(d,"float32",u),m=On({inputs:{real:l,imag:f},backend:o}),x=mv(r),v=x.real,b=x.imag,w=[v.length],A=o.makeTensorInfo(w,"float32",v),C=o.makeTensorInfo(w,"float32",b),I=On({inputs:{real:A,imag:C},backend:o}),N=Cd(a,u,i,s,o),E=N.real,B=N.imag,M=[E.length],U=o.makeTensorInfo(M,"float32",E),G=o.makeTensorInfo(M,"float32",B),q=On({inputs:{real:U,imag:G},backend:o}),tt=Cd(v,b,i,s,o),et=tt.real,Q=tt.imag,it=[et.length],nt=o.makeTensorInfo(it,"float32",et),Z=o.makeTensorInfo(it,"float32",Q),lt=On({inputs:{real:nt,imag:Z},backend:o}),ct=xv(e,s),ut=[ct.real.length],gt=o.makeTensorInfo(ut,"float32",ct.real),vt=o.makeTensorInfo(ut,"float32",ct.imag),Ct=On({inputs:{real:gt,imag:vt},backend:o}),St=ju({inputs:{a:Ct,b:lt},backend:o}),At=ui({inputs:{a:q,b:St},backend:o}),Rt=pm({inputs:{a:q,b:St},backend:o}),Lt=wr({inputs:{input:At},backend:o}),Gt=wr({inputs:{input:Rt},backend:o}),Ot=hi({inputs:{input:At},backend:o}),Dt=hi({inputs:{input:Rt},backend:o}),oe=di({inputs:[Lt,Gt],backend:o,attrs:{axis:0}}),fe=di({inputs:[Ot,Dt],backend:o,attrs:{axis:0}}),_e=o.data.get(oe.dataId).values,le=o.data.get(fe.dataId).values;return o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(I),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(lt),o.disposeIntermediateTensorInfo(gt),o.disposeIntermediateTensorInfo(vt),o.disposeIntermediateTensorInfo(Ct),o.disposeIntermediateTensorInfo(St),o.disposeIntermediateTensorInfo(At),o.disposeIntermediateTensorInfo(Rt),o.disposeIntermediateTensorInfo(Lt),o.disposeIntermediateTensorInfo(Ot),o.disposeIntermediateTensorInfo(Gt),o.disposeIntermediateTensorInfo(Dt),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(fe),{real:_e,imag:le}}function HF(n,t,e){const s=new Float32Array(t*2);for(let o=0;o<t;o++){let r=0,i=0;for(let c=0;c<t;c++){const a=yv(o*c,t,e),u=Tf(n,c);r+=u.real*a.real-u.imag*a.imag,i+=u.real*a.imag+u.imag*a.real}e&&(r/=t,i/=t),gv(s,r,i,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(n){const{inputs:t,backend:e}=n,{input:s}=t,o=pt(s.shape),r=s.shape[s.shape.length-1],i=o/r,c=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),a=Gb(c,!1,e),u=Te({inputs:{x:a},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(a),u}const KF={kernelName:Zd,backendName:"cpu",kernelFunc:jF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gm(n){const{backend:t,attrs:e}=n,{shape:s,value:o,dtype:r}=e,i=r||sa(o),c=Sn(i,pt(s));return YF(c,o,i),t.makeTensorInfo(s,i,c)}const XF={kernelName:Qd,backendName:"cpu",kernelFunc:gm};function YF(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF={kernelName:tp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,o=e,r=gn(s.dtype,pt(s.shape)),[i,c,a,u]=s.shape,d=o.data.get(s.dataId).values;for(let f=0;f<i;f++){const m=f*a*c*u;for(let x=0;x<c;x++){const v=x*(a*u);for(let b=0;b<a;b++){const w=b*u;for(let A=0;A<u;A++){const C=Math.round(a-b-1),I=m+v+w+A;let N=d[I];if(C>=0&&C<a){const E=C*u,B=m+v+E+A;N=d[B]}r[I]=N}}}}return{dataId:o.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF=Qe((n,t)=>Math.floor(n/t)),QF=fn(Ca,ZF,null,"int32"),tM={kernelName:Ca,backendName:"cpu",kernelFunc:QF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:c}=t,{strides:a,pad:u,dataFormat:d,dilations:l,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=s;let v=Wb({inputs:{x:o,filter:r},backend:e,attrs:{strides:a,pad:u,dataFormat:d,dilations:l,dimRoundingMode:f}});if(i){const b=v;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const w=Te({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});v=ui({inputs:{a:v,b:w},backend:e}),e.disposeIntermediateTensorInfo(w)}else v=ui({inputs:{a:v,b:i},backend:e});e.disposeIntermediateTensorInfo(b)}if(m){const b=v;if(d==="NCHW"&&m==="prelu"&&c.shape.length===1&&c.shape[0]!==1){const w=Te({inputs:{x:c},backend:e,attrs:{shape:[c.shape[0],1,1]}});v=dl(e,v,m,w,x),e.disposeIntermediateTensorInfo(w)}else v=dl(e,v,m,c,x);e.disposeIntermediateTensorInfo(b)}return v}const nM={kernelName:Kc,backendName:"cpu",kernelFunc:eM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:c}=t,{strides:a,pad:u,dataFormat:d,dilations:l,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=s;let v=Ub({inputs:{x:o,filter:r},backend:e,attrs:{strides:a,pad:u,dataFormat:d,dilations:l,dimRoundingMode:f}});if(i){const b=v;v=ui({inputs:{a:v,b:i},backend:e}),e.disposeIntermediateTensorInfo(b)}if(m){const b=v;v=dl(e,v,m,c,x),e.disposeIntermediateTensorInfo(b)}return v}const oM={kernelName:Ux,backendName:"cpu",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n){const{inputs:t,backend:e}=n,{params:s,indices:o}=t,r=pt(s.shape),i=o.shape,c=i[i.length-1],[a,u,d,l]=Ep(s,o);if(u===0)return e.makeTensorInfo(a,s.dtype,[]);const f=e.data.get(o.dataId).values,m=e.bufferSync(s),x=ob(f,m,s.dtype,u,c,d,l,s.shape,r);return e.makeTensorInfo(a,s.dtype,x.values)}const iM={kernelName:Mx,backendName:"cpu",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,indices:r}=t,{axis:i,batchDims:c}=s;Bt([o,r],"gatherV2");const a=ie(i,o.shape)[0],u=e.data.get(r.dataId).values,d=o.shape[a];for(let I=0;I<u.length;++I){const N=u[I];P(N<=d-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${d-1}]`)}let l=c;c==null&&(l=0);const f=pt(r.shape),m=Vf(o,r,a,l),x=Te({inputs:{x:o},backend:e,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),v=Te({inputs:{x:r},backend:e,attrs:{shape:[m.batchSize,f/m.batchSize]}}),b=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],w=e.bufferSync(v),A=e.bufferSync(x),C=rb(A,w,b);return e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),e.makeTensorInfo(m.outputShape,C.dtype,C.values)}const cM={kernelName:Vl,backendName:"cpu",kernelFunc:aM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n){const{inputs:t,backend:e}=n,{input:s}=t,o=pt(s.shape),r=s.shape[s.shape.length-1],i=o/r,c=Te({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),a=Gb(c,!0,e),u=Te({inputs:{x:a},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(a),u}const uM={kernelName:ep,backendName:"cpu",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=Ce(ka,n=>Number.isFinite(n)?1:0,"bool"),dM={kernelName:ka,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=Ce($a,n=>Math.abs(n)===1/0?1:0,"bool"),fM={kernelName:$a,backendName:"cpu",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=Ce(Sa,n=>Number.isNaN(n)?1:0,"bool"),gM={kernelName:Sa,backendName:"cpu",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n){const{backend:t,attrs:e}=n,{start:s,stop:o,num:r}=e,i=ub(s,o,r);return t.makeTensorInfo([i.length],"float32",i)}const yM={kernelName:Vx,backendName:"cpu",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM=Ce(Ta,n=>Math.log1p(n)),_M={kernelName:Ta,backendName:"cpu",kernelFunc:vM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM=Qe((n,t)=>n&&t),wM=fn(Wl,bM,null,"bool"),CM={kernelName:Wl,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=Ce(Ul,n=>n?0:1,"bool"),AM={kernelName:Ul,backendName:"cpu",kernelFunc:IM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=Qe((n,t)=>n||t),$M=fn(Gl,kM,null,"bool"),SM={kernelName:Gl,backendName:"cpu",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{depthRadius:r,bias:i,alpha:c,beta:a}=s;Bt(o,"LRN");const u=o.shape[3],d=u-1,l=e.data.get(o.dataId).values,f=pt(o.shape),m=new Float32Array(f);function x(v){const b=v%u;let w=v-b+Math.max(0,b-r);const A=v-b+Math.min(b+r,d);let C=0;for(;w<=A;w++){const I=l[w];C+=I*I}return C}for(let v=0;v<f;v++){const b=x(v),w=l[v]*Math.pow(i+c*b,-a);m[v]=w}return e.makeTensorInfo(o.shape,o.dtype,m)}const TM={kernelName:ql,backendName:"cpu",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,y:r,dy:i}=t,{depthRadius:c,bias:a,alpha:u,beta:d}=s;Bt(i,"LRNGrad");const l=pt(i.shape),f=i.shape[3],m=e.data.get(i.dataId).values,x=e.data.get(o.dataId).values,v=e.data.get(r.dataId).values,b=new Float32Array(l),w=l;for(let A=0;A<w;A++){const C=A%f,I=A-C+Math.max(0,C-c),N=A-C+Math.min(f,C+c+1);let E=0;for(let B=I;B<N;B++)E+=Math.pow(x[B],2);E=u*E+a;for(let B=I;B<N;B++){let M=-2*u*d*x[B]*v[A]/E;A===B&&(M+=Math.pow(E,-d)),M*=m[A],b[B]+=M}}return e.makeTensorInfo(i.shape,o.dtype,b)}const RM={kernelName:sp,backendName:"cpu",kernelFunc:EM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reductionIndices:r,keepDims:i}=s,c=e;let a=o.shape;const u=a.length,d=ie(r,a);let l=d;const f=ze(l,u);let m=c.data.get(o.dataId).values;if(f!=null){const I=new Array(u);for(let N=0;N<I.length;N++)I[N]=a[f[N]];m=hm(m,a,o.dtype,f,I),l=je(l.length,u),a=I}Bt(o,"max"),yn("max",l,u);const[x,v]=pn(a,l),b=pt(v),w=db(m,b,x,o.dtype),A=c.write(w,x,o.dtype);let C=x;return i&&(C=He(x,d)),{dataId:A,shape:C,dtype:o.dtype}}const DM={kernelName:Hl,backendName:"cpu",kernelFunc:qb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;Bt(o,"maxPool");const{filterSize:r,strides:i,pad:c,dimRoundingMode:a}=s,u=1;P(In(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const d=_s(o.shape,r,i,u,c,a);let l;if(d.filterWidth===1&&d.filterHeight===1&&ve(d.inShape,d.outShape))l=eo({inputs:{x:o},backend:e});else{const f=e.data.get(o.dataId).values,m=Ut(o.shape),x=fm(f,o.shape,o.dtype,m,d,"max");l=e.makeTensorInfo(d.outShape,o.dtype,x.values)}return l}const FM={kernelName:jl,backendName:"cpu",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:r,strides:i,pad:c,dimRoundingMode:a,dataFormat:u}=s;Bt(o,"maxPool3d");const d=xo(o.shape,r,i,1,c,a,u),l=e.data.get(o.dataId).values,f=zb(l,o.shape,o.dtype,Ut(o.shape),d,"max");return e.makeTensorInfo(f.shape,"float32",f.values)}const VM={kernelName:Kl,backendName:"cpu",kernelFunc:MM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,{filterSize:i,strides:c,pad:a,dimRoundingMode:u}=s;Bt([o,r],"maxPool3DGrad");const d=xo(r.shape,i,c,1,a,u),l=e.bufferSync(r),f=AB(l,d),m=d.strideDepth,x=d.strideHeight,v=d.strideWidth,b=d.dilationDepth,w=d.dilationHeight,A=d.dilationWidth,C=d.effectiveFilterDepth,I=d.effectiveFilterHeight,N=d.effectiveFilterWidth,E=C-1-d.padInfo.front,B=N-1-d.padInfo.left,M=I-1-d.padInfo.top,U=re(r.shape,"float32"),G=e.bufferSync(o);for(let q=0;q<d.batchSize;++q)for(let tt=0;tt<d.inChannels;++tt)for(let et=0;et<d.inDepth;++et)for(let Q=0;Q<d.inHeight;++Q)for(let it=0;it<d.inWidth;++it){const nt=et-E,Z=Q-M,lt=it-B;let ct=0;for(let ut=0;ut<C;ut+=b){const gt=(nt+ut)/m;if(!(gt<0||gt>=d.outDepth||Math.floor(gt)!==gt))for(let vt=0;vt<I;vt+=w){const Ct=(Z+vt)/x;if(!(Ct<0||Ct>=d.outHeight||Math.floor(Ct)!==Ct))for(let St=0;St<N;St+=A){const At=(lt+St)/v;if(At<0||At>=d.outWidth||Math.floor(At)!==At)continue;const Rt=C*I*N-1-f.get(q,gt,Ct,At,tt),Lt=ut*I*N+vt*N+St,Gt=Rt===Lt?1:0;if(Gt===0)continue;ct+=G.get(q,gt,Ct,At,tt)*Gt}}}U.set(ct,q,et,Q,it,tt)}return e.makeTensorInfo(U.shape,U.dtype,U.values)}const PM={kernelName:rp,backendName:"cpu",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r,output:i}=t,c=r;Bt([r,i],"maxPoolGrad");const{filterSize:a,strides:u,pad:d,dimRoundingMode:l}=s,f=_s(c.shape,a,u,1,d,l),m=e.data.get(c.dataId).values,x=re(f.outShape,c.dtype,Ob(m,c.shape,c.dtype,f).values),v=f.strideHeight,b=f.strideWidth,w=f.dilationHeight,A=f.dilationWidth,C=f.effectiveFilterHeight,I=f.effectiveFilterWidth,N=I-1-f.padInfo.left,E=C-1-f.padInfo.top,B=re(c.shape,"float32"),M=e.data.get(o.dataId).values,U=re(o.shape,"float32",M);for(let G=0;G<f.batchSize;++G)for(let q=0;q<f.inChannels;++q)for(let tt=0;tt<f.inHeight;++tt)for(let et=0;et<f.inWidth;++et){const Q=tt-E,it=et-N;let nt=0;for(let Z=0;Z<C;Z+=w){const lt=(Q+Z)/v;if(!(lt<0||lt>=f.outHeight||Math.floor(lt)!==lt))for(let ct=0;ct<I;ct+=A){const ut=(it+ct)/b;if(ut<0||ut>=f.outWidth||Math.floor(ut)!==ut)continue;const gt=C*I-1-x.get(G,lt,ut,q),vt=Z*I+ct,Ct=gt===vt?1:0;if(Ct===0)continue;nt+=U.get(G,lt,ut,q)*Ct}}B.set(nt,G,tt,et,q)}return e.makeTensorInfo(B.shape,B.dtype,B.values)}const zM={kernelName:op,backendName:"cpu",kernelFunc:OM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n,t,e,s,o){const r=Ut(t),i=fm(n,t,e,r,o,"max"),c=Ob(n,t,e,o,!0,s);return[i.values,c.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM={kernelName:Lx,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:c}=t,a=e;Bt(s,"MaxPoolWithArgmax");const u=a.data.get(s.dataId).values,d=_s(s.shape,o,r,[1,1],i),[l,f]=WM(u,s.shape,s.dtype,c,d),m=a.write(l,d.outShape,s.dtype),x=a.write(f,d.outShape,s.dtype);return[{dataId:m,shape:d.outShape,dtype:s.dtype},{dataId:x,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s,c=ie(r,o.shape),u=pn(o.shape,c)[1],d=pt(u),l=[],f=e.makeTensorInfo([],"float32",new Float32Array([d]));l.push(f);const m=Lo({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});l.push(m);const x=mm({inputs:{a:m,b:f},backend:e});l.push(x);const v=gc({inputs:{x},backend:e,attrs:{axis:r,keepDims:i}});return l.forEach(b=>e.disposeIntermediateTensorInfo(b)),v}const qM={kernelName:Xl,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;Bt(o,"min");const c=ie(r,o.shape);let a=c;const u=ze(a,o.shape.length);let d=o;u!=null&&(d=Fn({inputs:{x:o},backend:e,attrs:{perm:u}}),a=je(a.length,o.shape.length)),yn("min",a,d.shape.length);const[l,f]=pn(d.shape,a),m=pt(f),x=Cn(pt(l),d.dtype),v=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const A=w*m;let C=v[A];for(let I=0;I<m;++I){const N=v[A+I];(Number.isNaN(N)||N<C)&&(C=N)}x[w]=C}u!=null&&e.disposeIntermediateTensorInfo(d);const b=e.makeTensorInfo(l,d.dtype,x);if(i){const w=He(l,c),A=Te({inputs:{x:b},backend:e,attrs:{shape:w}});return e.disposeIntermediateTensorInfo(b),A}return b}const jM={kernelName:Yl,backendName:"cpu",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:r,mode:i}=s;Bt(o,"mirrorPad");const c=r.map((C,I)=>C[0]+o.shape[I]+C[1]),a=r.map(C=>C[0]),u=r.map((C,I)=>C[0]+o.shape[I]),d=i==="reflect"?0:1,l=e.data.get(o.dataId).values,f=o.shape.length,m=Ut(o.shape),x=pt(c),v=c.length,b=Ut(c),w=gn(o.dtype,x);for(let C=0;C<x;C++){let I=oa(C,v,b);for(let E=0;E<v;E++)I[E]<a[E]?I[E]=a[E]*2-I[E]-d:I[E]>=u[E]&&(I[E]=(u[E]-1)*2-I[E]+d);I=I.map((E,B)=>E-a[B]);const N=Ks(I,f,m);w[C]=l[N]}return{dataId:e.write(w,c,o.dtype),shape:c,dtype:o.dtype}}const XM={kernelName:Jl,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM=Qe((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),JM=fn(Da,YM),ZM={kernelName:Da,backendName:"cpu",kernelFunc:JM};var Hb={exports:{}};(function(n){(function(t,e,s){function o(a){var u=this,d=c();u.next=function(){var l=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=l-(u.c=l|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(a),u.s0<0&&(u.s0+=1),u.s1-=d(a),u.s1<0&&(u.s1+=1),u.s2-=d(a),u.s2<0&&(u.s2+=1),d=null}function r(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function i(a,u){var d=new o(a),l=u&&u.state,f=d.next;return f.int32=function(){return d.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,l&&(typeof l=="object"&&r(l,d),f.state=function(){return r(d,{})}),f}function c(){var a=4022871197,u=function(d){d=d.toString();for(var l=0;l<d.length;l++){a+=d.charCodeAt(l);var f=.02519603282416938*a;a=f>>>0,f-=a,f*=a,a=f>>>0,f-=a,a+=f*4294967296}return(a>>>0)*23283064365386963e-26};return u}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(dn,n,!1)})(Hb);var jb={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var l=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^l^l>>>8},c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(dn,n,!1)})(jb);var Kb={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(l^l<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:u+=c;for(var d=0;d<u.length+64;d++)a.x^=u.charCodeAt(d)|0,d==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function r(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(dn,n,!1)})(Kb);var Xb={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.x,l=a.i,f,m;return f=d[l],f^=f>>>7,m=f^f<<24,f=d[l+1&7],m^=f^f>>>10,f=d[l+3&7],m^=f^f>>>3,f=d[l+4&7],m^=f^f<<7,f=d[l+7&7],f=f^f<<13,m^=f^f<<9,d[l]=m,a.i=l+1&7,m};function u(d,l){var f,m=[];if(l===(l|0))m[0]=l;else for(l=""+l,f=0;f<l.length;++f)m[f&7]=m[f&7]<<15^l.charCodeAt(f)+m[f+1&7]<<13;for(;m.length<8;)m.push(0);for(f=0;f<8&&m[f]===0;++f);for(f==8?m[7]=-1:m[f],d.x=m,d.i=0,f=256;f>0;--f)d.next()}u(a,c)}function r(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.x&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(dn,n,!1)})(Xb);var Yb={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this;a.next=function(){var d=a.w,l=a.X,f=a.i,m,x;return a.w=d=d+1640531527|0,x=l[f+34&127],m=l[f=f+1&127],x^=x<<13,m^=m<<17,x^=x>>>15,m^=m>>>12,x=l[f]=x^m,a.i=f,x+(d^d>>>16)|0};function u(d,l){var f,m,x,v,b,w=[],A=128;for(l===(l|0)?(m=l,l=null):(l=l+"\0",m=0,A=Math.max(A,l.length)),x=0,v=-32;v<A;++v)l&&(m^=l.charCodeAt((v+32)%l.length)),v===0&&(b=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,v>=0&&(b=b+1640531527|0,f=w[v&127]^=m+b,x=f==0?x+1:0);for(x>=128&&(w[(l&&l.length||0)&127]=-1),x=127,v=4*128;v>0;--v)m=w[x+34&127],f=w[x=x+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,w[x]=m^f;d.w=b,d.X=w,d.i=x}u(a,c)}function r(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(d.X&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(dn,n,!1)})(Yb);var Jb={exports:{}};(function(n){(function(t,e,s){function o(c){var a=this,u="";a.next=function(){var l=a.b,f=a.c,m=a.d,x=a.a;return l=l<<25^l>>>7^f,f=f-m|0,m=m<<24^m>>>8^x,x=x-l|0,a.b=l=l<<20^l>>>12^f,a.c=f=f-m|0,a.d=m<<16^f>>>16^x,a.a=x-l|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):u+=c;for(var d=0;d<u.length+20;d++)a.b^=u.charCodeAt(d)|0,a.next()}function r(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var u=new o(c),d=a&&a.state,l=function(){return(u.next()>>>0)/4294967296};return l.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},l.int32=u.next,l.quick=l,d&&(typeof d=="object"&&r(d,u),l.state=function(){return r(u,{})}),l}e&&e.exports?e.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(dn,n,!1)})(Jb);var Zb={exports:{}};(function(n){(function(t,e){var s=this,o=256,r=6,i=52,c="random",a=e.pow(o,r),u=e.pow(2,i),d=u*2,l=o-1,f;function m(I,N,E){var B=[];N=N==!0?{entropy:!0}:N||{};var M=w(b(N.entropy?[I,C(t)]:I??A(),3),B),U=new x(B),G=function(){for(var q=U.g(r),tt=a,et=0;q<u;)q=(q+et)*o,tt*=o,et=U.g(1);for(;q>=d;)q/=2,tt/=2,et>>>=1;return(q+et)/tt};return G.int32=function(){return U.g(4)|0},G.quick=function(){return U.g(4)/4294967296},G.double=G,w(C(U.S),t),(N.pass||E||function(q,tt,et,Q){return Q&&(Q.S&&v(Q,U),q.state=function(){return v(U,{})}),et?(e[c]=q,tt):q})(G,M,"global"in N?N.global:this==e,N.state)}e["seed"+c]=m;function x(I){var N,E=I.length,B=this,M=0,U=B.i=B.j=0,G=B.S=[];for(E||(I=[E++]);M<o;)G[M]=M++;for(M=0;M<o;M++)G[M]=G[U=l&U+I[M%E]+(N=G[M])],G[U]=N;(B.g=function(q){for(var tt,et=0,Q=B.i,it=B.j,nt=B.S;q--;)tt=nt[Q=l&Q+1],et=et*o+nt[l&(nt[Q]=nt[it=l&it+tt])+(nt[it]=tt)];return B.i=Q,B.j=it,et})(o)}function v(I,N){return N.i=I.i,N.j=I.j,N.S=I.S.slice(),N}function b(I,N){var E=[],B=typeof I,M;if(N&&B=="object")for(M in I)try{E.push(b(I[M],N-1))}catch{}return E.length?E:B=="string"?I:I+"\0"}function w(I,N){for(var E=I+"",B,M=0;M<E.length;)N[l&M]=l&(B^=N[l&M]*19)+E.charCodeAt(M++);return C(N)}function A(){try{var I;return f&&(I=f.randomBytes)?I=I(o):(I=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(I)),C(I)}catch{var N=s.navigator,E=N&&N.plugins;return[+new Date,s,E,s.screen,C(t)]}}function C(I){return String.fromCharCode.apply(0,I)}if(w(e.random(),t),n.exports){n.exports=m;try{f=require("crypto")}catch{}}})([],Math)})(Zb);var QM=Hb.exports,tV=jb.exports,eV=Kb.exports,nV=Xb.exports,sV=Yb.exports,oV=Jb.exports,Nr=Zb.exports;Nr.alea=QM;Nr.xor128=tV;Nr.xorwow=eV;Nr.xorshift7=nV;Nr.xor4096=sV;Nr.tychei=oV;var rV=Nr;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qb(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{dim:r}=s,i=o.shape.length;let c=r;if(c===-1&&(c=i-1),c!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${c}`);const a=ie([c],o.shape),u=qb({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),d=He(u.shape,a),l=Te({inputs:{x:u},backend:e,attrs:{shape:d}}),f=pm({inputs:{a:o,b:l},backend:e}),m=eb({inputs:{x:f},backend:e}),x=gc({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),v=Te({inputs:{x},backend:e,attrs:{shape:d}}),b=mm({inputs:{a:m,b:v},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),b}const iV={kernelName:mu,backendName:"cpu",kernelFunc:Qb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{numSamples:r,seed:i,normalized:c}=s;Bt(o,"multinomial");const a=c?o:Qb({inputs:{logits:o},backend:e,attrs:{dim:-1}}),u=a.shape[0],d=a.shape[1],l=e.data.get(a.dataId).values,f=[u,r],m=Cn(pt(f),"int32");for(let x=0;x<u;++x){const v=x*d,b=new Float32Array(d-1);b[0]=l[v];for(let C=1;C<b.length;++C)b[C]=b[C-1]+l[v+C];const w=rV.alea(i.toString()),A=x*r;for(let C=0;C<r;++C){const I=w();m[A+C]=b.length;for(let N=0;N<b.length;N++)if(I<b[N]){m[A+C]=N;break}}}return c||e.disposeIntermediateTensorInfo(a),e.makeTensorInfo(f,"int32",m)}const cV={kernelName:Px,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV=lf;function uV(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a}=s;Bt(o,"NonMaxSuppression");const u=e.data.get(o.dataId).values,d=e.data.get(r.dataId).values,{selectedIndices:l}=lV(u,d,i,c,a);return e.makeTensorInfo([l.length],"int32",new Int32Array(l))}const hV={kernelName:ip,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV=uf;function pV(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,padToMaxOutputSize:u}=s;Bt(o,"NonMaxSuppressionPadded");const d=e.data.get(o.dataId).values,l=e.data.get(r.dataId).values,{selectedIndices:f,validOutputs:m}=dV(d,l,i,c,a,u);return[e.makeTensorInfo([f.length],"int32",new Int32Array(f)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}const fV={kernelName:ap,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mV=hf;function gV(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,softNmsSigma:u}=s;Bt(o,"NonMaxSuppressionWithScore");const d=e.data.get(o.dataId).values,l=e.data.get(r.dataId).values,f=i,m=c,x=a,v=u,{selectedIndices:b,selectedScores:w}=mV(d,l,f,m,x,v);return[e.makeTensorInfo([b.length],"int32",new Int32Array(b)),e.makeTensorInfo([w.length],"float32",new Float32Array(w))]}const xV={kernelName:cp,backendName:"cpu",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o}=t,{depth:r,onValue:i,offValue:c}=s;Bt(o,"oneHot");const a=pt(o.shape),u=new Float32Array(a*r);u.fill(c);const d=e.data.get(o.dataId).values;for(let l=0;l<a;++l)d[l]>=0&&d[l]<r&&(u[l*r+d[l]]=i);return e.makeTensorInfo([...o.shape,r],"int32",u)}const vV={kernelName:eu,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fl(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=wr({inputs:{input:s},backend:e}),r=fl({inputs:{x:o},backend:e}),i=hi({inputs:{input:s},backend:e}),c=fl({inputs:{x:i},backend:e}),a=On({inputs:{real:r,imag:c},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),a}else return gm({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const _V={kernelName:yu,backendName:"cpu",kernelFunc:fl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=wr({inputs:{input:s},backend:e}),r=t1({inputs:{x:o},backend:e}),i=hi({inputs:{input:s},backend:e}),c=fl({inputs:{x:i},backend:e}),a=On({inputs:{real:r,imag:c},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),a}else return gm({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const bV={kernelName:tu,backendName:"cpu",kernelFunc:t1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s;if(t.length===1)return pl({inputs:{input:t[0]},backend:e,attrs:{dim:o}});const r=t[0].shape,i=t[0].dtype;t.forEach(d=>{vs(r,d.shape,"All tensors passed to stack must have matching shapes"),P(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],a=t.map(d=>{const l=pl({inputs:{input:d},backend:e,attrs:{dim:o}});return c.push(l),l}),u=di({inputs:a,backend:e,attrs:{axis:o}});return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const wV={kernelName:nu,backendName:"cpu",kernelFunc:e1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:r,constantValue:i}=s;Bt(o,"pad");const c=r.map((A,C)=>A[0]+o.shape[C]+A[1]),a=r.map(A=>A[0]),u=e.data.get(o.dataId).values,d=pt(o.shape),l=o.shape.length,f=Ut(o.shape),m=pt(c),x=c.length,v=Ut(c),b=gn(o.dtype,m);i!==0&&b.fill(i);for(let A=0;A<d;A++){const I=oa(A,l,f).map((E,B)=>E+a[B]),N=Ks(I,x,v);b[N]=u[A]}return{dataId:e.write(b,c,o.dtype),shape:c,dtype:o.dtype}}const n1={kernelName:su,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV=Qe((n,t)=>Math.pow(n,t)),AV=fn(Fa,IV),kV={kernelName:Fa,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n){const{backend:t,attrs:e}=n,{start:s,stop:o,dtype:r,step:i}=e,c=yb(s,o,i,r);return t.makeTensorInfo([c.length],r,c)}const SV={kernelName:lp,backendName:"cpu",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV=Ce(Ma,n=>1/n),TV={kernelName:Ma,backendName:"cpu",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:i,size:c}=s;Bt(o,"resizeBilinear");const a=Ut(o.shape),[u,d]=c,[l,f,m,x]=o.shape,v=e.data.get(o.dataId).values,b=new Float32Array(pt([l,u,d,x])),w=[r&&u>1?f-1:f,r&&d>1?m-1:m],A=[r&&u>1?u-1:u,r&&d>1?d-1:d];let C=0;const I=w[0]/A[0],N=w[1]/A[1];for(let E=0;E<l;E++)for(let B=0;B<u;B++){let M;i?M=I*(B+.5)-.5:M=I*B;const U=Math.max(0,Math.floor(M)),G=M-U,q=Math.min(f-1,Math.ceil(M)),tt=E*a[0]+U*a[1],et=E*a[0]+q*a[1];for(let Q=0;Q<d;Q++){let it;i?it=N*(Q+.5)-.5:it=N*Q;const nt=Math.max(0,Math.floor(it)),Z=it-nt,lt=Math.min(m-1,Math.ceil(it)),ct=tt+nt*a[2],ut=et+nt*a[2],gt=tt+lt*a[2],vt=et+lt*a[2];for(let Ct=0;Ct<x;Ct++){const St=v[ct+Ct],At=v[ut+Ct],Rt=v[gt+Ct],Lt=v[vt+Ct],Gt=St+(Rt-St)*Z,Ot=At+(Lt-At)*Z,Dt=Gt+(Ot-Gt)*G;b[C++]=Dt}}}return e.makeTensorInfo([l,u,d,x],"float32",b)}const RV={kernelName:cu,backendName:"cpu",kernelFunc:EV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:r}=t,{alignCorners:i}=s;Bt([r,o],"resizeBilinearGrad");const c=Ut(o.shape),[a,u,d,l]=o.shape,[,f,m]=r.shape,x=new Float32Array(a*u*d*l),v=[i&&f>1?u-1:u,i&&m>1?d-1:d],b=[i&&f>1?f-1:f,i&&m>1?m-1:m],w=v[0]/b[0],A=v[1]/b[1],C=e.data.get(r.dataId).values;let I=0;for(let N=0;N<a;N++){const E=N*c[0];for(let B=0;B<f;B++){const M=B*w,U=Math.floor(M),G=Math.min(Math.ceil(M),u-1),q=E+U*c[1],tt=E+G*c[1],et=M-U,Q=1-et;for(let it=0;it<m;it++){const nt=it*A,Z=Math.floor(nt),lt=Math.min(Math.ceil(nt),d-1),ct=nt-Z,ut=1-ct,gt=q+Z*c[2],vt=q+lt*c[2],Ct=tt+Z*c[2],St=tt+lt*c[2],At=Q*ut,Rt=Q*ct,Lt=et*ut,Gt=et*ct;for(let Ot=0;Ot<l;Ot++){const Dt=C[I++];x[gt+Ot]+=Dt*At,x[vt+Ot]+=Dt*Rt,x[Ct+Ot]+=Dt*Lt,x[St+Ot]+=Dt*Gt}}}}return e.makeTensorInfo([a,d,u,l],"float32",x)}const BV={kernelName:dp,backendName:"cpu",kernelFunc:DV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:i,size:c}=s;Bt(o,"resizeNearestNeighbor");const a=Ut(o.shape),[u,d]=c,[l,f,m,x]=o.shape,v=e.data.get(o.dataId).values,b=new Float32Array(l*u*d*x),w=[r&&u>1?f-1:f,r&&d>1?m-1:m],A=[r&&u>1?u-1:u,r&&d>1?d-1:d],C=w[0]/A[0],I=w[1]/A[1];let N=0;for(let E=0;E<l;E++){const B=E*a[0];for(let M=0;M<u;M++){const U=i?C*(M+.5):C*M;let G=Math.min(f-1,r?Math.round(U):Math.floor(U));i&&(G=Math.max(0,G));const q=B+G*a[1];for(let tt=0;tt<d;tt++){const et=i?I*(tt+.5):I*tt;let Q=Math.min(m-1,r?Math.round(et):Math.floor(et));i&&(Q=Math.max(0,Q));const it=q+Q*a[2];for(let nt=0;nt<x;nt++){const Z=v[it+nt];b[N++]=Z}}}}return e.makeTensorInfo([l,u,d,x],o.dtype,b)}const MV={kernelName:au,backendName:"cpu",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:r}=t,{alignCorners:i}=s;Bt([r,o],"resizeNearestNeighborGrad");const c=Ut(o.shape),a=Ut(r.shape),[u,d,l,f]=o.shape,[,m,x]=r.shape,v=new Float32Array(u*d*l*f),b=e.data.get(r.dataId).values,w=[i&&m>1?d-1:d,i&&x>1?l-1:l],A=[i&&m>1?m-1:m,i&&x>1?x-1:x],C=w[0]/A[0],I=w[1]/A[1],N=1/C,E=1/I,B=Math.ceil(N)*2+2,M=Math.ceil(E)*2+2;for(let U=0;U<u;U++){const G=U*c[0];for(let q=0;q<d;q++){const tt=G+q*c[1],et=Math.floor(q*N),Q=Math.floor(et-B/2);for(let it=0;it<l;it++){const nt=tt+it*c[2],Z=Math.floor(it*E),lt=Math.floor(Z-M/2);for(let ct=0;ct<f;ct++){let ut=0;for(let gt=0;gt<B;gt++){const vt=gt+Q;if(vt<0||vt>=m)continue;const Ct=G+vt*a[1],St=vt*C,At=Math.min(d-1,i?Math.round(St):Math.floor(St));if(q===At)for(let Rt=0;Rt<M;Rt++){const Lt=Rt+lt;if(Lt<0||Lt>=x)continue;const Gt=Ct+Lt*a[2],Ot=Lt*I,Dt=Math.min(l-1,i?Math.round(Ot):Math.floor(Ot));it===Dt&&(ut+=b[Gt+ct])}}v[nt+ct]=ut}}}}return e.makeTensorInfo(o.shape,o.dtype,v)}const LV={kernelName:hp,backendName:"cpu",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dims:r}=s;Bt(o,"reverse");const i=o.shape.length,c=ie(r,o.shape);if(i===0)return eo({inputs:{x:o},backend:e});const a=new bn(o.shape,o.dtype),u=e.bufferSync(o);for(let d=0;d<a.size;d++){const l=a.indexToLoc(d),f=l.slice();c.forEach(m=>f[m]=o.shape[m]-1-f[m]),a.set(u.get(...f),...l)}return e.makeTensorInfo(a.shape,a.dtype,a.values)}const OV={kernelName:lu,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV={kernelName:Ap,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=t,c=e,a=gn(s.dtype,pt(s.shape)),[u,d,l,f]=s.shape,[m,x]=bf(i,d,l),v=255,b=Math.sin(o),w=Math.cos(o),A=c.data.get(s.dataId).values;for(let I=0;I<u;I++){const N=I*l*d*f;for(let E=0;E<d;E++){const B=E*(l*f);for(let M=0;M<l;M++){const U=M*f;for(let G=0;G<f;G++){const q=[u,E,M,G],tt=q[2],et=q[1];let Q=(tt-m)*w-(et-x)*b,it=(tt-m)*b+(et-x)*w;Q=Math.round(Q+m),it=Math.round(it+x);let nt=r;if(typeof r!="number"&&(G===3?nt=v:nt=r[G]),Q>=0&&Q<l&&it>=0&&it<d){const lt=it*(l*f),ct=Q*f,ut=N+lt+ct+G;nt=A[ut]}const Z=N+B+U+G;a[Z]=nt}}}}return{dataId:c.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=Ce(Pa,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),UV={kernelName:Pa,backendName:"cpu",kernelFunc:WV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o,updates:r}=t,{shape:i}=s,{sliceRank:c,numUpdates:a,sliceSize:u,strides:d,outputSize:l}=tc(r,o,i),f=!0,m=e.bufferSync(o),x=e.bufferSync(r),v=Kr(m,x,i,l,u,a,c,d,0,f);return e.makeTensorInfo(i,v.dtype,v.values)}const qV={kernelName:Ox,backendName:"cpu",kernelFunc:GV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n,t){let e=0,s=n.length,o=0;for(;e<s;)o=Math.floor((e+s)/2),n[o]<t?e=o+1:s=o;return s}function jV(n,t){let e=0,s=n.length,o=0;for(;e<s;)o=Math.floor((e+s)/2),n[o]<=t?e=o+1:s=o;return s}function KV(n,t,e,s,o,r){const i=Sn("int32",e*o);for(let c=0;c<e;++c){const a=n.slice(c*s,(c+1)*s),u=c*o;for(let d=0;d<o;++d)i[u+d]=r==="left"?HV(a,t[d+u]):jV(a,t[d+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:o,values:r}=t,{side:i}=s,c=e.data.get(o.dataId).values,a=e.data.get(r.dataId).values,u=KV(c,a,o.shape[0],o.shape[1],r.shape[1],i);return e.makeTensorInfo(r.shape,"int32",u)}const YV={kernelName:zx,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const{inputs:t,backend:e}=n,{condition:s,t:o,e:r}=t;Bt([s,o,r],"select");const i=s.shape.length,c=e.data.get(s.dataId).values,a=e.data.get(o.dataId).values,u=e.data.get(r.dataId).values,d=Un(o.dtype,r.dtype),l=Cn(pt(o.shape),d);let f=0;const m=i===0||i>1||o.shape.length===1?1:pt(o.shape.slice(1));for(let x=0;x<c.length;x++)for(let v=0;v<m;v++)c[x]===1?l[f++]=a[x]:l[f++]=u[x];return e.makeTensorInfo(o.shape,d,l)}const ZV={kernelName:uu,backendName:"cpu",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV=Du,tL=Bu,eL=Ce(za,n=>n>=0?tL*n:QV*(Math.exp(n)-1)),nL={kernelName:za,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sL=Ce(Ga,n=>n<0?-1:n>0?1:0),oL={kernelName:Ga,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=Ce(Wa,n=>Math.sin(n)),iL={kernelName:Wa,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aL=Ce(Ua,n=>Math.sinh(n)),cL={kernelName:Ua,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=11920928955078125e-23,Og=Math.log(lL)+2,uL=Ce(Ha,n=>{const t=n>-Og,e=n<Og,s=Math.exp(n);let o;return e?o=s:t?o=n:o=Math.log(1+s),o}),hL={kernelName:Ha,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:r,paddings:i}=s;Bt([o],"spaceToBatchND");const c=pt(r),a=[[0,0]];a.push(...i);for(let E=1+r.length;E<o.shape.length;++E)a.push([0,0]);const u=n1.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:a,constantValue:0}}),d=rc(u.shape,r,c,!1),l=ic(d.length,r.length,!1),f=ac(u.shape,r,c,!1),v=Te({inputs:{x:u},backend:e,attrs:{shape:d}}),A=Fn({inputs:{x:v},backend:e,attrs:{perm:l}}),N=Te({inputs:{x:A},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(A),N}const pL={kernelName:pu,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n){const{inputs:t,backend:e}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const c=e.data.get(s.dataId).values,a=e.data.get(o.dataId).values,u=e.data.get(r.dataId).values,d=e.data.get(i.dataId).values[0],[l,f,m,x,v]=wb(c,s.shape,s.dtype,a,o.dtype,u,d);return[e.makeTensorInfo(f,s.dtype,l),e.makeTensorInfo([f[0]],o.dtype,m),e.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(b=>Number(b)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const mL={kernelName:pp,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:o,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.data.get(o.dataId).values),c=e.data.get(s.dataId).values,a=Array.from(e.data.get(r.dataId).values),[u,d,l]=Cb(c,s.shape,s.dtype,i,a);return[e.makeTensorInfo(d,s.dtype,u),e.makeTensorInfo([l.length],r.dtype,new Int32Array(l))]}const xL={kernelName:fp,backendName:"cpu",kernelFunc:gL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,c=e.data.get(o.dataId).values,a=e.data.get(r.dataId).values,[u,d]=dm(i,s.shape,s.dtype,c,a,!0);return e.makeTensorInfo(d,s.dtype,u)}const vL={kernelName:mp,backendName:"cpu",kernelFunc:yL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,c=e.data.get(o.dataId).values,a=e.data.get(r.dataId).values,[u,d]=dm(i,s.shape,s.dtype,c,a);return e.makeTensorInfo(d,s.dtype,u)}const bL={kernelName:gp,backendName:"cpu",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=t,{outputShape:c}=s,{sliceRank:a,numUpdates:u,sliceSize:d,strides:l,outputSize:f}=tc(r,o,c),m=!1,x=e.bufferSync(o);let v;switch(r.dtype){case"bool":{const b=e.bufferSync(r),w=Boolean(e.data.get(i.dataId).values[0]);v=Kr(x,b,c,f,d,u,a,l,w,m);break}case"float32":{const b=e.bufferSync(r),w=e.data.get(i.dataId).values[0];v=Kr(x,b,c,f,d,u,a,l,w,m);break}case"int32":{const b=e.bufferSync(r),w=e.data.get(i.dataId).values[0];v=Kr(x,b,c,f,d,u,a,l,w,m);break}case"string":{const b=e.bufferSync(r),w=Do(e.data.get(i.dataId).values[0]);v=Kr(x,b,c,f,d,u,a,l,w,m);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(c,v.dtype,v.values)}const CL={kernelName:Wx,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{numOrSizeSplits:r,axis:i}=s,c=ie(i,o.shape)[0],a=Mf(o,r,c),u=new Array(o.shape.length).fill(0),d=o.shape.slice();return a.map(l=>{const f=[...d];f[c]=l;const m=Cr({inputs:{x:o},backend:e,attrs:{begin:u,size:f}});return u[c]+=l,m})}const AL={kernelName:fu,backendName:"cpu",kernelFunc:IL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL={kernelName:xp,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Bt(e,"square");const o=s.data.get(e.dataId).values,r=new Float32Array(o.length);for(let c=0;c<o.length;++c){const a=o[c];r[c]=a*a}return{dataId:s.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $L=Ce(Qa,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),SL={kernelName:Qa,backendName:"cpu",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:r,end:i,strides:c,beginMask:a,endMask:u,ellipsisMask:d,newAxisMask:l,shrinkAxisMask:f}=s;Bt(o,"stridedSlice");const{finalShapeSparse:m,finalShape:x,isIdentity:v,sliceDim0:b,isSimpleSlice:w,begin:A,end:C,strides:I}=Mp(o.shape,r,i,c,a,u,d,l,f);let N;if(v)N=Te({inputs:{x:o},backend:e,attrs:{shape:x}});else if(b||w){P(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const E=Dp(A,C,I),B=Cr({inputs:{x:o},backend:e,attrs:{begin:A,size:E}});N=Te({inputs:{x:B},backend:e,attrs:{shape:x}}),e.disposeIntermediateTensorInfo(B)}else{const E=e.bufferSync(o),B=Ab(m,E,I,A);N=e.makeTensorInfo(x,B.dtype,B.values)}return N}const TL={kernelName:yp,backendName:"cpu",kernelFunc:NL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const{inputs:t,backend:e,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:c,padWidth:a,preserveShortSequences:u}=s,{data:d,dataSplits:l}=t,f=e.data.get(d.dataId).values,m=e.data.get(l.dataId).values,[x,v]=kb(f,m,o,r,i,c,a,u);return[e.makeTensorInfo([x.length],"string",x),e.makeTensorInfo(l.shape,"int32",v)]}const RL={kernelName:vp,backendName:"cpu",kernelFunc:EL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const c=e.data.get(r.dataId).values,a=e.data.get(i.dataId).values[0],[u,d,l]=$b(c,a,o),f=d.length;return[e.makeTensorInfo([f,2],"int32",u),e.makeTensorInfo([f],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(l))]}const BL={kernelName:_p,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:o}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(r.dataId).values,c=Sb(i,o);return e.makeTensorInfo(r.shape,"int32",c)}const ML={kernelName:bp,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL=Ce(Ya,n=>Math.tan(n)),LL={kernelName:Ya,backendName:"cpu",kernelFunc:VL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=Ce(Ja,n=>Math.tanh(n)),OL={kernelName:Ja,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reps:r}=s;Bt(o,"tile");const i=Tb(e.bufferSync(o),r);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const WL={kernelName:Za,backendName:"cpu",kernelFunc:zL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{k:r,sorted:i}=s;Bt(o,"topk");const c=e.data.get(o.dataId).values,[a,u]=Rb(c,o.shape,o.dtype,r,i);return[e.makeTensorInfo(a.shape,a.dtype,a.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}const GL={kernelName:wp,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const{inputs:t,attrs:e,backend:s}=n,{image:o,transforms:r}=t,{interpolation:i,fillMode:c,fillValue:a,outputShape:u}=e,[d,l,f,m]=o.shape,[x,v]=u??[l,f],b=[d,x,v,m],w=Ut(o.shape),A=w[0],C=w[1],I=w[2],N=gn(o.dtype,pt(b));N.fill(a);const E=s.data.get(o.dataId).values,B=s.data.get(r.dataId).values;for(let U=0;U<d;++U){const G=r.shape[0]===1?B:B.subarray(U*8,U*8+8);for(let q=0;q<x;++q)for(let tt=0;tt<v;++tt)for(let et=0;et<m;++et){let Q;const it=G[6]*tt+G[7]*q+1;if(it===0)continue;const nt=(G[0]*tt+G[1]*q+G[2])/it,Z=(G[3]*tt+G[4]*q+G[5])/it,lt=zg(nt,f,c),ct=zg(Z,l,c);switch(i){case"nearest":Q=JL(E,l,f,A,C,I,U,ct,lt,et,a);break;case"bilinear":Q=ZL(E,l,f,A,C,I,U,ct,lt,et,a);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ut=U*A+q*C+tt*I+et;N[ut]=Q}return s.makeTensorInfo(b,o.dtype,N)}return{dataId:s.write(N,b,o.dtype),shape:o.shape,dtype:o.dtype}}const HL={kernelName:Cp,backendName:"cpu",kernelFunc:qL};function zg(n,t,e){switch(e){case"reflect":return jL(n,t);case"wrap":return KL(n,t);case"nearest":return YL(n,t);case"constant":default:return XL(n)}}function jL(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return hr(0,e,t-1)}function KL(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return hr(0,e,t-1)}function XL(n,t){return n}function YL(n,t){return hr(0,n,t-1)}function Ui(n,t,e,s,o,r,i,c,a,u,d){const l=i*s+c*o+a*r+u;return 0<=c&&c<t&&0<=a&&a<e?n[l]:d}function JL(n,t,e,s,o,r,i,c,a,u,d){const l=Math.round(c),f=Math.round(a);return Ui(n,t,e,s,o,r,i,l,f,u,d)}function ZL(n,t,e,s,o,r,i,c,a,u,d){const l=Math.floor(c),f=Math.floor(a),m=l+1,x=f+1,v=(x-a)*Ui(n,t,e,s,o,r,i,l,f,u,d)+(a-f)*Ui(n,t,e,s,o,r,i,l,x,u,d),b=(x-a)*Ui(n,t,e,s,o,r,i,m,f,u,d)+(a-f)*Ui(n,t,e,s,o,r,i,m,x,u,d);return(m-c)*v+(c-l)*b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const{inputs:t,attrs:e,backend:s}=n,{axis:o}=e,{x:r}=t;Bt(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:c,outputShape:a,indices:u}=Db(i,o,r.shape,r.dtype);return[s.makeTensorInfo(a,r.dtype,c),s.makeTensorInfo([u.length],"int32",u)]}const tP={kernelName:Ip,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n){const{inputs:t,backend:e,attrs:s}=n,{value:o}=t;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o.shape.length,c=o.shape[r],a=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==r&&(a[u++]=o.shape[m]);const d=new Array(i).fill(0),l=o.shape.slice();l[r]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[r]=m;const x=Cr({inputs:{x:o},backend:e,attrs:{begin:d,size:l}});f[m]=Te({inputs:{x},backend:e,attrs:{shape:a}}),e.disposeIntermediateTensorInfo(x)}return f}const nP={kernelName:gu,backendName:"cpu",kernelFunc:eP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,segmentIds:r}=t,{numSegments:i}=s;Bt(o,"unsortedSegmentSum");const c=o.shape.length,a=r.shape.length,u=[],d=[],l=c-a;let f=r;for(let x=0;x<l;++x){const v=pl({inputs:{input:f},backend:e,attrs:{dim:x+1}});f=v,d.push(v)}for(let x=0;x<i;++x){const v=Oo(x,"int32"),b=e.makeTensorInfo([],"int32",v),w=Q_({inputs:{a:b,b:f},backend:e}),A=Lo({inputs:{x:w},backend:e,attrs:{dtype:"float32"}}),C=ju({inputs:{a:A,b:o},backend:e}),I=gc({inputs:{x:C},backend:e,attrs:{axis:0,keepDims:!1}});u.push(I),d.push(b),d.push(w),d.push(A),d.push(C),d.push(I)}const m=e1({inputs:u,backend:e,attrs:{axis:0}});return d.forEach(x=>e.disposeIntermediateTensorInfo(x)),m}const oP={kernelName:xu,backendName:"cpu",kernelFunc:sP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rP=[QD,qR,eB,sB,JR,rB,aB,lB,hB,pB,mB,xB,vB,wB,IB,$B,NB,EB,DB,JD,FB,VB,PB,zB,XR,QR,UB,HR,qB,jB,KB,YB,ZB,tF,nF,oF,iF,cF,uF,dF,fF,gF,yF,vF,bF,CF,AF,kF,$F,SF,EF,GD,DF,tD,zF,eD,WF,sD,KF,XF,JF,rD,tM,nM,oM,iM,cM,aD,lD,jR,uM,HB,dM,fM,gM,qD,hD,pD,yM,mD,_M,CM,AM,SM,TM,RM,DM,xD,FM,VM,PM,zM,UM,qM,jM,vD,XM,ZM,cV,bD,CD,hV,fV,xV,AD,vV,bV,wV,n1,kV,jD,SD,SV,KR,wd,TV,KD,XD,YD,RV,BV,MV,LV,OV,zV,UV,TD,qV,YV,ZV,nL,RD,oL,iL,cL,DD,iV,hL,pL,mL,xL,vL,bL,CL,AL,MD,kL,LD,SL,TL,RL,BL,ML,WD,NF,LL,OL,WL,GL,HL,kD,tP,nP,oP,_V];for(const n of rP)Gx(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr={},Nh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iP(n,t){sr[n]=t}function Fs(n,t){if(!(n in sr)||t!=null){const s=cP(n,t);if(s!==null)sr[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=sr[n];return e==null||e.isContextLost()?(delete sr[n],Fs(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),sr[n])}function aP(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function cP(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??aP(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete sr[n]},!1),n===1?e.getContext("webgl",Nh)||e.getContext("experimental-webgl",Nh):e.getContext("webgl2",Nh)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qi;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Qi||(Qi={}));var Zn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Zn||(Zn={}));var mn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(mn||(mn={}));function xc(n,t){return[t,n]}function lP(n,t){return n*t}function Fc(n){const t=pt(n),e=Math.ceil(t/4);return Ph(e)}function ki(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function uP(n,t){const[e,s]=ki(n,t);return e*s*4}function xm(n,t){const e=n;let s,o,r,i,c,a,u,d,l,f;return dt().getNumber("WEBGL_VERSION")===2?(s=e.R32F,o=e.R16F,r=e.RGBA16F,i=e.RGBA32F,c=e.RED,u=4,d=1,l=e.HALF_FLOAT,f=e.FLOAT,a=e.RGBA8):(s=n.RGBA,o=n.RGBA,r=n.RGBA,i=e.RGBA,c=n.RGBA,u=4,d=4,l=t!=null?t.HALF_FLOAT_OES:null,f=n.FLOAT,a=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:a,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:l,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,t){const e=t();return dt().getBool("DEBUG")&&hP(n),e}function hP(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+mP(n,t))}const dP=596e-10,pP=65504;function fP(n){return!!(dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||dP<Math.abs(n)&&Math.abs(n)<pP)}function mP(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Mc(n,t){return bo(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function gP(n,t){const e=bo(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ft(n,()=>n.shaderSource(e,t)),Ft(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function xP(n,t){const e=bo(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ft(n,()=>n.shaderSource(e,t)),Ft(n,()=>n.compileShader(e)),dt().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw s1(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const yP=/ERROR: [0-9]+:([0-9]+):/g;function s1(n,t){const e=yP.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],o=n.split(`
`),r=o.length.toString().length+2,i=o.map((l,f)=>Xr((f+1).toString(),r)+l);let c=0;for(let l=0;l<i.length;l++)c=Math.max(i[l].length,c);const a=i.slice(0,s-1),u=i.slice(s-1,s),d=i.slice(s);console.log(a.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Xr(u[0],c)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function vP(n){return bo(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function _P(n,t){if(Ft(n,()=>n.linkProgram(t)),!dt().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Th(n,t){if(Ft(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function bP(n,t){const e=bo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ft(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Ft(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function wP(n,t){const e=bo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ft(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Ft(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function CP(n){return bo(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function IP(n,t){const e=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function AP(n){return bo(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Wg(n,t,e,s,o,r,i){const c=n.getAttribLocation(t,e);return c===-1?!1:(Ft(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Ft(n,()=>n.vertexAttribPointer(c,o,n.FLOAT,!1,r,i)),Ft(n,()=>n.enableVertexAttribArray(c)),!0)}function kP(n,t,e){EP(n,e),Ft(n,()=>n.activeTexture(n.TEXTURE0+e)),Ft(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function $P(n,t,e){return bo(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function SP(n,t,e){return n.getUniformLocation(t,e)}function NP(n,t,e,s){Ft(n,()=>kP(n,t,s)),Ft(n,()=>n.uniform1i(e,s))}function Eh(n,t,e){Ft(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ft(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Ug(n,t){Ft(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ft(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Vc(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+TP(n,t))}function TP(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function bo(n,t,e){const s=Ft(n,()=>t());if(s==null)throw new Error(e);return s}function EP(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function pi(n,t=2){return pt(n.slice(0,n.length-t))}function fi(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Rh(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[pi(n),...fi(n)]),t}function RP(n,t=!1){let e=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(e=e*2,n=n.map((o,r)=>r>=n.length-2?wx(n[r]):n[r]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Po(n).newShape);let s=pt(n);if(n.length<=1&&s<=e)return[1,s];if(n.length===2&&n[0]<=e&&n[1]<=e)return n;if(n.length===3&&n[0]*n[1]<=e&&n[2]<=e)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=e&&n[1]*n[2]<=e)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e)return[n[0],n[1]*n[2]*n[3]];if(t){const o=pi(n);let r=2,i=2;return n.length&&([r,i]=fi(n)),s=o*(r/2)*(i/2),Ph(s).map(c=>c*2)}return Ph(s)}function Lc(n){return n%2===0}function ml(n,t){if(n=n.slice(-2),t=t.slice(-2),ve(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n.slice(-1)[0],s=t.slice(-1)[0];if(e===s||Lc(e)&&Lc(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&Lc(n[0])&&Lc(t[0])}let Dh,Bh;function DP(n){if(Dh==null){const t=Fs(n);Dh=t.getParameter(t.MAX_TEXTURE_SIZE)}return Dh}function BP(n){if(Bh==null){const t=Fs(n);Bh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Bh)}function FP(n){if(n===0)return 0;let t;const e=Fs(n);return fs(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:fs(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function fs(n,t){return n.getExtension(t)!=null}function Gg(n){try{if(Fs(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function MP(n){if(n===0)return!1;const t=Fs(n);if(n===1){if(!fs(t,"OES_texture_float"))return!1}else if(!fs(t,"EXT_color_buffer_float"))return!1;return Id(t)}function VP(n){if(n===0)return!1;const t=Fs(n);if(n===1){if(!fs(t,"OES_texture_float")||!fs(t,"WEBGL_color_buffer_float"))return!1}else{if(fs(t,"EXT_color_buffer_float"))return Id(t);const s="EXT_color_buffer_half_float";if(fs(t,s)){const o=t.getExtension(s);return LP(t,o)}return!1}return Id(t)}function Id(n){const t=xm(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e);const s=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,s,o,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),i}function LP(n,t){const e=xm(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const o=1,r=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,o,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),c}function PP(n){return n!==2?!1:Fs(n).fenceSync!=null}function yc(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&P(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ht=dt();Ht.registerFlag("HAS_WEBGL",()=>Ht.getNumber("WEBGL_VERSION")>0);Ht.registerFlag("WEBGL_VERSION",()=>Gg(2)?2:Gg(1)?1:0);Ht.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ht.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ht.get("WEBGL_VERSION")===2);Ht.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ht.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ht.registerFlag("WEBGL_PACK",()=>Ht.getBool("HAS_WEBGL"));Ht.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_CLIP",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_PACK_REDUCE",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_CONV_IM2COL",()=>Ht.getBool("WEBGL_PACK"));Ht.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>DP(Ht.getNumber("WEBGL_VERSION")));Ht.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>BP(Ht.getNumber("WEBGL_VERSION")));Ht.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ht.getNumber("WEBGL_VERSION");return n===0?0:FP(n)});Ht.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ht.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ny());Ht.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>MP(Ht.getNumber("WEBGL_VERSION")));Ht.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ht.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ht.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ht.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>VP(Ht.getNumber("WEBGL_VERSION")));Ht.registerFlag("WEBGL_FENCE_API_ENABLED",()=>PP(Ht.getNumber("WEBGL_VERSION")));Ht.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ht.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ht.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ht.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ny()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ht.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ht.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ht.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ht.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tn(){let n,t,e,s,o,r,i,c,a,u;return dt().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",o="texture",r="outputColor",i="out vec4 outputColor;",c=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,a="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",o="texture2D",r="gl_FragColor",i="",c=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,a=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:o,output:r,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:a,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n,t,e="index"){const s=Ut(t);return s.map((o,r)=>{const i=`int ${n[r]} = ${e} / ${o}`,c=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${o}`:`index -= ${n[r]} * ${o}`;return`${i}; ${c};`}).join("")}function Ku(n,t,e="index"){const s=Ut(t);return s.map((o,r)=>{const i=`int ${n[r]} = ${e} / outShapeStrides[${r}]`,c=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${c};`}).join("")}function OP(n,t){const e=n.length,s=n.map(r=>`${t}[${r}]`),o=new Array(e-1);o[e-2]=s[e-1];for(let r=e-3;r>=0;--r)o[r]=`(${o[r+1]} * ${s[r+1]})`;return o}function zP(n,t,e="index"){const s=n.map((r,i)=>i),o=OP(s,t);return o.map((r,i)=>{const c=`int ${n[i]} = ${e} / ${o[i]}`,a=i===o.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${o[i]}`:`index -= ${n[i]} * ${o[i]}`;return`${c}; ${a};`}).join("")}function ym(n){const t=Ut(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function vm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const o1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:r1}=WS;function WP(n,t,e){const s=[];if(n.forEach(m=>{const x=pt(m.shapeInfo.logicalShape);if(m.shapeInfo.isUniform?s.push(`uniform float ${m.name}${x>1?`[${x}]`:""};`):(s.push(`uniform sampler2D ${m.name};`),s.push(`uniform int offset${m.name};`)),e.enableShapeUniforms){const{uniformShape:v}=_m(e.packedInputs,m.shapeInfo.logicalShape,m.shapeInfo.texShape);switch(v.length){case 1:s.push(`uniform int ${m.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${m.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${m.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${m.name}Shape;`);break}s.push(`uniform ivec2 ${m.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(m=>{s.push(`uniform ${m.type} ${m.name}${m.arrayIndex?`[${m.arrayIndex}]`:""};`)});const o=s.join(`
`),r=n.map(m=>UP(m,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,c=Tn(),a=HP(c);let u,d,l=XP(c);return t.isPacked?(u=GP(t.logicalShape,i,e.enableShapeUniforms),d=KP(c)):(u=qP(t.logicalShape,i,e.enableShapeUniforms),d=jP(c)),e.packedInputs&&(l+=QP),[l,a,d,o,u,r,e.userCode].join(`
`)}function $i(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return hO(n,t);case 1:return pO(n,t);case 2:return mO(n,t);case 3:return xO(n,t);case 4:return vO(n,t);case 5:return _O(n);case 6:return bO(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function i1(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return uO(n);case 1:return dO(n,t);case 2:return fO(n,t);case 3:return gO(n,t);default:return yO(n,t)}}function UP(n,t,e=!1,s){let o="";e?o+=i1(n,s):o+=$i(n,s);const r=n.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(e?o+=wO(n,t):o+=CO(n,t)),o}function GP(n,t,e){switch(n.length){case 0:return a1();case 1:return tO(n,t,e);case 2:return cO(n,t,e);case 3:return nO(n,t,e);default:return oO(n,t,e)}}function qP(n,t,e){switch(n.length){case 0:return a1();case 1:return eO(n,t,e);case 2:return lO(n,t,e);case 3:return sO(n,t,e);case 4:return rO(n,t,e);case 5:return iO(n,t);case 6:return aO(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function HP(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function jP(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function KP(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function XP(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${YP}
    ${JP}
    ${ZP}
  `}const YP=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,JP=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZP=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,QP=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function a1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function tO(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function eO(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function nO(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(n[2]/2),r=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function sO(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ku(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Tr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function oO(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(n[n.length-1]/2),r=o*Math.ceil(n[n.length-2]/2);let i=r,c="",a="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],c=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+c,a=`b${u}, `+a;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${c}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${a});
    }
  `}function rO(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ku(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Tr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function iO(n,t){const e=Tr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function aO(n,t){const e=Tr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function cO(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ve(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function lO(n,t,e){return ve(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Er(n){return`offset${n}`}function uO(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Tn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function hO(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[o,r]=n.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=Er(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[c,a]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${c}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function dO(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=n.shapeInfo.texShape,r=Tn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function pO(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Si(n)}
      }
    `;const o=n.shapeInfo.texShape,r=o[0],i=o[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const c=Er(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${c}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${c}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${c}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${c});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${c});
      return sampleTexture(${e}, uv);
    }
  `}function fO(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],c=r[1],a=Tn();if(r!=null&&ve(e,r))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${a.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${i}.0);

        return ${a.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],d=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function mO(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&ve(e,r)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const f=r[0],m=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${f}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:c}=Po(e),a=i;if(a.length<e.length){const f=Ni(n,a),m=["row","col"];return`
      ${$i(f,t)}
      float ${o}(int row, int col) {
        return ${o}(${Ti(m,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Si(n)}
      }
    `;const u=r[0],d=r[1],l=Er(s);return d===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${l}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${l}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${l};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${l};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${s}, uv);
  }
`}function gO(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const f=e.slice(1),m=[1,2],x=Ni(n,f),v=["b","row","col"];return`
        ${i1(x,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Ti(v,m)});
        }
      `}const c=Tn();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const a=i[0],u=i[1],d=Math.ceil(e[2]/2),l=d*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${u}, ${l}, ${d}, b, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function xO(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[1]*e[2],i=e[2],{newShape:c,keptDims:a}=Po(e),u=c;if(u.length<e.length){const v=Ni(n,u),b=["row","col","depth"];return`
        ${$i(v,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Ti(b,a)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${Si(n)}
      }
    `;const d=n.shapeInfo.texShape,l=d[0],f=d[1],m=n.shapeInfo.flatOffset;if(f===r&&m==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${l}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(f===i&&m==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `;const x=Er(s);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${r} + col * ${i} + depth + ${x};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${x};
        vec2 uv = uvFromFlat(${l}, ${f}, index);
        return sampleTexture(${s}, uv);
      }
  `}function yO(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Tn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,c=n.shapeInfo.texShape,a=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],u=a[0],d=a[1],l=Math.ceil(r[i-1]/2);let f=l*Math.ceil(r[i-2]/2),m="int b, int row, int col",x=`b * ${f} + (row / 2) * ${l} + (col / 2)`;for(let v=2;v<i-1;v++)m=`int b${v}, `+m,f*=r[i-v-1],x=`b${v} * ${f} + `+x;return`
    vec4 ${s}(${m}) {
      int index = ${x};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${o.texture2D}(${e}, uv);
    }
  `}function vO(n,t){const e=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[3],i=e[2]*r,c=e[1]*i,{newShape:a,keptDims:u}=Po(e);if(a.length<e.length){const A=Ni(n,a),C=["row","col","depth","depth2"];return`
      ${$i(A,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Ti(C,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${c}, ${i}, ${r}, 1)));
        ${Si(n)}
      }
    `;const d=n.shapeInfo.flatOffset,l=n.shapeInfo.texShape,f=l[0],m=l[1],x=`int stride2 = ${s}Shape[3];`,v=`int stride1 = ${s}Shape[2] * stride2;`,b=`int stride0 = ${s}Shape[1] * stride1;`;if(m===c&&d==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${x}
        ${v}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(m===r&&d==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;const w=Er(s);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${x}
      ${v}
      ${b}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${w});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${f}, ${m}, index + ${w});
      return sampleTexture(${s}, uv);
    }
  `}function _O(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],r=t[3]*o,i=t[2]*r,c=t[1]*i,{newShape:a,keptDims:u}=Po(t);if(a.length<t.length){const v=Ni(n,a),b=["row","col","depth","depth2","depth3"];return`
      ${$i(v)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Ti(b,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${i}, ${r}, ${o})) +
          depth3;
        ${Si(n)}
      }
    `;const d=n.shapeInfo.flatOffset,l=n.shapeInfo.texShape,f=l[0],m=l[1];if(m===c&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(m===o&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const x=Er(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${i} + depth * ${r} +
          depth2 * ${o} + depth3 + ${x};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${e}, uv);
    }
  `}function bO(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:r}=Po(t);if(o.length<t.length){const b=Ni(n,o),w=["row","col","depth","depth2","depth3","depth4"];return`
      ${$i(b)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Ti(w,r)});
      }
    `}const i=t[5],c=t[4]*i,a=t[3]*c,u=t[2]*a,d=t[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${a}, ${c})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Si(n)}
      }
    `;const l=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,m=f[0],x=f[1];if(x===d&&l==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${a}, ${c}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(x===i&&l==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;const v=Er(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${a} +
          depth2 * ${c} + depth3 * ${i} + depth4 + ${v};
      vec2 uv = uvFromFlat(${m}, ${x}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Si(n){const t=n.name,e=pt(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function wO(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),o="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=r1(n.shapeInfo.logicalShape,t.logicalShape),a=ke(i),u=i-r;let d;const l=["x","y","z","w","u","v"];r===0?d="":i<2&&c.length>=1?d="coords = 0;":d=c.map(A=>`coords.${l[A+u]} = 0;`).join(`
`);let f="";i<2&&r>0?f="coords":f=n.shapeInfo.logicalShape.map((A,C)=>`coords.${l[C+u]}`).join(", ");let m="return outputValue;";const v=pt(n.shapeInfo.logicalShape)===1,w=pt(t.logicalShape)===1;if(r===1&&!v&&!w)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(v&&!w)i===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(c.length){const A=r-2,C=r-1;c.indexOf(A)>-1&&c.indexOf(C)>-1?m="return vec4(outputValue.x);":c.indexOf(A)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(C)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${a} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${s}(${f});
      ${m}
    }
  `}function CO(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),o="get"+s+"AtOutCoords",r=t.texShape,i=n.shapeInfo.texShape,c=n.shapeInfo.logicalShape.length,a=t.logicalShape.length;if(!n.shapeInfo.isUniform&&c===a&&n.shapeInfo.flatOffset==null&&ve(i,r))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const u=ke(a),d=r1(n.shapeInfo.logicalShape,t.logicalShape),l=a-c;let f;const m=["x","y","z","w","u","v"];c===0?f="":a<2&&d.length>=1?f="coords = 0;":f=d.map(v=>`coords.${m[v+l]} = 0;`).join(`
`);let x="";return a<2&&c>0?x="coords":x=n.shapeInfo.logicalShape.map((v,b)=>`coords.${m[b+l]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${f}
      return get${s}(${x});
    }
  `}function ke(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function _m(n,t,e){const{newShape:s,keptDims:o}=Po(t),r=t.length,i=n&&r===3&&t[0]===1,c=i?t.slice(1):s,a=!n&&r>1&&!ve(t,e)&&s.length<r||i;return{useSqueezeShape:a,uniformShape:a?c:t,keptDims:o}}function Ni(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Ti(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,t,e,s){const o=e.map((d,l)=>{const f={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(f.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[l],shapeInfo:f}}),r=o.map(d=>d.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},c=WP(o,i,t),a=xP(n.gl,c),u=n.createProgram(a);return dt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:a,source:c,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:a,source:c,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},c1(n,t,u))}function c1(n,t,e){const s={},o={},r={},i=[];let c,a,u,d=null,l=null;l=n.getUniformLocation(e,"NAN",!1),dt().getNumber("WEBGL_VERSION")===1&&(d=n.getUniformLocation(e,"INFINITY",!1));const f=!1;for(let m=0;m<t.variableNames.length;m++){const x=t.variableNames[m];s[x]=n.getUniformLocation(e,x,f),s[`offset${x}`]=n.getUniformLocation(e,`offset${x}`,f),t.enableShapeUniforms&&(o[`${x}Shape`]=n.getUniformLocation(e,`${x}Shape`,f),r[`${x}TexShape`]=n.getUniformLocation(e,`${x}TexShape`,f))}return t.enableShapeUniforms&&(c=n.getUniformLocation(e,"outShape",f),u=n.getUniformLocation(e,"outShapeStrides",f),a=n.getUniformLocation(e,"outTexShape",f)),t.customUniforms&&t.customUniforms.forEach((m,x)=>{i[x]=n.getUniformLocation(e,m.name,f)}),{uniformLocations:s,customUniformLocations:i,infLoc:d,nanLoc:l,inShapesLocations:o,inTexShapesLocations:r,outShapeLocation:c,outShapeStridesLocation:u,outTexShapeLocation:a}}function qg(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const o=e.logicalShape,r=t[s],i=r.shape;if(!ve(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const c=e.texShape,a=r.isUniform?null:r.texData.texShape;if(!ve(c,a))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${c} and ${a} must match`)})}function AO(n,t,e,s,o){t.program.enableShapeUniforms||(qg(t.inShapeInfos,e),qg([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(t.webGLProgram),dt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN),e.forEach((a,u)=>{const d=t.program.variableNames[u],l=t.uniformLocations[d],f=t.uniformLocations[`offset${d}`],m=t.inShapesLocations[`${d}Shape`],x=t.inTexShapesLocations[`${d}TexShape`];if(m){const{uniformShape:v}=_m(t.program.packedInputs,a.shape,a.texData.texShape);switch(v.length){case 1:n.gl.uniform1iv(m,new Int32Array(v));break;case 2:n.gl.uniform2iv(m,new Int32Array(v));break;case 3:n.gl.uniform3iv(m,new Int32Array(v));break;case 4:n.gl.uniform4iv(m,new Int32Array(v));break}}if(x&&n.gl.uniform2i(x,a.texData.texShape[0],a.texData.texShape[1]),l!=null){if(a.isUniform){if(pt(a.shape)<2)n.gl.uniform1f(l,a.uniformValues[0]);else{let v=a.uniformValues;v instanceof Float32Array||(v=new Float32Array(v)),n.gl.uniform1fv(l,v)}return}a.texData.slice!=null&&f!=null&&n.gl.uniform1i(f,a.texData.slice.flatOffset),n.setInputMatrixTexture(a.texData.texture.texture,l,u)}});const c=t.outShapeLocation;if(c)switch(s.shape.length){case 1:n.gl.uniform1iv(c,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(c,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(c,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(c,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const a=Ut(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(a));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(a));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(a));break}}t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((a,u)=>{const d=t.customUniformLocations[u],l=o[u];if(a.type==="float")n.gl.uniform1fv(d,l);else if(a.type==="vec2")n.gl.uniform2fv(d,l);else if(a.type==="vec3")n.gl.uniform3fv(d,l);else if(a.type==="vec4")n.gl.uniform4fv(d,l);else if(a.type==="int")n.gl.uniform1iv(d,l);else if(a.type==="ivec2")n.gl.uniform2iv(d,l);else if(a.type==="ivec3")n.gl.uniform3iv(d,l);else if(a.type==="ivec4")n.gl.uniform4iv(d,l);else throw Error(`uniform type ${a.type} is not supported yet.`)}),n.executeProgram()}function kO(n,t,e){let s="";t.concat(e).forEach(i=>{const c=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const a=i.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:l}=_m(n.packedInputs,i.shape,a);let f="",m="",x="";if(d.length===1&&n.packedInputs){const N=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];f=`${N[0]>1}_${N[1]>1}`}else if(d.length===2&&!n.packedInputs)m=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!n.packedInputs){const N=Ut(d);x=`${N[0]===a[1]}_${N[N.length-1]===a[1]}`}const v=i.shape.length,b=d.length===2&&ve(i.shape,a),w=pt(i.shape)===1,A=ri(i.shape,e.shape),C=!n.packedInputs&&v===e.shape.length&&ve(a,e.texData.texShape),I=n.packedInputs||d.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${v}_${C}_${u?l:""}_${d.length}_${w}_${A}_${b}_${f}_${m}_${x}_${I}_${c}`}else{const a=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${a}_${c}`}});const o=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+o+`${dt().getNumber("WEBGL_VERSION")}`,r}function Ln(n){return dt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $O{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Qi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Tn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ku(["r","c","d"],t):Tr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SO{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Qi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Tn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ku(["r","c","d"],t):Tr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NO{constructor(t){this.variableNames=["A"],this.outTexUsage=Zn.DOWNLOAD;const e=Tn();this.outputShape=t,this.userCode=`
      ${o1}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TO{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Zn.DOWNLOAD;const e=Tn();this.outputShape=t,this.userCode=`
      ${o1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EO{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Tn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?vm():ym(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${s.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RO{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Tn();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let o="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let c=0;c<=1;c++){const a=i*2+c;o+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${c};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${a}] = values[0];
            } else if (offset == 1) {
              result[${a}] = values[1];
            } else if (offset == 2) {
              result[${a}] = values[2];
            } else {
              result[${a}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?vm():ym(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n){const t=Tn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return gP(n,e)}function BO(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return bP(n,t)}function FO(n){const t=new Uint16Array([0,1,2,2,1,3]);return wP(n,t)}function vc(n,t,e,s,o,r){IP(t,e);const i=CP(n),c=n.TEXTURE_2D;return Ft(n,()=>n.bindTexture(c,i)),Ft(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ft(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ft(n,()=>n.texParameteri(c,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ft(n,()=>n.texParameteri(c,n.TEXTURE_MAG_FILTER,n.NEAREST)),dt().getNumber("WEBGL_VERSION")===1?Ft(n,()=>n.texImage2D(c,0,s,t,e,0,o,r,null)):Ft(n,()=>n.texStorage2D(c,1,s,t,e)),Ft(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function l1(n){return n.internalFormatFloat}function MO(n,t,e,s){const[o,r]=xc(t,e);return vc(n,o,r,l1(s),s.textureFormatFloat,n.FLOAT)}function u1(n){return n.internalFormatHalfFloat}function VO(n,t,e,s){const[o,r]=xc(t,e);return vc(n,o,r,u1(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function h1(n){return n.downloadTextureFormat}function LO(n,t,e,s){const[o,r]=xc(t,e);return vc(n,o,r,h1(s),n.RGBA,n.UNSIGNED_BYTE)}function d1(n){return n.internalFormatPackedFloat}function PO(n,t,e,s){const[o,r]=ki(t,e);return vc(n,o,r,d1(s),n.RGBA,n.FLOAT)}function p1(n){return n.internalFormatPackedHalfFloat}function OO(n,t,e,s){const[o,r]=ki(t,e);return vc(n,o,r,p1(s),n.RGBA,s.textureTypeHalfFloat)}function zO(n,t,e){return Ft(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Wg(n,t,"clipSpacePos",e,3,20,0)&&Wg(n,t,"uv",e,2,20,12)}function WO(n,t,e,s,o,r){Ft(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,c,a;o instanceof Uint8Array?(i=new Uint8Array(e*s*4),c=n.UNSIGNED_BYTE,a=n.RGBA):(i=new Float32Array(e*s*4),c=n.FLOAT,a=r.internalFormatPackedFloat),i.set(o),dt().getNumber("WEBGL_VERSION")===2?Ft(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,c,i)):Ft(n,()=>n.texImage2D(n.TEXTURE_2D,0,a,e,s,0,n.RGBA,c,i)),Ft(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function UO(n,t,e){Ft(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?dt().getNumber("WEBGL_VERSION")===2?Ft(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):Ft(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):dt().getNumber("WEBGL_VERSION")===2?Ft(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):Ft(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Ft(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function GO(n,t,e,s){const o=n.createBuffer();Ft(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const c=4*4*t*e;return Ft(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,c,n.STREAM_READ)),Ft(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Ft(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function qO(n,t,e){const s=n,o=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function HO(n,t,e,s){const[o,r]=xc(t,e),i=4,c=new Uint8Array(lP(t*e,i));return Ft(n,()=>n.readPixels(0,0,o,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}function jO(n,t,e,s,o,r,i,c){const a=n,u=new Float32Array(uP(r,i));return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,u),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),u}function KO(n,t,e){const s=new Float32Array(t*e*4);return Ft(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fh{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=dt().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,iP(e,t)):this.gl=Fs(e);let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),dt().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Mc(this.gl,r),fs(this.gl,i))this.textureHalfFloatExtension=Mc(this.gl,i);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),fs(this.gl,o))this.colorBufferHalfFloatExtension=Mc(this.gl,o);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",fs(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(fs(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=BO(this.gl),this.indexBuffer=FO(this.gl),this.framebuffer=AP(this.gl),this.textureConfig=xm(this.gl,this.textureHalfFloatExtension)}get debug(){return dt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ft(t,()=>t.finish()),Ft(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ft(t,()=>t.deleteFramebuffer(this.framebuffer)),Ft(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ft(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ft(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),MO(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),VO(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),LO(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),UO(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,o){this.throwIfDisposed(),WO(this.gl,t,e,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),OO(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),PO(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Ug(this.gl,this.framebuffer),this.outputTexture=null),Ft(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>HO(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,o,r,i){return jO(this.gl,t,e,s,o,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return qO(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const o=GO(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(dt().getBool("WEBGL_FENCE_API_ENABLED")){const o=t,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=o.clientWaitSync(r,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},e=r}else dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>KO(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=DO(e));const s=vP(e);return Ft(e,()=>e.attachShader(s,this.vertexShader)),Ft(e,()=>e.attachShader(s,t)),_P(e,s),this.debug&&Th(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=zO(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Ft(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Th(this.gl,this.program),Ft(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?$P(this.gl,t,e):SP(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ft(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),NP(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[o,r]=ki(e,s);this.setOutputMatrixTextureDriver(t,o,r)}setOutputMatrixWriteRegion(t,e,s,o){this.setOutputMatrixWriteRegionDriver(s,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Th(this.gl,this.program),Vc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ft(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ft(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Mc(this.gl,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Mm(()=>this.disposed||this.isQueryAvailable(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=XO(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&Mm(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Eh(this.gl,t,this.framebuffer),this.debug&&Vc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Eh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Vc(this.gl)):Ug(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const o=this.gl;Eh(o,t,this.framebuffer),this.debug&&Vc(o),this.outputTexture=t,Ft(o,()=>o.viewport(0,0,e,s)),Ft(o,()=>o.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,o){this.throwIfDisposed(),Ft(this.gl,()=>this.gl.scissor(t,e,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function XO(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:YO,bincountImpl:f1,bincountReduceImpl:JO,ceilImpl:ZO,concatImpl:QO,equalImpl:t3,expImpl:e3,expm1Impl:n3,floorImpl:s3,gatherNdImpl:o3,gatherV2Impl:r3,greaterImpl:i3,greaterEqualImpl:a3,lessImpl:c3,lessEqualImpl:l3,linSpaceImpl:u3,logImpl:h3,maxImpl:d3,maximumImpl:p3,minimumImpl:f3,multiplyImpl:m3,negImpl:g3,notEqualImpl:x3,prodImpl:y3,rangeImpl:v3,rsqrtImpl:_3,scatterImpl:b3,sigmoidImpl:w3,simpleAbsImpl:m1,sliceImpl:C3,sparseFillEmptyRowsImpl:I3,sparseReshapeImpl:A3,sparseSegmentReductionImpl:g1,sqrtImpl:k3,stridedSliceImpl:$3,stringNGramsImpl:S3,stringSplitImpl:N3,stringToHashBucketFastImpl:T3,subImpl:E3,tileImpl:R3,topKImpl:D3,transposeImpl:bm,uniqueImpl:B3}=UD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x1(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function $n(n,t){return t===1?[n]:x1(n,t)}function F3(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M3{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Ln(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=$n("rc",this.rank),s=ke(this.rank),o=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let r=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${t[t.length-1-i]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y1{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let s="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${V3(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?vm():ym(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function V3(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?zP(["r","c","d"],"inputShape"):Tr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L3{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,s){const o=jg(e,s),r=Kg(t,o,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=Hg(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const a=this.freeTextures[r].shift();return this.usedTextures[r].push(a),a}let c;return o===mn.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===mn.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===mn.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===mn.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===mn.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(c),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),c}releaseTexture(t,e,s,o){if(this.freeTextures==null)return;const r=jg(s,o),i=Kg(e,r,o);i in this.freeTextures||(this.freeTextures[i]=[]);const c=Hg(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),a=dt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");a!==-1&&this._numBytesAllocated>a?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=c):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const u=this.usedTextures[i],d=u.indexOf(t);if(d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(d,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function P3(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Hg(n,t,e,s,o){const r=O3(t,s);let i;if(o){const[a,u]=ki(n[0],n[1]);i=a*u}else{const[a,u]=xc(n[0],n[1]);i=a*u}const c=P3(e,r);return i*c}function O3(n,t){switch(n){case mn.PACKED_2X2_FLOAT32:return d1(t);case mn.PACKED_2X2_FLOAT16:return p1(t);case mn.UNPACKED_FLOAT32:return l1(t);case mn.UNPACKED_FLOAT16:return u1(t);case mn.PACKED_4X1_UNSIGNED_BYTE:return h1(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function z3(n){return dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?mn.PACKED_2X2_FLOAT32:mn.UNPACKED_FLOAT32:n?mn.PACKED_2X2_FLOAT16:mn.UNPACKED_FLOAT16}function jg(n,t){if(n===Zn.UPLOAD)return mn.PACKED_2X2_FLOAT32;if(n===Zn.RENDER||n==null)return z3(t);if(n===Zn.DOWNLOAD||n===Zn.PIXELS)return mn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Kg(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class po{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Cs="if (isnan(x)) return x;",W3="return x;",Xg="return abs(x);",U3="return (x >= 0.0) ? x : (exp(x) - 1.0);",G3=Cs+`
  return (x < 0.0) ? 0.0 : x;
`,q3=Cs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zr="return x;",H3="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j3="return x;",K3=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,X3=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Y3=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,J3="return 1.0 / (1.0 + exp(-1.0 * x));";class ir{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z3{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);const e=t.length,s=$n("rc",e),o=ke(e),r=F3(e,s),i=s.slice(-2),c=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${c}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3=cv,tz=1e-7,ez=1e-4,Pc={};function nz(n){return n in Pc||(Pc[n]={}),Pc[n]}const sz=dt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),oz=600;function rz(){return dt().global.screen==null?1024:dt().global.screen.height*dt().global.screen.width*window.devicePixelRatio*oz/1024/1024}class Xu extends Dd{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!dt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Fh)e=t;else{const s=Fs(dt().getNumber("WEBGL_VERSION"),t);e=new Fh(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Fs(dt().getNumber("WEBGL_VERSION"));e=new Fh(s),this.binaryCache=nz(dt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new L3(this.gpgpu),this.numMBBeforeWarning=rz(),this.texData=new bx(this,Ao())}nextDataId(){return Xu.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,s){if((dt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||dt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:e,dtype:s,values:t,usage:Zn.UPLOAD,refCount:1}),o}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,o,r){if(dt().getBool("DEBUG")&&this.checkNumericalProblems(e),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:o,values:e,usage:Zn.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:o,complexTensorInfos:r,slice:i,shape:c,isPacked:a}=e;if(i!=null){let f;a?f=new ir(c,zr):f=new po(c,zr);const m=this.runWebGLProgram(f,[{dataId:t,shape:c,dtype:o}],o),x=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),x}if(s!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return s;const u=this.activeTimers!=null;let d;u&&(d=Rn());let l;if(o==="complex64"){const f=this.readSync(r.real.dataId),m=this.readSync(r.imag.dataId);l=go(f,m)}else l=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=Rn()-d),this.convertAndCacheOnCPU(t,l)}async read(t){if(this.pendingRead.has(t)){const x=this.pendingRead.get(t);return new Promise(v=>x.push(v))}const e=this.texData.get(t),{values:s,shape:o,slice:r,dtype:i,complexTensorInfos:c,isPacked:a}=e;if(r!=null){let x;a?x=new ir(o,zr):x=new po(o,zr);const v=this.runWebGLProgram(x,[{dataId:t,shape:o,dtype:i}],i),b=this.read(v.dataId);return this.disposeIntermediateTensorInfo(v),b}if(s!=null)return this.convertAndCacheOnCPU(t);if(dt().getBool("DEBUG")&&!dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&dt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,d;if(i!=="complex64"&&dt().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(t);const x=this.texData.get(d.dataId);u=this.gpgpu.createBufferFromTexture(x.texture.texture,...Fc(o))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(i==="complex64"){const x=await Promise.all([this.read(c.real.dataId),this.read(c.imag.dataId)]),v=x[0],b=x[1];l=go(v,b)}else if(u==null)l=this.getValuesFromTexture(t);else{const x=pt(o);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,x)}if(d!=null&&this.disposeIntermediateTensorInfo(d),u!=null){const x=this.gpgpu.gl;Ft(x,()=>x.deleteBuffer(u))}const f=this.convertAndCacheOnCPU(t,l),m=this.pendingRead.get(t);return this.pendingRead.delete(t),m.forEach(x=>x(f)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ao().removeDataId(t,this),this.pendingDeletes--),f}readToGPU(t,e={}){const s=this.texData.get(t),{values:o,shape:r,slice:i,dtype:c,isPacked:a,texture:u}=s;if(c==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let m;a?m=new ir(r,zr):m=new po(r,zr);const x=this.runWebGLProgram(m,[{dataId:t,shape:r,dtype:c}],c),v=this.readToGPU(x,e);return this.disposeIntermediateTensorInfo(x),v}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const d=this.decode(t,e.customTexShape),l=Ao().makeTensorFromTensorInfo(d),f=this.texData.get(d.dataId);return Object.assign({tensorRef:l},f.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(o=>Do(o));return re(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return re(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!fP(s))throw dt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:o}=this.texData.get(t),r=pt(e);if(dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(t),m=this.texData.get(f.dataId),x=this.gpgpu.downloadMatrixFromPackedTexture(m.texture.texture,...Fc(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(f),x}const i=dt().getBool("WEBGL_PACK")&&o===!0,c=i?Rh(e):e,a=i?new TO(c):new NO(c),u=this.runWebGLProgram(a,[{shape:c,dtype:s,dataId:t}],"float32"),d=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,t();const r=ti(this.activeTimers.map(a=>a.query)).filter(a=>a!=null),i=ti(this.activeTimers.map(a=>a.name)).filter(a=>a!=null);this.activeTimers=e,o&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const a=await Promise.all(r);c.kernelMs=Ww(a),c.getExtraProfileInfo=()=>a.map((u,d)=>({name:i[d],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,c})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rn(),endMs:null}}endTimer(t){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Rn(),t)}async getQueryTime(t){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:o,usage:r,isPacked:i,slice:c}=this.texData.get(t),a=c&&c.origDataId||t,u=this.dataRefCount.get(a);u>1?this.dataRefCount.set(a,u-1):(this.dataRefCount.delete(a),e!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(e,o,r,i)));const d=this.texData.get(t);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=sz){return dt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&pt(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Jn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Q3(t.shape,e)}packedUnaryOp(t,e,s){const o=new ir(t.shape,e),r=this.compileAndRun(o,[t],s);return Ao().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const o=m1(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,o)}if(dt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Xg,t.dtype);const e=new po(t.shape,Xg),s=this.compileAndRun(e,[t]);return Ao().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let o;if(e==="string"&&s!=null&&s.length>0&&na(s[0])){const r=s.map(i=>To(i));o=this.write(r,t,e)}else o=this.write(s,t,e);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:e}}makeOutput(t,e,s){return Ao().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new Z3(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new M3(t.shape),s=!0;return this.runWebGLProgram(e,[t],t.dtype,null,s)}packedReshape(t,e){const s=[pi(t.shape),...fi(t.shape)],o={dtype:t.dtype,shape:s,dataId:t.dataId},r=[pi(e),...fi(e)],i=new y1(r,s),c=!0,a=[s],u=this.runWebGLProgram(i,[o],t.dtype,a,c);return{dataId:u.dataId,shape:e,dtype:u.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:o,shape:r,dtype:i}=s;if(e!=null){const f=pt(r),m=e[0]*e[1]*4;P(f<=m,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const c=Rh(r);let a;o?a=new SO(c):a=new $O(c);const u=!0,d=[e??Fc(c)],l=this.runWebGLProgram(a,[{shape:c,dtype:i,dataId:t}],i,d,u,e);return{dtype:i,shape:r,dataId:l.dataId}}runWebGLProgram(t,e,s,o,r=!1,i){const c=this.makeTensorInfo(t.outputShape,s),a=this.texData.get(c.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===Qi.DENSE){const w=i??Fc(t.outputShape);a.texShape=w.map(A=>A*2)}if(t.outTexUsage!=null&&(a.usage=t.outTexUsage),pt(c.shape)===0)return a.values=gn(c.dtype,0),c;const u=[],d=e.map(w=>{if(w.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let A=this.texData.get(w.dataId);if(A.texture==null){if(!t.packedInputs&&pt(w.shape)<=dt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:w.shape,texData:null,isUniform:!0,uniformValues:A.values};t.packedInputs&&(A.isPacked=!0,A.shape=w.shape)}if(this.uploadToGPU(w.dataId),!!A.isPacked!=!!t.packedInputs)w=A.isPacked?this.unpackTensor(w):this.packTensor(w),u.push(w),A=this.texData.get(w.dataId);else if(A.isPacked&&!ml(A.shape,w.shape)){const C=w,I=w.shape;w.shape=A.shape,w=this.packedReshape(w,I),u.push(w),A=this.texData.get(w.dataId),C.shape=I}return{shape:w.shape,texData:A,isUniform:!1}});this.uploadToGPU(c.dataId);const l={shape:c.shape,texData:a,isUniform:!1},f=kO(t,d,l),m=this.getAndSaveBinary(f,()=>IO(this.gpgpu,t,d,l)),x=this.activeTimers!=null;let v;x&&(v=this.startTimer()),dt().get("ENGINE_COMPILE_ONLY")||AO(this.gpgpu,m,d,l,o),u.forEach(w=>this.disposeIntermediateTensorInfo(w)),x&&(v=this.endTimer(v),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(v)}));const b=dt().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const w=Rn();w-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=w)}if(!dt().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&r===!1){const w=this.unpackTensor(c);return this.disposeIntermediateTensorInfo(c),w}return c}compileAndRun(t,e,s,o,r=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,o,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(dt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=at(()=>{if(!dt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=dt().getBool("DEBUG");dt().set("DEBUG",!1);const e=this.abs(Yt(1e-8)).dataSync()[0];if(dt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?tz:ez}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:o,values:r,texture:i,usage:c,isPacked:a}=e;if(i!=null)return;const u=this.activeTimers!=null;let d;u&&(d=Rn());let l=e.texShape;if(l==null&&(l=RP(s,a),e.texShape=l),r!=null){const f=Rh(s);let m,x=l[1],v=l[0];const b=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(a||!b)&&([x,v]=ki(l[0],l[1])),a?m=new RO(f,b):m=new EO(f,b);const w=b?[v,x]:l,A=this.makeTensorInfo(w,o),C=this.texData.get(A.dataId);b?C.usage=Zn.PIXELS:C.usage=Zn.UPLOAD,C.texShape=w,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(A.dataId),x,v,r);const I=[[v,x]],N=!0,E=this.runWebGLProgram(m,[A],o,I,N),B=this.texData.get(E.dataId);e.texShape=B.texShape,e.isPacked=B.isPacked,e.usage=B.usage,dt().get("ENGINE_COMPILE_ONLY")?this.disposeData(E.dataId):(e.texture=B.texture,e.values=null,this.texData.delete(E.dataId)),this.disposeIntermediateTensorInfo(A),u&&(this.uploadWaitMs+=Rn()-d)}else{const f=this.acquireTexture(l,c,o,a);e.texture=f}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:o}=s;return this.releaseGPUData(t),e!=null&&(s.values=iz(e,o)),s.values}acquireTexture(t,e,s,o){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,o)}computeBytes(t,e){return t[0]*t[1]*Oh(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(e),o(!0)}catch(r){throw r}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await dv(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(s1(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:s,infLoc:o,nanLoc:r,inShapesLocations:i,inTexShapesLocations:c,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:d}=c1(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=s,t.infLoc=o,t.nanLoc=r,t.inShapesLocations=i,t.inTexShapesLocations=c,t.outShapeLocation=a,t.outShapeStridesLocation=u,t.outTexShapeLocation=d}}}Xu.nextDataId=0;function iz(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */sy()&&gy("webgl",()=>new Xu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class mi{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=te(e,s),this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yu=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class _c{constructor(t,e,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=te(e,s);const r=this.outputShape.length;this.enableShapeUniforms=Ln(r);let i="";if(o)if(r===0||pt(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${ke(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const a=$n("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${a[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${a[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${a[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${a[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const az={kernelName:Aa,backendName:"webgl",kernelFunc:Hn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(n){const{inputs:t,backend:e}=n,{real:s,imag:o}=t,r=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(r.dataId),c=Hn({inputs:{x:s},backend:e}),a=Hn({inputs:{x:o},backend:e});return i.complexTensorInfos={real:c,imag:a},r}const cz={kernelName:Wd,backendName:"webgl",kernelFunc:Ko};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _1="return (a < 0.) ? b * a : a;",b1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{alpha:r}=s,i=e.makeTensorInfo([],"float32",Oo(r,"float32")),c=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(b1,o.shape,i.shape):new mi(_1,o.shape,i.shape),a=e.runWebGLProgram(c,[o,i],"float32");return e.disposeIntermediateTensorInfo(i),a}const uz={kernelName:Pl,backendName:"webgl",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w1="return (a < 0.) ? b * a : a;",C1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function hz(n){const{inputs:t,backend:e}=n,{x:s,alpha:o}=t,r=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(C1,s.shape,o.shape):new mi(w1,s.shape,o.shape);return e.runWebGLProgram(r,[s,o],"float32")}const dz={kernelName:ou,backendName:"webgl",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ei="if (isnan(x)) return x;",pz=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,fz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function pe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:o,backend:r})=>{const{x:i}=o,c=r,a=s||i.dtype;if(c.shouldExecuteOnCPU([i])&&e!=null){const l=c.texData.get(i.dataId),f=e(l.values,a);return c.makeTensorInfo(i.shape,a,f)}const u=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let d;return u?d=new ir(i.shape,t):d=new po(i.shape,n),c.runWebGLProgram(d,[i],a)}}function vn({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:r}){return({inputs:i,backend:c})=>{const{a,b:u}=i,d=c;if(s&&a.dtype==="complex64"){const x=d.texData.get(a.dataId),v=d.texData.get(u.dataId),[b,w]=[[x.complexTensorInfos.real,v.complexTensorInfos.real],[x.complexTensorInfos.imag,v.complexTensorInfos.imag]].map(C=>{const[I,N]=C,E={dataId:I.dataId,dtype:I.dtype,shape:a.shape},B={dataId:N.dataId,dtype:N.dtype,shape:u.shape},M=new mi(n,a.shape,u.shape);return d.runWebGLProgram(M,[E,B],Un(I.dtype,N.dtype))}),A=Ko({inputs:{real:b,imag:w},backend:d});return d.disposeIntermediateTensorInfo(b),d.disposeIntermediateTensorInfo(w),A}const l=r||Un(a.dtype,u.dtype);if((a.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([a,u]))&&o!=null){const x=d.texData.get(a.dataId).values,v=d.texData.get(u.dataId).values,b=a.dtype==="string"?_r(x):x,w=a.dtype==="string"?_r(v):v,[A,C]=o(a.shape,u.shape,b,w,l),I=d.makeTensorInfo(C,l),N=d.texData.get(I.dataId);return N.values=A,I}const f=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let m;return f?m=new _c(t,a.shape,u.shape,e):m=new mi(n,a.shape,u.shape),d.runWebGLProgram(m,[a,u],l)}}function Ju(n,t=!1){if(n==="linear")return t?j3:W3;if(n==="relu")return t?X3:G3;if(n==="elu")return t?K3:U3;if(n==="relu6")return t?Y3:q3;if(n==="prelu")return t?C1:w1;if(n==="leakyrelu")return t?b1:_1;if(n==="sigmoid")return t?J3:H3;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I1{constructor(t,e,s,o=!1,r=!1,i=!1,c=null,a=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Ln(this.outputShape.length);const d=o?t[1]:t[2],l=Math.ceil(d/2),f=o?"i * 2, rc.y":"rc.y, i * 2",m=r?"rc.z, i * 2":"i * 2, rc.z",x=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],v=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let b="",w="";c&&(a?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${c}
        }`:u?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${c}
        }`:b=`vec4 activation(vec4 x) {
          ${c}
        }`,w="result = activation(result);");const A=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let C="rc.x",I="rc.x";t[0]<e[0]?C=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(I=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${b}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${l}; i++) {
          int batchA = ${C};
          int batchB = ${I};
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${x[0]} * ${v[0]});
          result += (${x[1]} * ${v[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${A}

        ${w}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yg={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Jg{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=te(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zg="return a * b;";function wm(n){const{inputs:t,backend:e}=n,{a:s,b:o}=t,r=Un(s.dtype,o.dtype);if(s.dtype==="complex64"){const c=e.texData.get(s.dataId),a=e.texData.get(o.dataId),u=new Jg(Yg.REAL,s.shape,o.shape),d=new Jg(Yg.IMAG,s.shape,o.shape),l=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape}],f=e.runWebGLProgram(u,l,"float32"),m=e.runWebGLProgram(d,l,"float32"),x=Ko({inputs:{real:f,imag:m},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),x}if(e.shouldExecuteOnCPU([s,o])){const c=e.texData.get(s.dataId),a=e.texData.get(o.dataId),[u,d]=m3(s.shape,o.shape,c.values,a.values,r),l=e.makeTensorInfo(d,r),f=e.texData.get(l.dataId);return f.values=u,l}let i;return dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new _c(Zg,s.shape,o.shape):i=new mi(Zg,s.shape,o.shape),e.runWebGLProgram(i,[s,o],r)}const mz={kernelName:Ba,backendName:"webgl",kernelFunc:wm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n,t,e){const s=[pi(n.shape),...fi(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},r=[pi(t),...fi(t)],i=new y1(r,s),c=!0,a=[s],u=e.runWebGLProgram(i,[o],n.dtype,a,c);return{dataId:u.dataId,shape:t,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{shape:r}=s,i=e,c=pt(o.shape),a=Ix(r,c),u=pt(a);P(c===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(o.dataId);return d.isPacked&&!ml(o.shape,a)&&!(d.texture!==null&&ml(d.shape,a))?gz(o,a,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:a,dtype:o.dtype})}const xz={kernelName:iu,backendName:"webgl",kernelFunc:Et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qg{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=t;this.outputShape=[o,i];const c=Math.floor(s/4)*4,a=s%4;let u="sumValue += dot(values, ones);";if(e!=null){const l=1/e;u=`sumValue += dot(values * ${ei(l)?l.toPrecision(2):l}, ones);`}let d="";r%s>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${c};
        if (${a===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${a===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${a===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yz{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=t;this.outputShape=[o,i];let c="0.0",a="";e==="prod"?c="1.0":e==="min"?(c="1.0 / 1e-20",a="min"):e==="max"&&(c="-1.0 / 1e-20",a="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");const d=Math.floor(s/4)*4,l=s%4;let f=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${a}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${a}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";e==="all"?(c="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):e==="any"&&(c="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let x="";r%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${c};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${x}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${c});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${d};
        if (${l===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${l===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${l===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Ru(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Rr(n,t,e,s){const o=vz(n.shape);let r=n;for(let i=0;i<o.length;i++){const{inSize:c,windowSize:a,outSize:u}=o[i];let d,l;e==="mean"?d=i===0?new Qg({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:u},c):new Qg({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:u}):d=new yz({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:u},e),l=r,r=s.runWebGLProgram(d,[r],t),l.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(l)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _z{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const o=ke(this.rank),r=bz(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function bz(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let o=0;o<n.length;o++)s[n[o]]=e[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wz{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let d=0;d<s.length;d++)s[d]=t[e[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=ke(this.rank),r=x1("rc",this.rank),i=new Array(this.rank);for(let d=0;d<e.length;d++)i[e[d]]=r[d];const c=`vec2(${i.slice(-2).join()})`,a=`++${r[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${c})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${a}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${a}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zu(n,t,e){const s=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wz(n.shape,t):new _z(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n,t,e,s){const o=t,r=n.shape.length,i=ie(o,n.shape);let c=i;const a=ze(c,r),u=a!=null;let d=n;u&&(d=Zu(n,a,s),c=je(c.length,r)),yn("sum",c,r);const[l,f]=pn(d.shape,c);let m=l;e&&(m=He(l,i));const x=pt(f),b=pt(n.shape)/x,w=Et({inputs:{x:d},attrs:{shape:[b,x]},backend:s}),A=$p(n.dtype),C=Rr(w,A,"sum",s),I=Et({inputs:{x:C},attrs:{shape:m},backend:s});return s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),u&&s.disposeIntermediateTensorInfo(d),I}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qu(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s;return Cz(o,r,i,e)}const Iz={kernelName:du,backendName:"webgl",kernelFunc:Qu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{perm:r}=s,i=e,c=o.shape.length,a=new Array(c);for(let d=0;d<a.length;d++)a[d]=o.shape[r[d]];let u;if(i.shouldExecuteOnCPU([o])){const l=i.texData.get(o.dataId).values,f=bm(l,o.shape,o.dtype,r,a);u=i.makeTensorInfo(a,o.dtype);const m=i.texData.get(u.dataId);m.values=f}else u=Zu(o,r,i);return u}const Az={kernelName:Yr,backendName:"webgl",kernelFunc:Ze};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1=1e3;function gl({a:n,b:t,transposeA:e,transposeB:s,backend:o,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:a=null}){const u=n.shape.length,d=t.shape.length,l=e?n.shape[u-2]:n.shape[u-1],f=s?t.shape[d-1]:t.shape[d-2],m=e?n.shape[u-1]:n.shape[u-2],x=s?t.shape[d-2]:t.shape[d-1],v=n.shape.slice(0,-2),b=t.shape.slice(0,-2),w=pt(v),A=pt(b),I=te(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,x]);P(l===f,()=>`Error in matMul: inner shapes (${l}) and (${f}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const N=e?[w,l,m]:[w,m,l],E=s?[A,x,f]:[A,f,x],B=Et({inputs:{x:n},backend:o,attrs:{shape:N}}),M=Et({inputs:{x:t},backend:o,attrs:{shape:E}}),U=[B,M],G=Math.max(w,A),q=e?B.shape[1]:B.shape[2],tt=r!=null,et=i!=null,Q=a==="leakyrelu",it=a!=null?Ju(a,!0):null,nt=tt||et||Q||it!=null;let Z;if((m===1||x===1)&&q>A1&&nt===!1){let ct=B,ut=M;e&&(ct=Ze({inputs:{x:B},backend:o,attrs:{perm:[0,2,1]}}),U.push(ct)),s&&(ut=Ze({inputs:{x:M},backend:o,attrs:{perm:[0,2,1]}}),U.push(ut));const gt=x!==1,vt=x===1;let Ct=ct;gt&&(Ct=Et({inputs:{x:ct},backend:o,attrs:{shape:[G,q,1]}}),U.push(Ct));const St=x===1?2:1;let At=ut;vt&&(At=Et({inputs:{x:ut},backend:o,attrs:{shape:[G,1,q]}}),U.push(At));const Rt=wm({inputs:{a:Ct,b:At},backend:o});Z=Qu({inputs:{x:Rt},backend:o,attrs:{axis:St,keepDims:!0}}),U.push(Rt)}else{const ct=Un(n.dtype,t.dtype),ut=new I1(N,E,[G,m,x],e,s,tt,it,et,Q),gt=[B,M];if(r!=null&&gt.push(r),et&&gt.push(i),Q){const vt=o.makeTensorInfo([],"float32",Oo(c,"float32"));gt.push(vt),U.push(vt)}Z=o.runWebGLProgram(ut,gt,ct)}const lt=Et({inputs:{x:Z},backend:o,attrs:{shape:I}});U.push(Z);for(const ct of U)o.disposeIntermediateTensorInfo(ct);return lt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:c}=t,{transposeA:a,transposeB:u,activation:d,leakyreluAlpha:l}=s;return gl({a:o,b:r,transposeA:a,transposeB:u,backend:e,bias:i,preluActivationWeights:c,leakyreluAlpha:l,activation:d})}const $z={kernelName:jc,backendName:"webgl",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tx="return abs(x);";function Sz(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=e.texData.get(s.dataId),i=m1(r.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let o;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ir(s.shape,tx):o=new po(s.shape,tx),e.runWebGLProgram(o,[s],s.dtype)}const Nz={kernelName:vl,backendName:"webgl",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=Cs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Ez=pe({opSnippet:Tz}),Rz={kernelName:ra,backendName:"webgl",kernelFunc:Ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz=Cs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Bz=pe({opSnippet:Dz}),Fz={kernelName:ia,backendName:"webgl",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ex="return a + b;",Mz=vn({opSnippet:ex,packedOpSnippet:ex,supportsComplex:!0,cpuKernelImpl:YO}),Vz={kernelName:xi,backendName:"webgl",kernelFunc:Mz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lz{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pz{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uc(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return Hn({inputs:{x:s[0]},backend:e});if(s.length>dt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(s.length/2),u=Uc({inputs:s.slice(0,a),backend:e}),d=Uc({inputs:s.slice(a),backend:e});return Uc({inputs:[u,d],backend:e})}const o=s.map(a=>a.dtype).reduce((a,u)=>Un(a,u)),r=s.map(a=>a.shape),c=dt().getBool("WEBGL_PACK")?new Pz(s[0].shape,r):new Lz(s[0].shape,r);return e.runWebGLProgram(c,s,o)}const Oz={kernelName:Md,backendName:"webgl",kernelFunc:Uc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s,c=o.shape.length,a=ie(r,o.shape);let u=a;const d=ze(u,c);let l=o;d!=null&&(l=Ze({inputs:{x:o},backend:e,attrs:{perm:d}}),u=je(u.length,c)),yn("all",u,c);const[f,m]=pn(l.shape,u),x=pt(m),v=Et({inputs:{x:l},backend:e,attrs:{shape:[-1,x]}}),b=Rr(v,v.dtype,"all",e);let w;if(i){const A=He(f,a);w=Et({inputs:{x:b},backend:e,attrs:{shape:A}})}else w=Et({inputs:{x:b},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(b),d!=null&&e.disposeIntermediateTensorInfo(l),w}const Wz={kernelName:Vd,backendName:"webgl",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s,c=o.shape.length,a=ie(r,o.shape);let u=a;const d=ze(u,c);let l=o;d!=null&&(l=Ze({inputs:{x:o},backend:e,attrs:{perm:d}}),u=je(u.length,c)),yn("any",u,c);const[f,m]=pn(l.shape,u),x=pt(m),v=Et({inputs:{x:l},backend:e,attrs:{shape:[-1,x]}}),b=Rr(v,v.dtype,"any",e);let w;if(i){const A=He(f,a);w=Et({inputs:{x:b},backend:e,attrs:{shape:A}})}else w=Et({inputs:{x:b},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(b),d!=null&&e.disposeIntermediateTensorInfo(l),w}const Gz={kernelName:Ld,backendName:"webgl",kernelFunc:Uz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qz{constructor(t,e,s){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const c=e==="max"?">":"<",a=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${a};
          float candidate = getA(batch, inIdx);
          if (candidate ${c} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hz{constructor(t,e,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const c=this.outputShape,a=c.length,u=ke(a),d=$n("coords",a);let l,f;if(i===1){f=a+1;const M=ke(f);l=`
        ${M} sourceLocR = ${M}(${d.join()}, 0);
        ++${d[a-1]};
        ${M} sourceLocG = ${M}(${d.join()}, 0);
        ++${d[a-2]};
        ${M} sourceLocA = ${M}(${d.join()}, 0);
        --${d[a-1]};
        ${M} sourceLocB = ${M}(${d.join()}, 0);
        --${d[a-2]};`}else f=a,l=`
        ${u} sourceLocR = coords;
        ++${d[a-1]};
        ${u} sourceLocG = coords;
        ++${d[a-2]};
        ${u} sourceLocA = coords;
        --${d[a-1]};
        ${u} sourceLocB = coords;
        --${d[a-2]};`;const m=["x","y","z","w","u","v"].slice(0,f),x="."+m[f-1],v=m.map(M=>"int "+M),b=$n("sourceLocR",f-1).concat("inIdx.r"),w=$n("sourceLocG",f-1).concat("inIdx.g"),A=$n("sourceLocB",f-1).concat("inIdx.b"),C=$n("sourceLocA",f-1).concat("inIdx.a"),I=s==="max"?"greaterThan":"lessThan",N=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${A.join()}),
                             getBestIndicesAChannel(${C.join()})));`,E=`vec4(
            getAChannel(${b.join()}),
            hasNextCol ? getAChannel(${w.join()}) : 0.,
            hasNextRow ? getAChannel(${A.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,B=o?"":`
      float getBestIndicesAChannel(${v.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${v.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${B}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${d[a-1]} < ${c[a-1]-1};
        bool hasNextRow = ${d[a-2]} < ${c[a-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${N}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k1(n,t,e,s=null){let o=t.shape[0],r=t.shape[1];s!=null&&(o=s.shape[0],r=s.shape[1]);const i=Ru(r),c={windowSize:i,inSize:r,batchSize:o,outSize:Math.ceil(r/i)},a=new qz(c,e,s==null),u=[t];s!=null&&u.push(s);const d=n.runWebGLProgram(a,u,"int32");if(d.shape[1]===1)return d;const l=k1(n,t,e,d);return n.disposeIntermediateTensorInfo(d),l}function $1(n,t,e,s=null){const o=s!=null?s.shape:t.shape,r=o[o.length-1],i=Ru(r),c=new Hz(o,i,e,s==null),a=s==null?[t]:[t,s],u=n.runWebGLProgram(c,a,"int32");if(u.shape.length===t.shape.length){const d=$1(n,t,e,u);return n.disposeIntermediateTensorInfo(u),d}return u}function S1(n,t,e,s){const o=[e];if(yn("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,t.shape.length),!dt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],i=n.texData.get(t.dataId),c=i!==null&&i.isPacked;let a=t;c&&(a=n.unpackTensor(t),r.push(a));const[u,d]=pn(a.shape,o),l=pt(d),f=Et({inputs:{x:a},backend:n,attrs:{shape:[-1,l]}});r.push(f);const m=k1(n,f,s);r.push(m);const x=Et({inputs:{x:m},backend:n,attrs:{shape:u}});return r.forEach(v=>n.disposeIntermediateTensorInfo(v)),x}return $1(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r}=s;let i=ie(r,o.shape);const c=ze(i,o.shape.length);let a=o;const u=[];c!=null&&(a=Ze({inputs:{x:o},backend:e,attrs:{perm:c}}),u.push(a),i=je(i.length,a.shape.length)),yn("argMax",[i[0]],a.shape.length);const d=S1(e,a,i[0],"max");return u.forEach(l=>e.disposeIntermediateTensorInfo(l)),d}const Kz={kernelName:_l,backendName:"webgl",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r}=s;let i=ie(r,o.shape);const c=ze(i,o.shape.length);let a=o;const u=[];c!=null&&(a=Ze({inputs:{x:o},backend:e,attrs:{perm:c}}),u.push(a),i=je(i.length,a.shape.length)),yn("argMin",[i[0]],a.shape.length);const d=S1(e,a,i[0],"min");return u.forEach(l=>e.disposeIntermediateTensorInfo(l)),d}const Yz={kernelName:bl,backendName:"webgl",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=Cs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Zz=pe({opSnippet:Jz}),Qz={kernelName:aa,backendName:"webgl",kernelFunc:Zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW=Cs+"return log(x + sqrt(x * x + 1.0));",eW=pe({opSnippet:tW}),nW={kernelName:ca,backendName:"webgl",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW=Cs+`
  return atan(x);
`,oW=pe({opSnippet:sW}),rW={kernelName:la,backendName:"webgl",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW=pz+`
  return atan(a, b);
`,aW=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+fz+`
  return result;
`,cW=vn({opSnippet:iW,packedOpSnippet:aW}),lW={kernelName:ha,backendName:"webgl",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW=Cs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,hW=pe({opSnippet:uW}),dW={kernelName:ua,backendName:"webgl",kernelFunc:hW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ta{constructor(t,e,s,o=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,c=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,d=t.dilationWidth,l=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg",b=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,w=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let A="0.0";if(v||(A="-1.0 / 1e-20"),s){const M=">=";this.userCode=`
        const ivec2 strides = ivec2(${c}, ${a});
        const ivec2 pads = ivec2(${m}, ${x});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?b:w:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let I=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(I="avgValue / count");const N=Math.floor(i/4)*4,E=i%4,B=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${c}, ${a});
      const ivec2 pads = ivec2(${m}, ${x});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${N}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${B}
          }

          int xC = xCCorner + ${N};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${B}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${B}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${B}
          }
        }
        setOutput(${I});
      }
    `}}class Cm{constructor(t,e,s,o=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,c=t.strideDepth,a=t.strideHeight,u=t.strideWidth,d=t.dilationDepth,l=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterDepth,x=t.effectiveFilterHeight,v=t.effectiveFilterWidth,b=t.padInfo.front,w=t.padInfo.top,A=t.padInfo.left;this.outputShape=t.outShape;const C=e==="avg";let I="0.0";if(C||(I="-1.0 / 1e-20"),s){const G=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${c}, ${a}, ${u});
        const ivec3 pads = ivec3(${b}, ${w}, ${A});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${x};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${v};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${G} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${x} * ${v} +
                      wR * ${v} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const N="max";let E=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(E="avgValue / count");const B=Math.floor(i/4)*4,M=i%4,U=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${N}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${c}, ${a}, ${u});
      const ivec3 pads = ivec3(${b}, ${w}, ${A});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${x};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${B}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${U}
            }

            int xC = xCCorner + ${B};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${U}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${U}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${U}
            }
          }
          setOutput(${E});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;yc(o,"avgPool");const{filterSize:r,strides:i,pad:c,dimRoundingMode:a}=s,u=1;P(In(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const d=_s(o.shape,r,i,u,c,a);if(d.filterWidth===1&&d.filterHeight===1&&ve(d.inShape,d.outShape))return Hn({inputs:{x:o},backend:e});const l=new ta(d,"avg",!1);return e.runWebGLProgram(l,[o],"float32")}const fW={kernelName:wl,backendName:"webgl",kernelFunc:pW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:r,strides:i,pad:c,dimRoundingMode:a,dataFormat:u}=s,d=[1,1,1],l=xo(o.shape,r,i,d,c,a,u),f=new Cm(l,"avg",!1);return e.runWebGLProgram(f,[o],"float32")}const gW={kernelName:Cl,backendName:"webgl",kernelFunc:mW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xW{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,c=t.dilationWidth,a=t.effectiveFilterHeight,u=t.effectiveFilterWidth,d=a-1-t.padInfo.top,l=u-1-t.padInfo.left,f=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${l});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${c}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class yW{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,o=t.filterWidth,r=t.strideDepth,i=t.strideHeight,c=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,d=t.dilationWidth,l=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,x=l-1-t.padInfo.front,v=f-1-t.padInfo.top,b=m-1-t.padInfo.left,w=1/(e*s*o);this.userCode=`
      const ivec3 pads = ivec3(${x}, ${v}, ${b});
      const float avgMultiplier = float(${w});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,i=r,{filterSize:c,strides:a,pad:u,dimRoundingMode:d}=s,l=[1,1,1],f=xo(i.shape,c,a,l,u,d),m=new yW(f);return e.runWebGLProgram(m,[o],i.dtype)}const _W={kernelName:Od,backendName:"webgl",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,i=r;yc([o,r],"avgPoolGrad");const{filterSize:c,strides:a,pad:u}=s,d=_s(i.shape,c,a,1,u),l=new xW(d);return e.runWebGLProgram(l,[o],i.dtype)}const wW={kernelName:Pd,backendName:"webgl",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n){const{inputs:t,backend:e,attrs:s}=n,{a:o,b:r}=t,{transposeA:i,transposeB:c}=s;return gl({a:o,b:r,transposeA:i,transposeB:c,backend:e})}const IW={kernelName:Il,backendName:"webgl",kernelFunc:CW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(t,e,s,o,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],te(t,e),te(t,s);let c="0.0";o!=null&&(te(t,o),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let a="1.0";r!=null&&(te(t,r),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${c};
        float scale = ${a};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kW{constructor(t,e,s,o,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],te(t,e),te(t,s);let c="vec4(0.0)";o!=null&&(te(t,o),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let a="vec4(1.0)";r!=null&&(te(t,r),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${c};
        vec4 scale = ${a};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:o,variance:r,offset:i,scale:c}=n;P(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(c==null||o.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:a}=e;a==null&&(a=.001);const u=[s,o,r];let d=null;i!=null&&(d=i.shape,u.push(i));let l=null;c!=null&&(l=c.shape,u.push(c));const f=dt().getBool("WEBGL_PACK_NORMALIZATION")?new kW(s.shape,o.shape,r.shape,d,l,a):new AW(s.shape,o.shape,r.shape,d,l,a);return t.runWebGLProgram(f,u,u[0].dtype)},SW={kernelName:Ml,backendName:"webgl",kernelFunc:$W};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NW{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ke(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=TW(this.rank);let o;const r=t.map((i,c)=>`sourceLoc.${Ad[c]} = start[${c}] + coords.${Ad[c]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const Ad=["x","y","z","w","u","v"];function TW(n){if(n===1)return"sourceLoc";if(n<=6)return Ad.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EW{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ke(this.rank),s=$n("coords",this.rank),o=$n("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${r})`,c=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,a=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((d,l)=>`start[${l}]`).join()});`:t.map((d,l)=>`${o[l]} = ${s[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${c}
        ${a}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n,t,e,s){const o=s.texData.get(n.dataId),r=s.makeTensorInfo(e,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,o),i.refCount=1,i.shape=e,i.dtype=n.dtype;let c=Fp(t,Ut(n.shape));o.slice&&(c+=o.slice.flatOffset),i.slice={flatOffset:c,origDataId:o.slice&&o.slice.origDataId||n.dataId};const a=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,a+1),r}function Ri(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:r,size:i}=s,[c,a]=Cu(o,r,i);if(Rp(o,c,a),pt(a)===0)return e.makeTensorInfo(a,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){const l=e.texData.get(o.dataId),f=C3(l.values,c,a,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,f)}const{isPacked:u}=e.texData.get(o.dataId),d=Bp(o.shape,c,a);if(u||!d){const l=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EW(a):new NW(a),f=[c];return e.runWebGLProgram(l,[o],o.dtype,f)}return e.uploadToGPU(o.dataId),RW(o,c,a,e)}const DW={kernelName:hu,backendName:"webgl",kernelFunc:Ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:r,crops:i}=s;P(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=r.reduce((A,C)=>A*C),a=rc(o.shape,r,c),u=ic(a.length,r.length),d=ac(o.shape,r,c),l=wf(i,r.length),f=Cf(d,i,r.length),m=[],x=Et({inputs:{x:o},backend:e,attrs:{shape:a}}),v=Ze({inputs:{x},backend:e,attrs:{perm:u}}),b=Et({inputs:{x:v},backend:e,attrs:{shape:d}}),w=Ri({inputs:{x:b},backend:e,attrs:{begin:l,size:f}});return m.push(x),m.push(v),m.push(b),m.forEach(A=>e.disposeIntermediateTensorInfo(A)),w},FW={kernelName:Al,backendName:"webgl",kernelFunc:BW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:r}=t,{size:i}=s,c=e.readSync(o.dataId),a=e.readSync(r.dataId),u=f1(c,a,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,u)}const VW={kernelName:zd,backendName:"webgl",kernelFunc:MW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n){const{inputs:t,backend:e}=n,{s0:s,s1:o}=t,r=e.readSync(s.dataId),i=e.readSync(o.dataId),c=te(Array.from(r),Array.from(i));return e.makeTensorInfo([c.length],"int32",Int32Array.from(c))}const PW={kernelName:Rx,backendName:"webgl",kernelFunc:LW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW="return float(a != b);",N1=vn({opSnippet:OW,cpuKernelImpl:x3,dtype:"bool"}),zW={kernelName:Ql,backendName:"webgl",kernelFunc:N1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.texData.get(s.dataId);return Hn({inputs:{x:o.complexTensorInfos.real},backend:e})}const WW={kernelName:up,backendName:"webgl",kernelFunc:bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW="return float(int(x));";function GW(n,t){const e=new po(n.shape,UW),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Hn({inputs:{x:o},backend:e});const i=Ge(o.shape),c=kd({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),a=Ko({inputs:{real:c,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(c),a}if(o.dtype==="complex64"){const i=bc({inputs:{input:o},backend:e}),c=kd({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),c}if(!Ax(o.dtype,r)){const i=Hn({inputs:{x:o},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(r==="int32")return GW(o,e);if(r==="bool"){const i=e.makeTensorInfo([],"bool",gn("bool",1)),a=N1({inputs:{a:o,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),a}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const qW={kernelName:da,backendName:"webgl",kernelFunc:kd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nx="return ceil(x);",HW=pe({opSnippet:nx,packedOpSnippet:nx,cpuKernelImpl:ZO}),jW={kernelName:pa,backendName:"webgl",kernelFunc:HW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KW{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XW{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{clipValueMin:r,clipValueMax:i}=s;let c;dt().getBool("WEBGL_PACK_CLIP")?c=new XW(o.shape):c=new KW(o.shape);const a=[[r],[i]];return e.runWebGLProgram(c,[o],o.dtype,a)}const JW={kernelName:fa,backendName:"webgl",kernelFunc:YW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZW{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function QW(n){const{inputs:t,backend:e}=n,{x:s}=t,o=e.texData.get(s.dataId),r=new ZW(s.shape),i=[sx(s,o.complexTensorInfos.real),sx(s,o.complexTensorInfos.imag)];return e.runWebGLProgram(r,i,i[0].dtype)}const t4={kernelName:kl,backendName:"webgl",kernelFunc:QW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e4{constructor(t){this.outputShape=[],this.outputShape=Ys(t,1),this.variableNames=t.map((i,c)=>`T${c}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const c=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${c}));`)}const o=e.length,r=e[e.length-1];s.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n4{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ys(t,e);const s=this.outputShape,o=s.length,r=ke(o),i=$n("coords",o),c=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((v,b)=>`T${b}`);const a=new Array(t.length-1);a[0]=t[0][e];for(let v=1;v<a.length;v++)a[v]=a[v-1]+t[v][e];const u=c[e],d=c.slice(-2),l=c.join();let f=`if (${u} < ${a[0]}) {
        return getChannel(
            getT0(${l}), vec2(${d.join()}));
        }`;for(let v=1;v<a.length;v++){const b=a[v-1];f+=`
        if (${u} < ${a[v]}  && ${u} >= ${a[v-1]}) {
          return getChannel(
            getT${v}(${Oc(c,u,b)}),
            vec2(${Oc(d,u,b)}));
        }`}const m=a.length,x=a[a.length-1];f+=`
        return getChannel(
          getT${m}(${Oc(c,u,x)}),
          vec2(${Oc(d,u,x)}));`,this.userCode=`
      float getValue(${c.map(v=>"int "+v)}) {
        ${f}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${s[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${s[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${s[o-2]} &&
            ${i[o-1]} < ${s[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Oc(n,t,e){const s=n.indexOf(t);return n.map((r,i)=>i===s?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(n){const{inputs:t,backend:e}=n,{input:s}=t,o=e.texData.get(s.dataId);return Hn({inputs:{x:o.complexTensorInfos.imag},backend:e})}const s4={kernelName:np,backendName:"webgl",kernelFunc:th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(n,t,e){const s=n[0].dtype;if(s==="complex64"){const d=n.map(v=>bc({inputs:{input:v},backend:e})),l=n.map(v=>th({inputs:{input:v},backend:e})),f=Hr(d,t,e),m=Hr(l,t,e),x=Ko({inputs:{real:f,imag:m},backend:e});return d.forEach(v=>e.disposeIntermediateTensorInfo(v)),l.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),x}let o=e.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const d=n.map(w=>{const A=pt(w.shape.slice(t));return Et({inputs:{x:w},backend:e,attrs:{shape:[-1,A]}})}),l=d.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),f=Ys(d.map(w=>w.shape),1),m=d[0].shape[0]===1,x=QO(l,f,s,m),v=Ys(n.map(w=>w.shape),t),b=e.makeTensorInfo(v,s,x);return d.forEach(w=>e.disposeIntermediateTensorInfo(w)),b}if(n.length>dt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const d=Math.floor(n.length/2),l=Hr(n.slice(0,d),t,e),f=Hr(n.slice(d),t,e),m=Hr([l,f],t,e);return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(f),m}if(dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const d=new n4(n.map(l=>l.shape),t);return e.runWebGLProgram(d,n,s)}const{tensors2D:r,outShape:i}=o4(n,t,e),c=new e4(r.map(d=>d.shape)),a=e.runWebGLProgram(c,r,s);r.forEach(d=>e.disposeIntermediateTensorInfo(d));const u=Et({inputs:{x:a},attrs:{shape:i},backend:e});return e.disposeIntermediateTensorInfo(a),u}function o4(n,t,e){const s=Ys(n.map(r=>r.shape),t);return{tensors2D:n.map(r=>Et({inputs:{x:r},attrs:{shape:[-1,pt(r.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s,r=ie(o,t[0].shape)[0],i=Ys(t.map(u=>u.shape),r);if(pt(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter(u=>pt(u.shape)>0);if(c.length===1)return Hn({inputs:{x:c[0]},backend:e});const a=c.map(u=>u.shape);return vf(a,r),Hr(c,r,e)}const r4={kernelName:$l,backendName:"webgl",kernelFunc:T1};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E1{constructor(t,e=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,c=t.padInfo.left,a=t.strideHeight,u=t.strideWidth,d=t.dilationHeight,l=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,x=Math.floor(t.inChannels/4)*4,v=t.inChannels%4,b=t.dataFormat==="channelsLast",w=b?1:2,A=b?2:3,C=b?3:1;let I="",N="";s&&(o?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:I=`
          float activation(float x) {
            ${s}
          }
        `,N="result = activation(result);");const E=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${w}], coords[${A}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${x}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${b}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${v===1}) {

              if (${b}) {
                dotProd +=
                    getX(batch, xR, xC, ${x}) *
                    getW(wR, wC, ${x}, d2);
              } else {
                dotProd +=
                    getX(batch, ${x}, xR, xC) *
                    getW(wR, wC, ${x}, d2);
              }

            } else if (${v===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2)
              );

              if (${b}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${v===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2),
                getW(wR, wC, ${x} + 2, d2)
              );

              if (${b}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1),
                  getX(batch, xR, xC, ${x} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC),
                  getX(batch, ${x} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${N}
        setOutput(result);
      }
    `}}class i4{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,o=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,c=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,d=t.dilationWidth,l=t.filterDepth,f=t.filterHeight,m=t.filterWidth,x=Math.floor(t.inChannels/4)*4,v=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${c});
      const ivec3 pads = ivec3(${e}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${a};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${x}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${v===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${x}) *
                  getW(wF, wR, wC, ${x}, d2);
              } else if (${v===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${v===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1),
                  getX(batch, xF, xR, xC, ${x} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2),
                  getW(wF, wR, wC, ${x} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a4{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);const{dataFormat:s}=e,o=Tn(),r=s==="channelsLast",i=r?0:1,c=r?1:2,a=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let u="";for(let d=0;d<=1;d++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.y + ${l};
          pos = rc.x + ${d};

          ${a}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${c}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+l}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+l}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1({x:n,filter:t,convInfo:e,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:c=null}){const a=n.shape,u=s.texData.get(n.dataId),d=e.inChannels,l=a[0]*a[1]*a[2],f=e.outChannels,m=e.dataFormat==="channelsLast",x=!1,v=!1;let b;const w=[];if(r!=null&&!m&&r.shape.length===3){const I=Ze({inputs:{x:r},backend:s,attrs:{perm:[1,2,0]}});w.push(I),r=I}if(!((l===1||f===1)&&d>A1)&&u.isPacked&&m&&u.texture!=null&&a[2]%2!==0&&ve(u.shape.slice(-3),a.slice(-3))){const I=a[0]*a[1]*(a[2]+1),N={dataId:n.dataId,shape:[1,I,e.inChannels],dtype:n.dtype},E=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,P(ml(u.shape,N.shape),()=>`packed reshape ${u.shape} to ${N.shape} isn't free`);const B=Et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});w.push(B);const M=gl({a:N,b:B,backend:s,transposeA:x,transposeB:v,bias:o,activation:c,preluActivationWeights:r,leakyreluAlpha:i}),U=s.texData.get(M.dataId);P(U.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=E,U.shape=e.outShape,b=Hn({inputs:{x:M},backend:s}),b.shape=e.outShape,w.push(M)}else{const I=m?n:Ze({inputs:{x:n},backend:s,attrs:{perm:[0,2,3,1]}}),N=I.shape,E=N[0]*N[1]*N[2],B=Et({inputs:{x:I},backend:s,attrs:{shape:[1,E,e.inChannels]}}),M=Et({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),U=gl({a:B,b:M,transposeA:x,transposeB:v,backend:s,bias:o,activation:c,preluActivationWeights:r,leakyreluAlpha:i}),G=[e.batchSize,e.outHeight,e.outWidth,e.outChannels],q=Et({inputs:{x:U},backend:s,attrs:{shape:G}});b=m?q:Ze({inputs:{x:q},backend:s,attrs:{perm:[0,3,1,2]}}),m||(w.push(I),w.push(q)),w.push(B),w.push(M),w.push(U)}for(const I of w)s.disposeIntermediateTensorInfo(I);return b}function D1({x:n,filter:t,convInfo:e,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:c=null}){const{filterWidth:a,filterHeight:u,inChannels:d,outWidth:l,outHeight:f,dataFormat:m}=e,x=m==="channelsLast",v=a*u*d,b=f*l,w=[v,b],A=!0,C=!1,I=[];if(r!=null&&!x&&r.shape.length===3){const gt=Ze({inputs:{x:r},backend:s,attrs:{perm:[1,2,0]}});I.push(gt),r=gt}const N=Et({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),E=Et({inputs:{x:t},backend:s,attrs:{shape:[1,v,pt(t.shape)/v]}});I.push(N),I.push(E);const B=new a4(w,e),M=[N.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],U=s.runWebGLProgram(B,[N],"float32",M),G=Et({inputs:{x:U},backend:s,attrs:{shape:[1,w[0],w[1]]}});I.push(U),I.push(G);const q=o!=null,tt=r!=null,et=c==="leakyrelu",Q=c?Ju(c,!0):null,it=new I1(G.shape,E.shape,[1,b,e.outChannels],A,C,q,Q,tt,et),nt=[G,E];if(o&&nt.push(o),tt&&nt.push(r),et){const gt=s.makeTensorInfo([],"float32",Oo(i,"float32"));nt.push(gt),I.push(gt)}const Z=s.runWebGLProgram(it,nt,"float32"),lt=[1,f,l,e.outChannels],ct=Et({inputs:{x:Z},backend:s,attrs:{shape:lt}}),ut=x?ct:Ze({inputs:{x:ct},backend:s,attrs:{perm:[0,3,1,2]}});x||I.push(ct),I.push(Z);for(const gt of I)s.disposeIntermediateTensorInfo(gt);return ut}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dataFormat:a,dilations:u,dimRoundingMode:d}=s,l=yo(a),f=xn(o.shape,r.shape,i,u,c,d,!1,l);let m;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))m=R1({x:o,filter:r,convInfo:f,backend:e});else if(dt().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)m=D1({x:o,filter:r,convInfo:f,backend:e});else{const v=new E1(f);m=e.runWebGLProgram(v,[o,r],"float32")}const x=Et({inputs:{x:m},backend:e,attrs:{shape:f.outShape}});return e.disposeIntermediateTensorInfo(m),x}const l4={kernelName:Sl,backendName:"webgl",kernelFunc:c4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,o=t.padInfo.top,r=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class h4{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,r=t.strideWidth,i=t.dataFormat==="channelsLast",c=e-1-t.padInfo.top,a=s-1-t.padInfo.left,u=i?1:2,d=i?2:3,l=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class d4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,o=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,c=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${c};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class p4{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,o=t.filterWidth,r=t.strideDepth,i=t.strideHeight,c=t.strideWidth,a=e-1-t.padInfo.front,u=s-1-t.padInfo.top,d=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${a}, ${u}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,pad:c,dataFormat:a,dimRoundingMode:u,filterShape:d}=s,l=yo(a),f=xn(o.shape,d,i,1,c,u,!1,l),m=new u4(f);return e.runWebGLProgram(m,[o,r],"float32")}const m4={kernelName:Ud,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{inputShape:i,strides:c,pad:a,dataFormat:u,dimRoundingMode:d}=s,l=yo(u),f=xn(i,r.shape,c,1,a,d,!1,l),m=new h4(f);return e.runWebGLProgram(m,[o,r],"float32")}const x4={kernelName:Nl,backendName:"webgl",kernelFunc:g4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dilations:a}=s,u=zo(o.shape,r.shape,i,a,c),d=new i4(u);return e.runWebGLProgram(d,[o,r],"float32")}const v4={kernelName:Tl,backendName:"webgl",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,pad:c,filterShape:a}=s,u=zo(o.shape,a,i,1,c),d=new d4(u);return e.runWebGLProgram(d,[o,r],"float32")}const b4={kernelName:Gd,backendName:"webgl",kernelFunc:_4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{pad:i,strides:c,inputShape:a}=s,u=zo(a,r.shape,c,1,i),d=new p4(u);return e.runWebGLProgram(d,[o,r],"float32")}const C4={kernelName:qd,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4=Ei+`
  return cos(x);
`,A4=pe({opSnippet:I4}),k4={kernelName:ma,backendName:"webgl",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,S4=pe({opSnippet:$4}),N4={kernelName:ga,backendName:"webgl",kernelFunc:S4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T4{constructor(t,e,s,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,c,a,u]=t,[d]=e,[l,f]=s;this.outputShape=[d,l,f,u];const m=o==="bilinear"?1:0,[x,v]=[`${c-1}.0`,`${a-1}.0`],[b,w,A]=l>1?[`${(c-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${x} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${x}`],[C,I,N]=f>1?[`${(a-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${v} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${v}`];this.userCode=`
      const float height_ratio = float(${b});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${w};
        float width_scale = ${I};

        float in_y = ${A};
        if( in_y < 0.0 || in_y > ${x} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${N};
        if( in_x < 0.0 || in_x > ${v} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:o,boxes:r,boxInd:i}=t,{cropSize:c,method:a,extrapolationValue:u}=s,d=new T4(o.shape,r.shape,c,a,u);return e.runWebGLProgram(d,[o,r,i],"float32")},R4={kernelName:jd,backendName:"webgl",kernelFunc:E4};var ea;(function(n){n.Prod="*",n.Sum="+"})(ea||(ea={}));class ox{constructor(t,e,s,o){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===ea.Prod?"1.0":"0.0",c=s?i:`getX(${rx(r,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1];let u="",d="";s?(u=o?`end != ${a-1}`:"end != 0",d=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${a}`:"end >= pow2",d=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ke(r)} coords = getOutputCoords();
        int end = ${ix(r,"coords",this.op)};
        float val = ${c};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${d};
          ${ix(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${rx(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function rx(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function ix(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,t,e,s,o,r){const i=t.shape.length,c=ze([s],i);let a=t;c!=null&&(a=Ze({inputs:{x:t},backend:e,attrs:{perm:c}}));const u=je(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const d=a.shape[u];let l=Hn({inputs:{x:a},backend:e});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const m=new ox(n,a.shape,!1,r),x=[[f]],v=l;l=e.runWebGLProgram(m,[l],l.dtype,x),e.disposeIntermediateTensorInfo(v)}if(o){const f=new ox(n,a.shape,o,r),m=l;l=e.runWebGLProgram(f,[l],l.dtype),e.disposeIntermediateTensorInfo(m)}if(c!=null){const f=Wo(c),m=Ze({inputs:{x:l},backend:e,attrs:{perm:f}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(a),m}return l}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,exclusive:i,reverse:c}=s;return B1(ea.Prod,o,e,r,i,c)}const B4={kernelName:Hd,backendName:"webgl",kernelFunc:D4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,exclusive:i,reverse:c}=s;return B1(ea.Sum,o,e,r,i,c)}const M4={kernelName:El,backendName:"webgl",kernelFunc:F4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,weights:r}=t,{size:i,binaryOutput:c}=s;if(o.shape.length===1){const a=e.readSync(o.dataId),u=e.readSync(r.dataId),d=f1(a,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,d)}else if(o.shape.length===2){const a=e.bufferSync(o),u=e.bufferSync(r),d=JO(a,u,i,c);return e.makeTensorInfo(d.shape,r.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const L4={kernelName:Dx,backendName:"webgl",kernelFunc:V4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P4{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockSize:r,dataFormat:i}=s,c=o.shape[0],a=i==="NHWC"?o.shape[1]:o.shape[2],u=i==="NHWC"?o.shape[2]:o.shape[3],d=i==="NHWC"?o.shape[3]:o.shape[1],l=a*r,f=u*r,m=d/(r*r),x=i==="NHWC"?[c,l,f,m]:[c,m,l,f],v=new P4(x,r,i);return e.runWebGLProgram(v,[o],o.dtype)}const z4={kernelName:Kd,backendName:"webgl",kernelFunc:O4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F1{constructor(t,e=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.filterHeight,c=t.filterWidth,a=t.outChannels/t.inChannels;let u="",d="";s&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,d="result = activation(result);");const l=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${c}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${d}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M1{constructor(t,e=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.outChannels/t.inChannels,c=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,d=t.filterHeight,l=t.filterWidth,f=l;let m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<l;w++)m+=`
          vec4 xTexelC${w*2};
          int xTexelC${w*2}Ready;
          vec4 xTexelC${w*2+1};
          int xTexelC${w*2+1}Ready;
          vec4 xC${w};`;m+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let w=0;w<l;w++)m+=`
          xTexelC${w*2} = vec4(0.0);
          xTexelC${w*2}Ready = 0;
          xTexelC${w*2+1} = vec4(0.0);
          xTexelC${w*2+1}Ready = 0;
          xC${w} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let w=0;w<(f+1)/2;w++){const A=w*2;if(m+=`
          xC = xCCorner + ${A*u};
          `,a===1){if(A<l&&(c%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }
              `,u===1&&A>0?m+=`
                xC${A} = vec4(xTexelC${A-2}.zw, xTexelC${A}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${A} = vec4(previous.zw, xTexelC${A}.xy);
                  } else {
                    xC${A} = vec4(0.0, 0.0, xTexelC${A}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xC${A} = xTexelC${A};
                `,A+1<l)){const C=c%2===0?wx(u):u;u%2===0&&c%2===1||u%2!==0&&c%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                    xTexelC${A+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${A+1}.zw = vec2(0.0);
                    }
                    xTexelC${A+1}Ready = 1;
                  }
                  `,u>1&&(m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                      xTexelC${A} = getX(batch, xR, xCOffset, d1);
                      xTexelC${A}Ready = 1;
                    }
                    `),m+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.xy);
                  `):C===1?m+=`
                    xC${A+1} = xTexelC${A};
                    `:m+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                      xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${A+1}.zw = vec2(0.0);
                      }
                      xTexelC${A+1}Ready = 1;
                    }

                    xC${A+1} = xTexelC${A+1};
                    `}}else A<l&&(c%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.0);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
              `,A+1<l&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${A+1} = vec4(xTexelC${A+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(
                  xTexelC${A}.xy, xTexelC${A+1}.xy);
              `,A+1<l&&(m+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
                `)));A<l&&(m+=`
            wTexel = getW(r, ${A}, d1, q);
            dotProd += xC${A} * vec4(wTexel.xz, wTexel.xz);
          `,A+1<l&&(m+=`
              wTexel = getW(r, ${A+1}, d1, q);
              dotProd += xC${A+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let x="",v="";s&&(o?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`vec4 activation(vec4 x) {
          ${s}
        }`,v="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${b}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dilations:a,dimRoundingMode:u}=s;let d=a;d==null&&(d=[1,1]),P(In(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const l=xn(o.shape,r.shape,i,d,c,u,!0);let f;dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&l.strideWidth<=2&&l.outChannels/l.inChannels===1?f=new M1(l):f=new F1(l);const m=[[l.padInfo.top,l.padInfo.left],[l.strideHeight,l.strideWidth],[l.dilationHeight,l.dilationWidth],[l.inHeight,l.inWidth]];return e.runWebGLProgram(f,[o,r],"float32",m)}const U4={kernelName:Rl,backendName:"webgl",kernelFunc:W4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,o=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class q4{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,o=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,c=s-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${a}; dm++) {
              int d2 = d1 * ${a} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,dy:r}=t,{strides:i,dilations:c,pad:a,dimRoundingMode:u,filterShape:d}=s,l=xn(o.shape,d,i,c,a,u,!0),f=new G4(l);return e.runWebGLProgram(f,[o,r],"float32")}const j4={kernelName:Xd,backendName:"webgl",kernelFunc:H4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,filter:r}=t,{strides:i,dilations:c,pad:a,dimRoundingMode:u,inputShape:d}=s,l=xn(d,r.shape,i,c,a,u,!0),f=new q4(l);return e.runWebGLProgram(f,[o,r],"float32")}const X4={kernelName:Yd,backendName:"webgl",kernelFunc:K4};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y4{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n){const{inputs:t,backend:e}=n,{x:s}=t,o=[...s.shape,...s.shape],r=pt(s.shape),i=Et({inputs:{x:s},backend:e,attrs:{shape:[r]}}),c=new Y4(r),a=e.runWebGLProgram(c,[i],i.dtype),u=Et({inputs:{x:a},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}const Z4={kernelName:Bx,backendName:"webgl",kernelFunc:J4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q4{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:o,strideHeight:r,strideWidth:i,filterHeight:c,filterWidth:a,dilationHeight:u,dilationWidth:d}=t,{top:l,left:f}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${l}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${c}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${a}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r}=t,{strides:i,pad:c,dilations:a}=s,u=ec(o.shape,r.shape,i,c,"NHWC",a);let d;const l=new Q4(u);d=e.runWebGLProgram(l,[o,r],"float32");const f=Et({inputs:{x:d},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(d),f}const eU={kernelName:Dl,backendName:"webgl",kernelFunc:tU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:t,backend:e,attrs:s}=n,{equation:o}=s,r=t,{allDims:i,summedDims:c,idDims:a}=Ef(o,r.length);Df(i.length,a,r);const{path:u,steps:d}=Bf(c,a),l=d.length;let f=null,m=i.length;const x=[];for(let v=0;v<l;++v){for(const b of d[v]){const{permutationIndices:w,expandDims:A}=Rf(m,a[b]);let C;Ff(w)?C=r[b]:(C=Ze({inputs:{x:r[b]},backend:e,attrs:{perm:w}}),x.push(C));const I=C.shape.slice();for(let N=0;N<A.length;++N)I.splice(A[N],0,1);ve(C.shape,I)||(C=Et({inputs:{x:C},backend:e,attrs:{shape:I}}),x.push(C)),f===null?f=C:(f=wm({inputs:{a:C,b:f},backend:e}),x.push(f))}v<l-1&&(u[v]>=0&&(f=Qu({inputs:{x:f},backend:e,attrs:{axis:u[v]-(i.length-m),keepDims:!1}}),x.push(f)),m--)}for(const v of x)v!==f&&e.disposeIntermediateTensorInfo(v);return f}const sU={kernelName:Fx,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU="return (x >= 0.0) ? x : (exp(x) - 1.0);",rU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,iU=pe({opSnippet:oU,packedOpSnippet:rU}),aU={kernelName:ya,backendName:"webgl",kernelFunc:iU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU="return (b >= 1.0) ? a : a * (b + 1.0);",lU=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,uU=n=>{const{inputs:t,backend:e}=n,{dy:s,y:o}=t,r=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(lU,s.shape,o.shape):new mi(cU,s.shape,o.shape);return e.runWebGLProgram(r,[s,o],s.dtype)},hU={kernelName:Jd,backendName:"webgl",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=`
  return vec4(equal(a, b));
`,pU="return float(a == b);",fU=vn({opSnippet:pU,packedOpSnippet:dU,dtype:"bool",cpuKernelImpl:t3}),mU={kernelName:Bl,backendName:"webgl",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${If};
  float a1 = ${Af};
  float a2 = ${kf};
  float a3 = ${$f};
  float a4 = ${Sf};
  float a5 = ${Nf};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,xU=pe({opSnippet:gU}),yU={kernelName:va,backendName:"webgl",kernelFunc:xU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU=Ei+`
  return exp(x);
`,_U=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,V1=pe({opSnippet:vU,packedOpSnippet:_U,cpuKernelImpl:e3,dtype:"float32"}),bU={kernelName:_a,backendName:"webgl",kernelFunc:V1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(n){const{inputs:t,attrs:e,backend:s}=n,{dim:o}=e,{input:r}=t,i=r.shape.length,c=r.shape.slice();let a=o;return o<0&&(P(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),a=i+o+1),c.splice(a,0,1),Et({inputs:{x:r},backend:s,attrs:{shape:c}})}const wU={kernelName:Fl,backendName:"webgl",kernelFunc:$d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ax="return exp(x) - 1.0;",CU=pe({opSnippet:ax,packedOpSnippet:ax,cpuKernelImpl:n3}),IU={kernelName:ba,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cx{constructor(t,e,s){this.variableNames=["real","imag"];const o=e[1];this.outputShape=e;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${o}.0`:"1.0";let c;if(t==="real")c="return real * expR - imag * expI;";else if(t==="imag")c="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${c}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n,t,e){const s=e.texData.get(n.dataId),o=pt(n.shape),r=n.shape[n.shape.length-1],i=o/r,c=Et({inputs:{x:n},backend:e,attrs:{shape:[i,r]}}),a=c.shape,u=new cx("real",a,t),d=new cx("imag",a,t),l=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:a},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:a}],f=e.runWebGLProgram(u,l,"float32"),m=e.runWebGLProgram(d,l,"float32"),x=Ko({inputs:{real:f,imag:m},backend:e});e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m);const v=Et({inputs:{x},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(x),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(n){const{inputs:t,backend:e}=n,{input:s}=t;return L1(s,!1,e)}const kU={kernelName:Zd,backendName:"webgl",kernelFunc:AU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $U{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wc(n){const{backend:t,attrs:e}=n,{shape:s,value:o}=e;let{dtype:r}=e;if(r=r||sa(o),r==="string"){const i=Sn(r,pt(s));return i.fill(o),t.makeTensorInfo(s,r,i)}else{const i=new $U(s,o),c=[[o]];return t.runWebGLProgram(i,[],r,c)}}const SU={kernelName:Qd,backendName:"webgl",kernelFunc:wc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NU{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU={kernelName:tp,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,o=new NU(e.shape);return s.runWebGLProgram(o,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lx="return floor(x);",EU=pe({opSnippet:lx,packedOpSnippet:lx,cpuKernelImpl:s3}),RU={kernelName:wa,backendName:"webgl",kernelFunc:EU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,BU=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,FU=vn({opSnippet:DU,packedOpSnippet:BU,dtype:"int32"}),MU={kernelName:Ca,backendName:"webgl",kernelFunc:FU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(t){this.variableNames=["A"];const e=Tn(),[s,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LU{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Tn(),[s,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:eC,backendName:"webgl",kernelFunc:OU};let Wr;function OU(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:o}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,c=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[a,u]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],d=[u,a],l=[u,a,r];(c||i)&&(Wr==null&&(Wr=document.createElement("canvas").getContext("2d")),Wr.canvas.width=a,Wr.canvas.height=u,Wr.drawImage(o,0,0,a,u),o=Wr.canvas);const f=e.makeTensorInfo(d,"int32");e.texData.get(f.dataId).usage=Zn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(f.dataId),o);const m=dt().getBool("WEBGL_PACK")?new LU(l):new VU(l),x=e.runWebGLProgram(m,[f],"int32");return e.disposeData(f.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:c}=t,{strides:a,pad:u,dataFormat:d,dilations:l,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=s,v=yo(d),b=xn(o.shape,r.shape,a,l,u,f,!1,v);let w;const A=[];if(b.filterHeight===1&&b.filterWidth===1&&b.dilationHeight===1&&b.dilationWidth===1&&b.strideHeight===1&&b.strideWidth===1&&(b.padInfo.type==="SAME"||b.padInfo.type==="VALID"))w=R1({x:o,filter:r,convInfo:b,backend:e,bias:i,activation:m,preluActivationWeights:c,leakyreluAlpha:x});else if(dt().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)w=D1({x:o,filter:r,convInfo:b,backend:e,bias:i,activation:m,preluActivationWeights:c,leakyreluAlpha:x});else{const I=i!=null,N=c!=null,E=m==="leakyrelu",B=m?Ju(m,!1):null,M=new E1(b,I,B,N,E),U=[o,r],G=(q,tt)=>{if(tt==="NCHW"&&q.shape.length===1&&q.shape[0]!==1){const et=Et({inputs:{x:q},backend:e,attrs:{shape:[q.shape[0],1,1]}});return A.push(et),et}return q};if(I&&U.push(G(i,d)),N&&U.push(G(c,d)),E){const q=e.makeTensorInfo([],"float32",Oo(x,"float32"));U.push(q),A.push(q)}w=e.runWebGLProgram(M,U,"float32")}const C=Et({inputs:{x:w},backend:e,attrs:{shape:b.outShape}});return A.push(w),A.forEach(I=>e.disposeIntermediateTensorInfo(I)),C}const WU={kernelName:Kc,backendName:"webgl",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:c}=t,{strides:a,pad:u,dilations:d,dimRoundingMode:l,activation:f,leakyreluAlpha:m}=s,x=[];let v=d;v==null&&(v=[1,1]),P(In(a,v),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${v}'`);const b=xn(o.shape,r.shape,a,v,u,l,!0),w=dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,A=f?Ju(f,w):null,C=[o,r],I=i!=null,N=c!=null,E=f==="leakyrelu";if(I&&C.push(i),N&&C.push(c),E){const G=e.makeTensorInfo([],"float32",Oo(m,"float32"));C.push(G),x.push(G)}let B;w?B=new M1(b,I,A,N,E):B=new F1(b,I,A,N,E);const M=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],U=e.runWebGLProgram(B,C,"float32",M);return x.forEach(G=>e.disposeIntermediateTensorInfo(G)),U}const GU={kernelName:Ux,backendName:"webgl",kernelFunc:UU};class qU{constructor(t,e,s){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=s;const o=ke(e.length),r=ke(s.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(n){const{inputs:t,backend:e}=n,{params:s,indices:o}=t,r=o.shape,i=r[r.length-1],c=pt(s.shape),[a,u,d,l]=Ep(s,o),f=Et({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),m=Et({inputs:{x:s},backend:e,attrs:{shape:[pt(s.shape)/d,d]}});if(e.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const w=e.readSync(o.dataId),A=e.bufferSync(s),C=o3(w,A,s.dtype,u,i,d,l,s.shape,c);return e.makeTensorInfo(a,s.dtype,C.values)}const x=new qU(i,l,[u,d]),v=e.runWebGLProgram(x,[m,f],m.dtype),b=Et({inputs:{x:v},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(v),b}const jU={kernelName:Mx,backendName:"webgl",kernelFunc:HU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KU{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ke(this.rank),o=XU(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function XU(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${e[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,indices:r}=t,{axis:i,batchDims:c}=s,a=ie(i,o.shape)[0];if(dt().get("DEBUG")){const A=e.readSync(r.dataId),C=o.shape[a];for(let I=0;I<A.length;++I){const N=A[I];P(N<=C-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${C-1}]`)}}const u=Vf(o,r,a,c),d=pt(r.shape),l=[],f=Et({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=Et({inputs:{x:r},backend:e,attrs:{shape:[u.batchSize,d/u.batchSize]}});l.push(f),l.push(m);const x=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const A=e.bufferSync(m),C=e.bufferSync(f),I=r3(C,A,x);return l.forEach(N=>e.disposeIntermediateTensorInfo(N)),e.makeTensorInfo(u.outputShape,I.dtype,I.values)}const v=new KU(f.shape,x),b=e.runWebGLProgram(v,[f,m],f.dtype);l.push(b);const w=Et({inputs:{x:b},backend:e,attrs:{shape:u.outputShape}});return l.forEach(A=>e.disposeIntermediateTensorInfo(A)),w}const YU={kernelName:Vl,backendName:"webgl",kernelFunc:P1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU="return float(a > b);",ZU=`
  return vec4(greaterThan(a, b));
`,QU=vn({opSnippet:JU,packedOpSnippet:ZU,cpuKernelImpl:i3,dtype:"bool"}),tG={kernelName:Ll,backendName:"webgl",kernelFunc:QU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG="return float(a >= b);",nG=`
  return vec4(greaterThanEqual(a, b));
`,sG=vn({opSnippet:eG,packedOpSnippet:nG,dtype:"bool",cpuKernelImpl:a3}),oG={kernelName:Ia,backendName:"webgl",kernelFunc:sG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n){const{inputs:t,backend:e}=n,{input:s}=t;return L1(s,!0,e)}const iG={kernelName:ep,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG="return float(!isnan(x) && !isinf(x));",cG=pe({opSnippet:aG,dtype:"bool"}),lG={kernelName:ka,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG="return float(isinf(x));",hG=pe({opSnippet:uG,dtype:"bool"}),dG={kernelName:$a,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG="return float(isnan(x));",fG=pe({opSnippet:pG,dtype:"bool"}),mG={kernelName:Sa,backendName:"webgl",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gG="return float(a < b);",xG=`
  return vec4(lessThan(a, b));
`,yG=vn({opSnippet:gG,packedOpSnippet:xG,cpuKernelImpl:c3,dtype:"bool"}),vG={kernelName:Ol,backendName:"webgl",kernelFunc:yG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G="return float(a <= b);",bG=`
  return vec4(lessThanEqual(a, b));
`,wG=vn({opSnippet:_G,packedOpSnippet:bG,cpuKernelImpl:l3,dtype:"bool"}),CG={kernelName:zl,backendName:"webgl",kernelFunc:wG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const{backend:t,attrs:e}=n,{start:s,stop:o,num:r}=e,i=u3(s,o,r);return t.makeTensorInfo([i.length],"float32",i)}const AG={kernelName:Vx,backendName:"webgl",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG=Ei+`
  return x < 0.0 ? 0./0. : log(x);
`,$G=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,SG=pe({opSnippet:kG,packedOpSnippet:$G,cpuKernelImpl:h3}),NG={kernelName:Na,backendName:"webgl",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=Ei+`
  return log(1.0 + x);
`,EG=pe({opSnippet:TG}),RG={kernelName:Ta,backendName:"webgl",kernelFunc:EG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG="return float(a >= 1.0 && b >= 1.0);",BG=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,FG=vn({opSnippet:DG,packedOpSnippet:BG,dtype:"bool"}),MG={kernelName:Wl,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG="return float(!(x >= 1.0));",LG=pe({opSnippet:VG}),PG={kernelName:Ul,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG="return float(a >= 1.0 || b >= 1.0);",zG=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,WG=vn({opSnippet:OG,packedOpSnippet:zG,dtype:"bool"}),UG={kernelName:Gl,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GG{constructor(t,e,s,o,r){this.variableNames=["x"],this.outputShape=[];const i=e,c=t[3]-1;this.outputShape=t;let a;const u=`float(${s}) + float(${o}) * sum`;r===.5?a=`inversesqrt(${u})`:r===1?a=`1.0/(${u})`:a=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${c}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${a};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qG{constructor(t,e,s,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,c=t[3]-1;this.outputShape=t;let a;const u=`float(${s}) + float(${o}) * sum`;r===.5?a=`inversesqrt(${u})`:r===1?a=`1.0/(${u})`:a=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{depthRadius:r,bias:i,alpha:c,beta:a}=s,u=dt().getBool("WEBGL_PACK_NORMALIZATION")?new qG(o.shape,r,i,c,a):new GG(o.shape,r,i,c,a);return e.runWebGLProgram(u,[o],o.dtype)},jG={kernelName:ql,backendName:"webgl",kernelFunc:HG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KG{constructor(t,e,s,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o,y:r,dy:i}=t,{depthRadius:c,bias:a,alpha:u,beta:d}=s,l=new KG(o.shape,c,a,u,d);return e.runWebGLProgram(l,[o,r,i],o.dtype)},YG={kernelName:sp,backendName:"webgl",kernelFunc:XG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(n,t,e,s){const o=pt(t),i=pt(n.shape)/o,c=Et({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),a=Rr(c,n.dtype,"max",s),u=Et({inputs:{x:a},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(a),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O1(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reductionIndices:r,keepDims:i}=s,c=o.shape.length,a=ie(r,o.shape);let u=a;const d=ze(u,c),l=d!=null,f=e.shouldExecuteOnCPU([o]);let m=o;if(l){if(f){const C=e.texData.get(m.dataId).values,I=new Array(c);for(let B=0;B<I.length;B++)I[B]=o.shape[d[B]];const N=bm(C,o.shape,o.dtype,d,I);m=e.makeTensorInfo(I,o.dtype);const E=e.texData.get(m.dataId);E.values=N}else m=Zu(o,d,e);u=je(u.length,c)}yn("max",u,c);const[x,v]=pn(m.shape,u);let b=x;i&&(b=He(x,a));let w;if(f){const C=e.texData.get(m.dataId).values,I=d3(C,pt(v),b,o.dtype);w=e.makeTensorInfo(b,o.dtype);const N=e.texData.get(w.dataId);N.values=I}else w=JG(m,v,b,e);return l&&e.disposeIntermediateTensorInfo(m),w}const ZG={kernelName:Hl,backendName:"webgl",kernelFunc:O1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG=v1+`
  return max(a, b);
`,tq=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Yu+`
  return result;
`,eq=vn({opSnippet:QG,packedOpSnippet:tq,cpuKernelImpl:p3}),nq={kernelName:Ea,backendName:"webgl",kernelFunc:eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t;yc(o,"maxPool");const{filterSize:r,strides:i,pad:c,dimRoundingMode:a}=s,u=1;P(In(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const d=_s(o.shape,r,i,u,c,a);if(d.filterWidth===1&&d.filterHeight===1&&ve(d.inShape,d.outShape))return Hn({inputs:{x:o},backend:e});const l=new ta(d,"max",!1);return e.runWebGLProgram(l,[o],o.dtype)}const oq={kernelName:jl,backendName:"webgl",kernelFunc:sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{filterSize:r,strides:i,pad:c,dataFormat:a,dimRoundingMode:u}=s,d=[1,1,1],l=xo(o.shape,r,i,d,c,u,a),f=new Cm(l,"max",!1);return e.runWebGLProgram(f,[o],o.dtype)}const iq={kernelName:Kl,backendName:"webgl",kernelFunc:rq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,o=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,c=r-1-t.padInfo.top,a=i-1-t.padInfo.left,u=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class cq{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,o=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,a=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,l=a-1-t.padInfo.front,f=u-1-t.padInfo.top,m=d-1-t.padInfo.left,x=a*u*d-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${f}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${a};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${x} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r}=t,i=r,{filterSize:c,strides:a,pad:u,dimRoundingMode:d}=s,l=[1,1,1],f=xo(i.shape,c,a,l,u,d),m=new Cm(f,"max",!0),x=e.runWebGLProgram(m,[i],i.dtype),v=new cq(f),b=e.runWebGLProgram(v,[o,x],i.dtype);return e.disposeIntermediateTensorInfo(x),b}const uq={kernelName:rp,backendName:"webgl",kernelFunc:lq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hq(n){const{inputs:t,backend:e,attrs:s}=n,{dy:o,input:r,output:i}=t,c=r;yc([r,i],"maxPoolGrad");const{filterSize:a,strides:u,pad:d,dimRoundingMode:l}=s,f=_s(c.shape,a,u,1,d,l),m=!0,x=new ta(f,"max",m),v=e.runWebGLProgram(x,[c],c.dtype),b=new aq(f),w=e.runWebGLProgram(b,[o,v],c.dtype);return e.disposeIntermediateTensorInfo(v),w}const dq={kernelName:op,backendName:"webgl",kernelFunc:hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(n,t,e,s){let o=new ta(e,"max",!1);const r=s.runWebGLProgram(o,[n],"float32");o=new ta(e,"max",!0,!0,t);const i=s.runWebGLProgram(o,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={kernelName:Lx,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:c}=t,a=e;P(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];P(In(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const d=_s(s.shape,o,r,u,i),[l,f]=pq(s,c,d,a);return[l,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(n,t,e,s){const o=pt(t),i=pt(n.shape)/o,c=Et({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),a=Rr(c,"float32","mean",s),u=Et({inputs:{x:a},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(a),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq={kernelName:Xl,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:o,axis:r}=t,i=e,c=s.shape.length,a=ie(r,s.shape);let u=a;const d=ze(u,c),l=d!=null,f=i.shouldExecuteOnCPU([s]),m=[];let x=s;if(l){if(f){const I=i.texData.get(x.dataId).values,N=new Array(c);for(let M=0;M<N.length;M++)N[M]=s.shape[d[M]];const E=bm(I,s.shape,s.dtype,d,N);x=i.makeTensorInfo(N,s.dtype);const B=i.texData.get(x.dataId);B.values=E}else x=Zu(s,d,i);m.push(x),u=je(u.length,c)}yn("sum",u,c);const[v,b]=pn(x.shape,u);let w=v;o&&(w=He(v,a));const A=mq(x,b,w,i);for(const C of m)i.disposeIntermediateTensorInfo(C);return A}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xq(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s,c=o.shape.length,a=ie(r,o.shape);let u=a;const d=ze(u,c);let l=o;d!=null&&(l=Ze({inputs:{x:o},backend:e,attrs:{perm:d}}),u=je(u.length,o.shape.length)),yn("min",u,c);const[f,m]=pn(l.shape,u),x=pt(m),v=Et({inputs:{x:l},backend:e,attrs:{shape:[-1,x]}}),b=Rr(v,v.dtype,"min",e);let w;if(i){const A=He(f,a);w=Et({inputs:{x:b},backend:e,attrs:{shape:A}})}else w=Et({inputs:{x:b},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(b),d!=null&&e.disposeIntermediateTensorInfo(l),w}const yq={kernelName:Yl,backendName:"webgl",kernelFunc:xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=v1+`
  return min(a, b);
`,_q=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Yu+`
  return result;
`,bq=vn({opSnippet:vq,packedOpSnippet:_q,cpuKernelImpl:f3}),wq={kernelName:Ra,backendName:"webgl",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cq{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((d,l)=>d[0]+t[l]+d[1]);const o=t.length,r=ke(o),i=e.map(d=>d[0]).join(","),c=e.map((d,l)=>d[0]+t[l]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${c});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iq{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((x,v)=>x[0]+t[v]+x[1]);const o=t.length,r=ke(o),i=e.map(x=>x[0]).join(","),c=e.map((x,v)=>x[0]+t[v]).join(","),a=$n("rc",o),u=$n("source",o),d=`${a[o-1]} < ${this.outputShape[o-1]}`,l=o===1?"source":`vec2(${u.slice(-2).join()})`,f=s==="reflect"?0:1;let m="";if(o===1){const x=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;m=`
        ${r} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${a[o-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{const x=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;m=`
        ${r} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${a[o-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${a[o-2]} += 1;
        if(${a[o-2]} < ${this.outputShape[o-2]}) {
          ${x}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${a[o-1]} += 1;
          if(${d}) {
            ${x}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${c});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:o,mode:r}=e,i=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iq(s.shape,o,r):new Cq(s.shape,o,r);return t.runWebGLProgram(i,[s],s.dtype)},kq={kernelName:Jl,backendName:"webgl",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q=`if (b == 0.0) return NAN;
  return mod(a, b);`,Sq=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Yu+`
  return result;
`,Nq=vn({opSnippet:$q,packedOpSnippet:Sq}),Tq={kernelName:Da,backendName:"webgl",kernelFunc:Nq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eq{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rq=`
if (a == b) {
  return 1.0;
};
return a / b;`,Dq=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,z1=vn({opSnippet:Rq,packedOpSnippet:Dq,checkOutOfBounds:!0}),Bq={kernelName:xa,backendName:"webgl",kernelFunc:z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ux="return a - b;",W1=vn({opSnippet:ux,packedOpSnippet:ux,supportsComplex:!0,cpuKernelImpl:E3}),Fq={kernelName:Xa,backendName:"webgl",kernelFunc:W1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{dim:r}=s,i=ie([r],o.shape),c=O1({inputs:{x:o},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),a=He(c.shape,i),u=Et({inputs:{x:c},backend:e,attrs:{shape:a}}),d=W1({inputs:{a:o,b:u},backend:e}),l=V1({inputs:{x:d},backend:e}),f=Qu({inputs:{x:l},backend:e,attrs:{axis:i,keepDims:!1}}),m=Et({inputs:{x:f},backend:e,attrs:{shape:a}}),x=z1({inputs:{a:l,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),x}const Mq={kernelName:mu,backendName:"webgl",kernelFunc:U1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vq(n){const{inputs:t,backend:e,attrs:s}=n,{logits:o}=t,{numSamples:r,seed:i,normalized:c}=s,a=c?o:U1({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),u=a.shape[0],d=a.shape[1],l=new Eq(u,d,r),f=[[i]],m=e.runWebGLProgram(l,[a],"int32",f);return c||e.disposeIntermediateTensorInfo(a),m}const Lq={kernelName:Px,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pq=Cs+`
  return -x;
`,Oq=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function zq(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const r=e.texData.get(s.dataId),[i,c]=g3(r.values,s.shape,s.dtype);return e.makeTensorInfo(c,s.dtype,i)}let o;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ir(s.shape,Oq):o=new po(s.shape,Pq),e.runWebGLProgram(o,[s],s.dtype)}const Wq={kernelName:Zl,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=lf;function Gq(n){Jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a}=s,u=e.readSync(o.dataId),d=e.readSync(r.dataId),{selectedIndices:l}=Uq(u,d,i,c,a);return e.makeTensorInfo([l.length],"int32",new Int32Array(l))}const qq={kernelName:ip,backendName:"webgl",kernelFunc:Gq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=uf;function jq(n){Jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,padToMaxOutputSize:u}=s,d=e.readSync(o.dataId),l=e.readSync(r.dataId),{selectedIndices:f,validOutputs:m}=Hq(d,l,i,c,a,u);return[e.makeTensorInfo([f.length],"int32",new Int32Array(f)),e.makeTensorInfo([],"int32",new Int32Array([m]))]}const Kq={kernelName:ap,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=hf;function Yq(n){Jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:o,scores:r}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,softNmsSigma:u}=s,d=e.readSync(o.dataId),l=e.readSync(r.dataId),f=i,m=c,x=a,v=u,{selectedIndices:b,selectedScores:w}=Xq(d,l,f,m,x,v);return[e.makeTensorInfo([b.length],"int32",new Int32Array(b)),e.makeTensorInfo([w.length],"float32",new Float32Array(w))]}const Jq={kernelName:cp,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(t,e,s,o){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qq=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:o}=t,{depth:r,onValue:i,offValue:c}=s,a=pt(o.shape),u=new Zq(a,r,i,c),d=Et({inputs:{x:o},backend:e,attrs:{shape:[a]}}),l=e.runWebGLProgram(u,[d],o.dtype);e.disposeIntermediateTensorInfo(d);const f=[...o.shape,r],m=Et({inputs:{x:l},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(l),m},tH={kernelName:eu,backendName:"webgl",kernelFunc:Qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xl(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const o=bc({inputs:{input:s},backend:e}),r=xl({inputs:{x:o},backend:e}),i=th({inputs:{input:s},backend:e}),c=xl({inputs:{x:i},backend:e}),a=Ko({inputs:{real:r,imag:c},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),a}else return wc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const eH={kernelName:yu,backendName:"webgl",kernelFunc:xl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=bc({inputs:{input:s},backend:e}),r=G1({inputs:{x:o},backend:e}),i=th({inputs:{input:s},backend:e}),c=xl({inputs:{x:i},backend:e}),a=Ko({inputs:{real:r,imag:c},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),a}else return wc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const nH={kernelName:tu,backendName:"webgl",kernelFunc:G1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n){const{inputs:t,backend:e,attrs:s}=n,{axis:o}=s;if(t.length===1)return $d({inputs:{input:t[0]},backend:e,attrs:{dim:o}});const r=t[0].shape,i=t[0].dtype;t.forEach(d=>{vs(r,d.shape,"All tensors passed to stack must have matching shapes"),P(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],a=t.map(d=>{const l=$d({inputs:{input:d},backend:e,attrs:{dim:o}});return c.push(l),l}),u=T1({inputs:a,backend:e,attrs:{axis:o}});return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const oH={kernelName:nu,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rH{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,d)=>u[0]+t[d]+u[1]);const o=t.length,r=ke(o),i=e.map(u=>u[0]).join(","),c=e.map((u,d)=>u[0]+t[d]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${c});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${a}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iH{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((v,b)=>v[0]+t[b]+v[1]);const o=t.length,r=ke(o),i=e.map(v=>v[0]).join(","),c=e.map((v,b)=>v[0]+t[b]).join(","),a=$n("rc",o),u=$n("source",o),d=`${a[o-1]} < ${this.outputShape[o-1]}`,l=o===1?"source":`vec2(${u.slice(-2).join()})`,f=[`${r} rc = outputLoc;`,`${a[o-1]} += 1;
       if(${d}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${a[o-2]} += 1;
       if(${a[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${a[o-1]} += 1;
         if(${d}) {`],m=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let v=0,b=o===1?2:4;v<b;v++)x+=`
        ${f[v]}
        if (${m}) {
          result[${v}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${v}] = getChannel(getX(${u.join()}), ${l});
        }
      `;x+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${c});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{paddings:r,constantValue:i}=s;if(pt(o.shape)===0){const u=r.map((d,l)=>d[0]+o.shape[l]+d[1]);return wc({backend:e,attrs:{shape:u,value:i,dtype:o.dtype}})}const c=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iH(o.shape,r,i):new rH(o.shape,r,i),a=[[i]];return e.runWebGLProgram(c,[o],o.dtype,a)},aH={kernelName:su,backendName:"webgl",kernelFunc:q1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,lH=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Yu+`
  return result;
`,uH=vn({opSnippet:cH,packedOpSnippet:lH}),hH={kernelName:Fa,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{axis:r,keepDims:i}=s,c=o.shape.length,a=[],u=ie(r,o.shape);let d=u;const l=ze(d,c);let f=o;l!=null&&(f=Ze({inputs:{x:o},backend:e,attrs:{perm:l}}),d=je(d.length,c),a.push(f)),yn("prod",d,c);let m;if(e.shouldExecuteOnCPU([f])){const x=e.texData.get(f.dataId).values,{outVals:v,outShape:b,outDtype:w}=y3(f.shape,f.dtype,x,d);m=e.makeTensorInfo(b,w,v)}else{const[x,v]=pn(f.shape,d),b=pt(v),w=Et({inputs:{x:f},backend:e,attrs:{shape:[-1,b]}}),A=$p(o.dtype),C=Rr(w,A,"prod",e);m=Et({inputs:{x:C},backend:e,attrs:{shape:x}}),a.push(w),a.push(C)}if(i){a.push(m);const x=He(m.shape,u);m=Et({inputs:{x:m},backend:e,attrs:{shape:x}})}return a.forEach(x=>e.disposeIntermediateTensorInfo(x)),m}const pH={kernelName:ru,backendName:"webgl",kernelFunc:dH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=n=>{const{backend:t,attrs:e}=n,{start:s,stop:o,step:r,dtype:i}=e,c=v3(s,o,r,i);return t.makeTensorInfo([c.length],i,c)},fH={kernelName:lp,backendName:"webgl",kernelFunc:H1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH="return 1.0 / x;",gH=pe({opSnippet:mH}),xH={kernelName:Ma,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH=Cs+`
  return (x < 0.0) ? 0.0 : x;
`,vH=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_H=pe({opSnippet:yH,packedOpSnippet:vH}),bH={kernelName:Va,backendName:"webgl",kernelFunc:_H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=Cs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CH=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IH=pe({opSnippet:wH,packedOpSnippet:CH}),AH={kernelName:La,backendName:"webgl",kernelFunc:IH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(t,e,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,c,a,u]=t;this.outputShape=[i,e,s,u];const d=[o&&e>1?c-1:c,o&&s>1?a-1:a],l=[o&&e>1?e-1:e,o&&s>1?s-1:s];let f;r?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/l[0]},
          ${d[1]/l[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${a}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $H{constructor(t,e,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,c,a,u]=t;this.outputShape=[i,e,s,u];const d=[o&&e>1?c-1:c,o&&s>1?a-1:a],l=[o&&e>1?e-1:e,o&&s>1?s-1:s];let f;r?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/l[0]},
          ${d[1]/l[1]},
          ${d[1]/l[1]});
      const vec3 inputShapeRC = vec3(${c}.0, ${a}.0,
                                     ${a}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:i,size:c}=s,[a,u]=c,d=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $H(o.shape,a,u,r,i):new kH(o.shape,a,u,r,i);return e.runWebGLProgram(d,[o],"float32")}const NH={kernelName:cu,backendName:"webgl",kernelFunc:SH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TH{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,o,r]=e,[,i,c]=t,a=[s&&i>1?o-1:o,s&&c>1?r-1:r],u=[s&&i>1?i-1:i,s&&c>1?c-1:c],d=a[0]/u[0],l=a[1]/u[1],f=1/d,m=1/l,x=Math.ceil(f)*2+2,v=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${l});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${m});

        const int winHeight = int(${x});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:r}=t,{alignCorners:i}=s,c=new TH(r.shape,o.shape,i);return e.runWebGLProgram(c,[r],r.dtype)}const RH={kernelName:dp,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(t,e,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,c,a,u]=t;this.outputShape=[i,e,s,u];const d=[o&&e>1?c-1:c,o&&s>1?a-1:a],l=[o&&e>1?e-1:e,o&&s>1?s-1:s],f=o?"0.5":"0.0";let m;r?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/l[0]},
          ${d[1]/l[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${a}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BH{constructor(t,e,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,c,a,u]=t;this.outputShape=[i,e,s,u];const d=[o&&e>1?c-1:c,o&&s>1?a-1:a],l=[o&&e>1?e-1:e,o&&s>1?s-1:s],f=o?"0.5":"0.0";let m;r?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/l[0]},
          ${d[1]/l[1]},
          ${d[1]/l[1]});
      const vec3 inputShapeRC = vec3(${c}.0, ${a}.0,
                                     ${a}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:i,size:c}=s,[a,u]=c,d=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BH(o.shape,a,u,r,i):new DH(o.shape,a,u,r,i);return e.runWebGLProgram(d,[o],o.dtype)}const MH={kernelName:au,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VH{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,o,r]=e,[,i,c]=t,a=[s&&i>1?o-1:o,s&&c>1?r-1:r],u=[s&&i>1?i-1:i,s&&c>1?c-1:c],d=a[0]/u[0],l=a[1]/u[1],f=1/d,m=1/l,x=Math.ceil(f)*2+2,v=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${l});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${m});

        const int winHeight = int(${x});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float sourceFracRow =
              float(${a[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${a[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n){const{inputs:t,backend:e,attrs:s}=n,{images:o,dy:r}=t,{alignCorners:i}=s,c=new VH(r.shape,o.shape,i);return e.runWebGLProgram(c,[r],r.dtype)}const PH={kernelName:hp,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OH{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const o=c=>e.indexOf(c)!==-1&&t[c]!==1?`${t[c]} - coords[${c}] - 1`:`coords[${c}]`,r=t.map((c,a)=>o(a)).join(","),i=ke(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zH{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const o=$n("rc",s),r=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,c=ke(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${c} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${a(o.slice())};
          if(${r}){
            result.g = ${u(o.slice())};
          }
          if(${i}) {
            result.b = ${d(o.slice())};
            if(${r}) {
              result.a = ${l(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function a(x){return f(x)}function u(x){return x[s-1]="("+x[s-1]+" + 1)",f(x)}function d(x){return x[s-2]="("+x[s-2]+" + 1)",f(x)}function l(x){return x[s-1]="("+x[s-1]+" + 1)",x[s-2]="("+x[s-2]+" + 1)",f(x)}function f(x){const v=t.map((A,C)=>m(C,x)),b=v.join(","),w=v.slice(-2).join(",");return`getChannel(getX(${b}), vec2(${w}))`}function m(x,v){return e.indexOf(x)!==-1&&t[x]!==1?`${t[x]} - ${v[x]} - 1`:`${v[x]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{dims:r}=s,i=o.shape.length,c=ie(r,o.shape);if(i===0)return Hn({inputs:{x:o},backend:e});const a=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zH(o.shape,c):new OH(o.shape,c);return e.runWebGLProgram(a,[o],o.dtype)}const UH={kernelName:lu,backendName:"webgl",kernelFunc:WH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GH{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],o=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:Ap,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=t,c=e,a=new GH(s.shape,r),[u,d]=bf(i,s.shape[1],s.shape[2]),l=[[u,d,Math.sin(o),Math.cos(o)]];return c.runWebGLProgram(a,[s],s.dtype,l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,jH=pe({opSnippet:HH}),KH={kernelName:Pa,backendName:"webgl",kernelFunc:jH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH="return inversesqrt(x);",YH=pe({opSnippet:XH,cpuKernelImpl:_3}),JH={kernelName:Oa,backendName:"webgl",kernelFunc:YH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j1{constructor(t,e,s,o,r,i,c=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=ke(r.length),u=ke(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const l=`getIndices(${d})`;let f="";o===1?f="i":o===2&&(f="i, coords[1]");const m=`getUpdates(${f})`,x=e>1?"strides[j]":"strides";this.userCode=`
        ${a} strides = ${a}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${l});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n){const{inputs:t,backend:e,attrs:s}=n,{indices:o,updates:r}=t,{shape:i}=s,{sliceRank:c,numUpdates:a,sliceSize:u,strides:d,outputSize:l}=tc(r,o,i),f=[l/u,u];if(l===0)return e.makeTensorInfo(i,o.dtype);const m=Et({inputs:{x:o},backend:e,attrs:{shape:[a,c]}}),x=Et({inputs:{x:r},backend:e,attrs:{shape:[a,u]}}),v=e.makeTensorInfo([],"float32",new Float32Array([0])),b=new j1(a,c,m.shape.length,x.shape.length,d,f),w=e.runWebGLProgram(b,[x,m,v],x.dtype),A=Et({inputs:{x:w},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(v),A}const QH={kernelName:Ox,backendName:"webgl",kernelFunc:ZH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t6{constructor(t,e,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,c=dt().getNumber("WEBGL_VERSION")===2?r:i,a=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${c}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${a} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:o,values:r}=t,{side:i}=s,c=new t6(o.shape[0],o.shape[1],r.shape[1],i),a=[[o.shape[1]]];return e.runWebGLProgram(c,[o,r],"int32",a)}const n6={kernelName:zx,backendName:"webgl",kernelFunc:e6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s6{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let o,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",o="resRC";else{const c=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],u=[];for(let d=0;d<e.length;d++)u.push(`${c[d]}`),d<t&&a.push(`${c[d]}`);o=a.join(),r=u.join()}const i=ke(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:t,backend:e}=n,{condition:s,t:o,e:r}=t,i=new s6(s.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(i,[s,o,r],Un(o.dtype,r.dtype))}const r6={kernelName:uu,backendName:"webgl",kernelFunc:o6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Du};
  float scale = ${Bu};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,a6=pe({opSnippet:i6}),c6={kernelName:za,backendName:"webgl",kernelFunc:a6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=Ei+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,u6=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,h6=pe({opSnippet:l6,packedOpSnippet:u6,cpuKernelImpl:w3}),d6={kernelName:qa,backendName:"webgl",kernelFunc:h6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,f6=pe({opSnippet:p6}),m6={kernelName:Ga,backendName:"webgl",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6=Ei+`
  return sin(x);
`,x6=pe({opSnippet:g6}),y6={kernelName:Wa,backendName:"webgl",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_6=pe({opSnippet:v6}),b6={kernelName:Ua,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,C6=pe({opSnippet:w6}),I6={kernelName:Ha,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{blockShape:r,paddings:i}=s;P(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=r.reduce((w,A)=>w*A),a=[[0,0]];a.push(...i);for(let w=1+r.length;w<o.shape.length;++w)a.push([0,0]);const u=[],d=q1({inputs:{x:o},backend:e,attrs:{paddings:a,constantValue:0}}),l=rc(d.shape,r,c,!1),f=ic(l.length,r.length,!1),m=ac(d.shape,r,c,!1),x=Et({inputs:{x:d},backend:e,attrs:{shape:l}}),v=Ze({inputs:{x},backend:e,attrs:{perm:f}}),b=Et({inputs:{x:v},backend:e,attrs:{shape:m}});return u.push(d),u.push(x),u.push(v),u.forEach(w=>e.disposeIntermediateTensorInfo(w)),b},k6={kernelName:pu,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(n){const{inputs:t,backend:e}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const c=e.readSync(s.dataId),a=e.readSync(o.dataId),u=e.readSync(r.dataId),d=e.readSync(i.dataId)[0],[l,f,m,x,v]=I3(c,s.shape,s.dtype,a,o.dtype,u,d);return[e.makeTensorInfo(f,s.dtype,l),e.makeTensorInfo([f[0]],o.dtype,m),e.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(b=>Number(b)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const S6={kernelName:pp,backendName:"webgl",kernelFunc:$6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:o,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.readSync(o.dataId)),c=e.readSync(s.dataId),a=Array.from(e.readSync(r.dataId)),[u,d,l]=A3(c,s.shape,s.dtype,i,a);return[e.makeTensorInfo(d,s.dtype,u),e.makeTensorInfo([l.length],r.dtype,new Int32Array(l))]}const T6={kernelName:fp,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=e.readSync(s.dataId),c=e.readSync(o.dataId),a=e.readSync(r.dataId),[u,d]=g1(i,s.shape,s.dtype,c,a,!0);return e.makeTensorInfo(d,s.dtype,u)}const R6={kernelName:mp,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(n){const{inputs:t,backend:e}=n,{data:s,indices:o,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=e.readSync(s.dataId),c=e.readSync(o.dataId),a=e.readSync(r.dataId),[u,d]=g1(i,s.shape,s.dtype,c,a);return e.makeTensorInfo(d,s.dtype,u)}const B6={kernelName:gp,backendName:"webgl",kernelFunc:D6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=t,{outputShape:c}=s,{sliceRank:a,numUpdates:u,sliceSize:d,strides:l,outputSize:f}=tc(r,o,c),m=!1;if(r.dtype==="string"){const w=e.bufferSync(o),A=e.bufferSync(r),C=Do(e.readSync(i.dataId)[0]),I=b3(w,A,c,f,d,u,a,l,C,m);return e.makeTensorInfo(c,I.dtype,I.values)}const x=new j1(u,a,o.shape.length,r.shape.length,l,[f,1],m),v=e.runWebGLProgram(x,[r,o,i],r.dtype),b=Et({inputs:{x:v},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(v),b}const M6={kernelName:Wx,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{numOrSizeSplits:r,axis:i}=s,c=ie(i,o.shape)[0],a=Mf(o,r,c),u=o.shape.length,d=new Array(u).fill(0),l=o.shape.slice();return a.map(f=>{const m=[...l];m[c]=f;const x=Ri({inputs:{x:o},backend:e,attrs:{begin:d,size:m}});return d[c]+=f,x})}const L6={kernelName:fu,backendName:"webgl",kernelFunc:V6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hx="return sqrt(x);",P6=pe({opSnippet:hx,packedOpSnippet:hx,cpuKernelImpl:k3}),O6={kernelName:ja,backendName:"webgl",kernelFunc:P6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6="return x * x;",W6=pe({opSnippet:z6}),U6={kernelName:xp,backendName:"webgl",kernelFunc:W6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dx="return (a - b) * (a - b);",G6=vn({opSnippet:dx,packedOpSnippet:dx}),q6={kernelName:Ka,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6({inputs:n,attrs:t,backend:e}){const{x:s}=n,o=Cs+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new po(s.shape,o);return e.runWebGLProgram(r,[s],s.dtype)}const j6={kernelName:Qa,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K6{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,r=ke(s.length),i=ke(s.length);let c="";if(o===1)c="coords * strides + begin";else{let a=0;c=s.map((u,d)=>(a++,s.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${a-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{begin:r,end:i,strides:c,beginMask:a,endMask:u,ellipsisMask:d,newAxisMask:l,shrinkAxisMask:f}=s,{finalShapeSparse:m,finalShape:x,isIdentity:v,sliceDim0:b,isSimpleSlice:w,begin:A,end:C,strides:I}=Mp(o.shape,r,i,c,a,u,d,l,f);let N;if(v)N=Et({inputs:{x:o},backend:e,attrs:{shape:x}});else if(b||w){P(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const B=Dp(A,C,I),M=Ri({inputs:{x:o},backend:e,attrs:{begin:A,size:B}});N=Et({inputs:{x:M},backend:e,attrs:{shape:x}}),e.disposeIntermediateTensorInfo(M)}else if(e.shouldExecuteOnCPU([o])){const M=e.readSync(o.dataId),U=re(o.shape,o.dtype,M),G=$3(m,U,I,A);N=e.makeTensorInfo(x,o.dtype,G.values)}else{const M=new K6(A,I,m);N=e.runWebGLProgram(M,[o],o.dtype)}const E=Et({inputs:{x:N},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(N),E}const Y6={kernelName:yp,backendName:"webgl",kernelFunc:X6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(n){const{inputs:t,backend:e,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:c,padWidth:a,preserveShortSequences:u}=s,{data:d,dataSplits:l}=t,f=e.readSync(d.dataId),m=e.readSync(l.dataId),[x,v]=S3(f,m,o,r,i,c,a,u);return[e.makeTensorInfo([x.length],"string",x),e.makeTensorInfo(l.shape,"int32",v)]}const Z6={kernelName:vp,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const c=e.readSync(r.dataId),a=e.readSync(i.dataId)[0],[u,d,l]=N3(c,a,o),f=d.length;return[e.makeTensorInfo([f,2],"int32",u),e.makeTensorInfo([f],"string",d),e.makeTensorInfo([2],"int32",new Int32Array(l))]}const tj={kernelName:_p,backendName:"webgl",kernelFunc:Q6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:o}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(r.dataId),c=T3(i,o);return e.makeTensorInfo(r.shape,"int32",c)}const nj={kernelName:bp,backendName:"webgl",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj="return tan(x);",oj=pe({opSnippet:sj}),rj={kernelName:Ya,backendName:"webgl",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,aj=pe({opSnippet:ij}),cj={kernelName:Ja,backendName:"webgl",kernelFunc:aj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lj{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const o=ke(this.rank),r=uj(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function uj(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${e[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{reps:r}=s;if(o.dtype==="string"||o.shape.length>5){const a=e.readSync(o.dataId),u=o.dtype==="string"?a.map(f=>Do(f)):a,d=re(o.shape,o.dtype,u),l=R3(d,r);return e.makeTensorInfo(l.shape,l.dtype,l.values)}const i=new lj(o.shape,r);return e.runWebGLProgram(i,[o],o.dtype)}const hj={kernelName:Za,backendName:"webgl",kernelFunc:K1};class dj{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class pj{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function px(n){let t=1;for(;t<n;)t*=2;return t}function fj(n){const{inputs:t,backend:e,attrs:s}=n,{x:o}=t,{k:r,sorted:i}=s,c=dt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),a=dt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,d=u[u.length-1];if(e.shouldExecuteOnCPU([o])||d<c||r>a){const G=e.readSync(o.dataId),[q,tt]=D3(G,u,o.dtype,r,i);return[e.makeTensorInfo(q.shape,q.dtype,q.values),e.makeTensorInfo(tt.shape,tt.dtype,tt.values)]}if(r===0)return u[u.length-1]=0,[e.makeTensorInfo(u,o.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(d===1)return[o,wc({attrs:{shape:u,dtype:"int32",value:0},backend:e})];const l=e.texData.get(o.dataId),f=l!==null&&l.isPacked,m=f?e.unpackTensor(o):o,v=pt(u)/d,b=Et({inputs:{x:m},attrs:{shape:[v,d]},backend:e});f&&Jo(e,m);const w=px(r),A=px(d);let C=null;const I=()=>C===null?[b,b]:[b,C],N=(G,q,tt)=>{const et=I(),Q=new dj(tt),nt=[[d],[C===null?1:0],[Number.NEGATIVE_INFINITY],[G],[q]],Z=C;C=e.runWebGLProgram(Q,et,"int32",nt),Jo(e,Z)};for(let G=1;G<w;G*=2){const q=G*2;for(let tt=G;tt>=1;tt/=2)N(q,tt,[v,A])}for(let G=A;G>w;G/=2){const q=I(),tt=new pj([v,G/2]),Q=[[d],[C===null?1:0],[w]],it=C;C=e.runWebGLProgram(tt,q,"int32",Q),Jo(e,it);const nt=w/2,Z=nt*2;for(let lt=nt;lt>=1;lt/=2)N(Z,lt,C.shape)}let E=C;C=Ri({inputs:{x:C},backend:e,attrs:{begin:0,size:[v,r]}}),Jo(e,E);let B=P1({inputs:{x:b,indices:C},backend:e,attrs:{axis:1,batchDims:1}});Jo(e,b);const M=u.slice(0,-1);M.push(r),E=C,C=Et({inputs:{x:C},attrs:{shape:M},backend:e}),Jo(e,E);const U=B;return B=Et({inputs:{x:B},attrs:{shape:M},backend:e}),Jo(e,U),[B,C]}const mj={kernelName:wp,backendName:"webgl",kernelFunc:fj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gj{constructor(t,e,s,o,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const c=s==="nearest"?1:2;let a;switch(o){case"constant":a=1;break;case"reflect":a=2;break;case"wrap":a=3;break;case"nearest":a=4;break;default:a=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${a} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${a} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${a} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${c} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(n){const{inputs:t,backend:e,attrs:s}=n,{image:o,transforms:r}=t,{interpolation:i,fillMode:c,fillValue:a,outputShape:u}=s,[d,l,f,m]=o.shape,[x,v]=u??[l,f],b=[d,x,v,m],w=new gj(l,f,i,c,a,b);return e.runWebGLProgram(w,[o,r],"float32")}const yj={kernelName:Cp,backendName:"webgl",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n){const{inputs:t,attrs:e,backend:s}=n,{axis:o}=e,{x:r}=t;yc(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:c,outputShape:a,indices:u}=B3(i,o,r.shape,r.dtype);return[s.makeTensorInfo(a,r.dtype,c),s.makeTensorInfo([u.length],"int32",u)]}const _j={kernelName:Ip,backendName:"webgl",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(n){const{inputs:t,backend:e,attrs:s}=n,{value:o}=t;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o,c=i.shape.length,a=o.shape[r],u=new Array(c-1);let d=0;for(let v=0;v<c;v++)v!==r&&(u[d++]=i.shape[v]);const l=[],f=new Array(c).fill(0),m=i.shape.slice();m[r]=1;const x=new Array(a);for(let v=0;v<x.length;v++){f[r]=v;const b=Ri({inputs:{x:i},backend:e,attrs:{begin:f,size:m}}),w=Et({inputs:{x:b},backend:e,attrs:{shape:u}});x[v]=w,l.push(b)}return l.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const wj={kernelName:gu,backendName:"webgl",kernelFunc:bj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cj{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,o=t.batchSize,r=t.inSize,i=t.numSegments,c=i*Math.ceil(r/s);this.outputShape=[o,c];const a="0.0",u="sumValue",d=Math.floor(s/4)*4,l=s%4,f=`
        sumValue += dot(values, segFilter);
    `;let m="";r%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let x="";r%s>0&&(x=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${a};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${x}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${d};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(n){const{inputs:t,backend:e,attrs:s}=n,{x:o,segmentIds:r}=t,{numSegments:i}=s,c=o.shape.length,a=[];let u=0;const d=ze([u],c);let l=o;d!=null&&(l=Ze({inputs:{x:o},backend:e,attrs:{perm:d}}),a.push(l),u=je(1,c)[0]);const f=Ev(l.shape,u,i),m=pt([l.shape[u]]),x=Et({inputs:{x:l},backend:e,attrs:{shape:[-1,m]}});a.push(x);const v=$p(o.dtype),b=(I,N,E,B,M)=>{const U=I.shape[0],G=I.shape[1],q=Tv(G,M),tt={windowSize:q,inSize:G,batchSize:U,numSegments:M},et=new Cj(tt,N),Q=e.compileAndRun(et,[I,E],B);if(a.push(Q),Q.shape[1]===M)return Q;const it=H1({backend:e,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),nt=K1({inputs:{x:it},backend:e,attrs:{reps:[G/q]}});return a.push(it),a.push(nt),b(Q,N,nt,B,M)},w=b(x,"unsortedSegmentSum",r,v,i),A=Et({inputs:{x:w},backend:e,attrs:{shape:f}});let C=A;if(d!=null){a.push(A);const I=Wo(d);C=Ze({inputs:{x:C},backend:e,attrs:{perm:I}})}return a.forEach(I=>e.disposeIntermediateTensorInfo(I)),C}const Aj={kernelName:xu,backendName:"webgl",kernelFunc:Ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=[$z,Nz,Rz,Fz,Vz,Oz,Wz,Gz,Kz,Yz,Qz,nW,rW,lW,dW,fW,gW,_W,wW,IW,SW,FW,VW,PW,qW,jW,JW,cz,t4,r4,l4,m4,x4,v4,b4,C4,k4,N4,R4,B4,M4,L4,z4,U4,j4,X4,Z4,eU,sU,aU,hU,mU,yU,bU,wU,IU,kU,SU,TU,RU,MU,PU,WU,GU,jU,YU,tG,oG,az,iG,s4,lG,dG,mG,uz,vG,CG,AG,NG,RG,MG,PG,UG,jG,YG,ZG,nq,oq,iq,uq,dq,fq,gq,yq,wq,kq,Tq,Lq,mz,Wq,qq,Kq,Jq,zW,tH,nH,oH,aH,hH,dz,pH,fH,WW,Bq,xH,bH,AH,xz,NH,RH,MH,PH,UH,qH,KH,JH,QH,n6,r6,c6,d6,m6,y6,b6,DW,Mq,I6,k6,S6,T6,R6,B6,M6,L6,O6,U6,q6,j6,Y6,Z6,tj,nj,Fq,Iz,rj,cj,hj,mj,yj,Az,_j,wj,Aj,eH];for(const n of kj)Gx(n);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $j{constructor(t,e){this.data=[],this.states=[],this.rewards=[],this.nextStates=[],this.stateShape=t,this.qvalShape=e}addData(t,e,s,o){Math.max(...e)>0&&this.data.length<1e4?(this.states.push(t),this.rewards.push(e.map(r=>r+s)),this.nextStates.push(o)):this.states.length>1e3&&(this.states.push(t),this.rewards.push(e.map(r=>r+s)),this.nextStates.push(o),this.states.shift(),this.rewards.shift(),this.nextStates.shift())}randomIndexs(t){return Array(t).fill(0).map(()=>Math.floor(Math.random()*this.states.length))}getBatch(t){if(this.states.length>0){var e=this.randomIndexs(t);e.map(i=>this.data[i]);var s=e.map(i=>this.states[i]),o=e.map(i=>this.rewards[i]),r=e.map(i=>this.nextStates[i]);return[s,o,r]}else{var s=[Array(t).fill(Array(this.stateShape).fill(0)),Array(t).fill(Array(this.qvalShape).fill(0)),Array(t).fill(Array(this.stateShape).fill(0))];return s}}}class Sj{constructor(t,e){this.inputShape=t,this.model=this.createModel(t,e),this.target=this.createModel(t,e),this.trainingDataInputs=Ge([1,t]),this.trainingDataOutputs=Ge([1,e]),this.index=0,this.epsilon=.05,this.outputShape=e,this.oldState=Ge([1,t]),this.memoryBuffer=new $j(t,e),this.model.compile({optimizer:Qo.adam(),loss:VS.meanSquaredError}),this.trainModel()}storeData(t,e,s,o){this.memoryBuffer.addData(t,e,s,o)}trainModel(){var[t,e,s]=this.memoryBuffer.getBatch(50),o=at(()=>Pi(t)),r=at(()=>Pi(s)),i=at(()=>this.target.predict(r));this.model.fit(o,i.add(Pi(e)).mul(.5)).then(c=>{console.log("trained",c.history.loss),this.target.setWeights(this.model.getWeights()),this.trainModel()})}getQval(t){var e=Hi(t,[t.length,this.inputShape]),s,o;if(Math.random()>this.epsilon)o=at(()=>this.model.predict(e)),s=o.dataSync();else{let r=Array(this.outputShape).fill(0).map(()=>Math.random()-.5);o=Pi([r]),s=r}return s}createModel(t,e){var s;return s=CR(),s.add(Mg({inputShape:[t],units:8,activation:"tanh",useBias:!0})),s.add(Mg({units:e,useBias:!0,activation:"tanh"})),s}}var tr=(n=>(n.detectionCircle="detectionCircle",n.wisker="wisker",n.ball="ball",n.feedingCircle="feedingCircle",n))(tr||{});function Nj(n,t){let e=[];for(let s=0;s<n;s++)e.push(ce.exports.Vec2(Math.sin(Math.PI*s*(2/n))*t,Math.cos(Math.PI*s*(2/n))*t));return e}function Tj(n,t,e,s){const o=n.createDynamicBody({position:ce.exports.Vec2(e+(s[0]-e-e)*Math.random(),e+(s[1]-e-e)*Math.random()),linearVelocity:ce.exports.Vec2(20*Math.random()-10,20*Math.random()-10),userData:["ball",t]}),r=ce.exports.Circle(e);return o.createFixture(r,{density:1,friction:0,filterGroupIndex:-1,userData:["ball",t],restitution:1}),o}function Ej(n,t,e,s){var o=ce.exports.Vec2(t+(e[0]-t-t)*Math.random(),t+(e[1]-t-t)*Math.random());const r=n.createDynamicBody({position:o});s.forEach((a,u)=>{r.createFixture(ce.exports.Edge(ce.exports.Vec2(0,0),a),{isSensor:!0,density:0,friction:0,restitution:0,userData:["wisker",u]})});const i=ce.exports.Circle(t);r.createFixture(i,{density:0,friction:0,isSensor:!0,restitution:1,userData:["feedingCircle"]});const c=ce.exports.Circle(t/2);return r.createFixture(c,{density:0,friction:0,restitution:0,userData:[0]}),r}const Rj=Fw("<div><canvas></canvas><button> get weights</button></div>"),Dj=n=>{let t,e,s=0;const o=60,r=10;let i=[10,20],c=1,a=[50,50],u=[],d=20,l=10,f=null,m=c*1.5,x=c*.5,v=12,b=new Array(v).fill(0),w=m*6;const A=Nj(v,w),C=new ce.exports.World(ce.exports.Vec2(0,0));C.createBody().createFixture(ce.exports.Edge(ce.exports.Vec2(0,a[1]),ce.exports.Vec2(a[0],a[1]))),C.createBody().createFixture(ce.exports.Edge(ce.exports.Vec2(a[0],0),ce.exports.Vec2(a[0],a[1]))),C.createBody().createFixture(ce.exports.Edge(ce.exports.Vec2(0,0),ce.exports.Vec2(0,a[1]))),C.createBody().createFixture(ce.exports.Edge(ce.exports.Vec2(0,0),ce.exports.Vec2(a[0],0)));for(let nt=0;nt<l;nt++)u.push(Tj(C,nt,c,a));f=Ej(C,m,a,A);function I(nt,Z){switch(nt){case"ArrowRight":{Z==="on"?f.setLinearVelocity(ce.exports.Vec2(d,f.getLinearVelocity().y),f.getPosition()):Z==="off"&&f.setLinearVelocity(ce.exports.Vec2(0,f.getLinearVelocity().y),f.getPosition());break}case"ArrowLeft":{Z==="on"?f.setLinearVelocity(ce.exports.Vec2(-d,f.getLinearVelocity().y),f.getPosition()):Z==="off"&&f.setLinearVelocity(ce.exports.Vec2(0,f.getLinearVelocity().y),f.getPosition());break}case"ArrowDown":{Z==="on"?f.setLinearVelocity(ce.exports.Vec2(f.getLinearVelocity().x,d),f.getPosition()):Z==="off"&&f.setLinearVelocity(ce.exports.Vec2(f.getLinearVelocity().x,0),f.getPosition());break}case"ArrowUp":{Z==="on"?f.setLinearVelocity(ce.exports.Vec2(f.getLinearVelocity().x,-d),f.getPosition()):Z==="off"&&f.setLinearVelocity(ce.exports.Vec2(f.getLinearVelocity().x,0),f.getPosition());break}}}document.addEventListener("keyup",nt=>{switch(nt.key){case"ArrowRight":{I(nt.key,"off");break}case"ArrowLeft":{I(nt.key,"off");break}case"ArrowDown":{I(nt.key,"off");break}case"ArrowUp":{I(nt.key,"off");break}}}),document.addEventListener("keydown",nt=>{switch(nt.key){case"ArrowRight":{I(nt.key,"on");break}case"ArrowLeft":{I(nt.key,"on");break}case"ArrowDown":{I(nt.key,"on");break}case"ArrowUp":{I(nt.key,"on");break}}});const N=new Sj(v,2);function E(nt){f.setLinearVelocity(ce.exports.Vec2(nt[0]*d,nt[1]*d),f.getPosition())}function B(nt){u[nt].setPosition(ce.exports.Vec2(m+(a[0]-m-m)*Math.random(),m+(a[1]-m-m)*Math.random())),u[nt].setLinearVelocity(ce.exports.Vec2(20*Math.random()-10,20*Math.random()-10))}const M=1/o,U=8,G=3;var q=[...b],tt=new Array(2),et=0,Q;function it(nt){const Z=t?.getContext("2d")??null;if(Z&&nt>s+1e3/o){for(Z.clearRect(0,0,a[0]*r,a[1]*r),Q=f.getContactList(),et=0;Q;){if(Q&&Q.other.m_type==="dynamic"&&Q.contact.m_touchingFlag){var lt=Q.other.m_userData[1];Q.contact.m_fixtureA.m_userData[0]===tr.feedingCircle||Q.contact.m_fixtureB.m_userData[0]===tr.feedingCircle?(B(lt),et++):Q.contact.m_fixtureA.m_userData[0]===tr.wisker&&Q.contact.m_fixtureB.m_userData[0]===tr.ball?b[Q.contact.m_fixtureA.m_userData[1]]=w/ce.exports.Vec2.distance(u[lt].getPosition(),f.getPosition()):Q.contact.m_fixtureA.m_userData[0]===tr.ball&&Q.contact.m_fixtureB.m_userData[0]===tr.wisker&&(b[Q.contact.m_fixtureB.m_userData[1]]=w/ce.exports.Vec2.distance(u[lt].getPosition(),f.getPosition()))}Q=Q.next}N.storeData(q,tt,et,b),tt=N.getQval([b]),E(tt),q=[...b],C.step(M,U,G),Z.fillStyle="green",u.forEach(ct=>{Z.strokeStyle="#000000",Z.beginPath(),i=[ct.getPosition().x,ct.getPosition().y],Z.arc(i[0]*r,i[1]*r,c*r,0,2*Math.PI,!1),Z.fill()}),Z.beginPath(),i=[f.getPosition().x,f.getPosition().y],Z.arc(i[0]*r,i[1]*r,m*r,0,2*Math.PI,!1),Z.stroke(),Z.strokeStyle="#black",A.forEach((ct,ut)=>{b[ut]?(b[ut]=0,Z.strokeStyle="#FF0000"):Z.strokeStyle="#000000",Z.beginPath(),Z.moveTo(i[0]*r,i[1]*r),Z.lineTo((ct.x+i[0])*r,(ct.y+i[1])*r),Z.stroke()}),Z.fillStyle="black",Z.beginPath(),Z.arc(i[0]*r,i[1]*r,x*r,0,2*Math.PI,!1),Z.fill(),e=requestAnimationFrame(it)}}return $w(()=>{e=requestAnimationFrame(it),console.log("frame:",e),Sw(()=>cancelAnimationFrame(e))}),(()=>{const nt=Rj.cloneNode(!0),Z=nt.firstChild,lt=Z.nextSibling,ct=t;return typeof ct=="function"?ct(Z):t=Z,Z.style.setProperty("border","1px solid #d3d3d3"),lt.$$click=()=>{console.log(N.trainingDataInputs)},qc(ut=>{const gt=a[0]*r,vt=a[1]*r;return gt!==ut._v$&&Bm(Z,"width",ut._v$=gt),vt!==ut._v$2&&Bm(Z,"height",ut._v$2=vt),ut},{_v$:void 0,_v$2:void 0}),nt})()};Mw(["click"]);Bw(()=>Rw(Dj,{}),document.getElementById("root"));
